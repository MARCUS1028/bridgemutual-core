{
  "contractName": "IPolicyBook",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insuranceContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "enum IPolicyBookFabric.ContractType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "_quoteStrategy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssetsWithBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_shieldAssetBalance",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shieldAssetsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensAmount",
          "type": "uint256"
        }
      ],
      "name": "addShieldTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicyFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokensToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_daiTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "rewardForUnclaimedExpiredPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stats",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "enum IPolicyBookFabric.ContractType",
          "name": "_contractType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_maxCapacities",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDaiLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_annualProfitYields",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensAmount\",\"type\":\"uint256\"}],\"name\":\"addShieldTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicyFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"enum IPolicyBookFabric.ContractType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_daiTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_quoteStrategy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"rewardForUnclaimedExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shieldAssetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssetsWithBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shieldAssetBalance\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stats\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"enum IPolicyBookFabric.ContractType\",\"name\":\"_contractType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_maxCapacities\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDaiLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_annualProfitYields\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\"}},\"addLiquidityFor(address,uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\",\"_liquidityHolderAddr\":\"is address of address to assign cover\"}},\"addShieldTokens(address,uint256)\":{\"params\":{\"_tokenAddress\":\"is address of reward token to add\",\"_tokensAmount\":\"is max amount of reward to operate on\"},\"returns\":{\"_success\":\"is indicator if purchase is successful, it will throw exception if unsuccessful\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"buyPolicy(uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover  \",\"_durationSeconds\":\"is number of seconds to cover\"}},\"buyPolicyFor(address,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover  \",\"_durationSeconds\":\"is number of seconds to cover\",\"_policyHolderAddr\":\"is address of address to assign cover\"}},\"contractType()\":{\"returns\":{\"_type\":\"is type of contract\"}},\"getQuote(uint256,uint256)\":{\"params\":{\"_durationSeconds\":\"is number of seconds to cover\",\"_tokens\":\"is number of tokens to cover\"},\"returns\":{\"_daiTokens\":\"is amount of DAI policy costs\"}},\"insuranceContractAddress()\":{\"returns\":{\"_contract\":\"is address of covered contract\"}},\"quoteStrategy()\":{\"returns\":{\"_quoteStrategy\":\"is address of Quote strategy contract used to calculate quote\"}},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"params\":{\"_policyId\":\"is id of policy to get reward for, reward will be sent to policy holder\"}},\"shieldAssets(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsCount()\":{\"returns\":{\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsWithBalance(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssetBalance\":\"is tokens amount of shield assets allocated to Policy Book,  to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\",\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"stats()\":{\"returns\":{\"_annualProfitYields\":\"is its APY\",\"_contractType\":\"is a type of insured contract\",\"_maxCapacities\":\"is a max token amount that a user can buy\",\"_name\":\"is the name of PolicyBook\",\"_totalDaiLiquidity\":\"is PolicyBook's liquidity\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdrawLiquidity(uint256)\":{\"params\":{\"_tokensToWithdraw\":\"is amount of DAI tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256)\":{\"notice\":\"Let user to add liquidity by supplying DAI, access: ANY\"},\"addLiquidityFor(address,uint256)\":{\"notice\":\"Let user to add liqiudity for another user by supplying DAI, access: ANY\"},\"addShieldTokens(address,uint256)\":{\"notice\":\"Adds shield tokens to contract, access: ANY\"},\"buyPolicy(uint256,uint256)\":{\"notice\":\"Let user to buy policy by supplying DAI, access: ANY\"},\"buyPolicyFor(address,uint256,uint256)\":{\"notice\":\"Let user to buy policy for another user by supplying DAI, access: ANY\"},\"contractType()\":{\"notice\":\"Returns type of contract this PolicyBook covers, access: ANY\"},\"getQuote(uint256,uint256)\":{\"notice\":\"Let user to calculate policy cost in DAI, access: ANY\"},\"insuranceContractAddress()\":{\"notice\":\"Returns address of contract this PolicyBook covers, access: ANY\"},\"quoteStrategy()\":{\"notice\":\"Returns quote strategy defined during creation of PolicyBook, access: ANY\"},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"notice\":\"Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\"},\"shieldAssets(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added to PolicyBook, access: ANY\"},\"shieldAssetsCount()\":{\"notice\":\"Returns number of shield assets added, access: ANY\"},\"shieldAssetsWithBalance(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\"},\"stats()\":{\"notice\":\"Getting stats, access: ANY\"},\"withdrawLiquidity(uint256)\":{\"notice\":\"Let user to withdraw deposited liqiudity, access: ANY\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":\"IPolicyBook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x07010d871b04ca5fe82844bea1dab5778c933ac0381a671ec2f84b331668e85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5552927e83b91573b526a0fad2aef3a8f9b2859d1c1d6d1e37c3b56a4a8496b\",\"dweb:/ipfs/Qmaku3hwmDHqUMnX2M3E1CuQmrusfM9eALZeJ82Tj4m7gc\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x5dffaaf6e0ece56b03c76eb5d57e758485fc2cca0c46913a2ee2135a5c518493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2aca8141f40390bbd21022d61fac04651cb3ff91dc7702c2654d36d79b188c\",\"dweb:/ipfs/Qmf6xXSP2yasVTD9RaG1rgnY85bPCAtNnBsXxzA1bvHgJa\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\n\nimport \"./IPolicyBookFabric.sol\";\n\ninterface IPolicyBook is IERC20 {\n  // @TODO: should we let DAO to change contract address?\n  /// @notice Returns address of contract this PolicyBook covers, access: ANY\n  /// @return _contract is address of covered contract\n  function insuranceContractAddress() external view returns (address _contract);\n\n  /// @notice Returns type of contract this PolicyBook covers, access: ANY\n  /// @return _type is type of contract\n  function contractType() external view returns (IPolicyBookFabric.ContractType _type);\n\n  /// @notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n  /// @return _quoteStrategy is address of Quote strategy contract used to calculate quote\n  function quoteStrategy() external view returns (address _quoteStrategy);\n\n  // @TODO: Vector Attack - Hacker? can add too many shield tokens, \n  // that will be impossible to calculate tokens portion to give to Policy giver\n  /// @notice Returns list of shield assets added to PolicyBook, access: ANY\n  /// @param _offset is starting item in array to return array from\n  /// @param _limit is number of policy books to returns from _offset\n  /// @return _shieldAssetsCount is number of added shield assets\n  /// @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n  function shieldAssets(uint256 _offset, uint256 _limit)\n    external\n    view\n    returns (uint256 _shieldAssetsCount, address[] memory _shieldAssets);\n\n  /// @notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n  /// @param _offset is starting item in array to return array from\n  /// @param _limit is number of policy books to returns from _offset\n  /// @return _shieldAssetsCount is number of added shield assets\n  /// @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n  /// @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, \n  /// to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\n  function shieldAssetsWithBalance(uint256 _offset, uint256 _limit)\n    external\n    view\n    returns (\n      uint256 _shieldAssetsCount,\n      address[] memory _shieldAssets,\n      uint256[] memory _shieldAssetBalance\n    );\n\n  /// @notice Returns number of shield assets added, access: ANY\n  /// @return _shieldAssetsCount is number of added shield assets\n  function shieldAssetsCount() external view returns (uint256 _shieldAssetsCount);\n\n  /// @notice Adds shield tokens to contract, access: ANY\n  /// @param _tokenAddress is address of reward token to add\n  /// @param _tokensAmount is max amount of reward to operate on\n  /// @return _success is indicator if purchase is successful, it will throw exception if unsuccessful\n  function addShieldTokens(address _tokenAddress, uint256 _tokensAmount) external returns (bool _success);\n\n  /// @notice Let user to buy policy by supplying DAI, access: ANY\n  /// @param _durationSeconds is number of seconds to cover\n  /// @param _coverTokens is number of tokens to cover  \n  function buyPolicy(\n    uint256 _durationSeconds,\n    uint256 _coverTokens\n  ) external;\n\n  /// @notice Let user to buy policy for another user by supplying DAI, access: ANY\n  /// @param _policyHolderAddr is address of address to assign cover\n  /// @param _durationSeconds is number of seconds to cover\n  /// @param _coverTokens is number of tokens to cover  \n  function buyPolicyFor(\n    address _policyHolderAddr,\n    uint256 _durationSeconds,\n    uint256 _coverTokens\n  ) external;\n\n  /// @notice Let user to add liquidity by supplying DAI, access: ANY\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidity(uint256 _liqudityAmount) external;\n\n  /// @notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n  /// @param _liquidityHolderAddr is address of address to assign cover\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidityFor(address _liquidityHolderAddr, uint256 _liqudityAmount) external;\n\n  /// @notice Let user to withdraw deposited liqiudity, access: ANY\n  /// @param _tokensToWithdraw is amount of DAI tokens to withdraw\n  function withdrawLiquidity(uint256 _tokensToWithdraw) external;\n\n  /// @notice Let user to calculate policy cost in DAI, access: ANY\n  /// @param _durationSeconds is number of seconds to cover\n  /// @param _tokens is number of tokens to cover\n  /// @return _daiTokens is amount of DAI policy costs\n  function getQuote(uint256 _durationSeconds, uint256 _tokens) external view returns (uint256 _daiTokens);\n\n  /// @notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n  /// @param _policyId is id of policy to get reward for, reward will be sent to policy holder\n  function rewardForUnclaimedExpiredPolicy(uint256 _policyId) external;\n\n  /// @notice Getting stats, access: ANY\n  /// @return _name is the name of PolicyBook\n  /// @return _contractType is a type of insured contract\n  /// @return _maxCapacities is a max token amount that a user can buy\n  /// @return _totalDaiLiquidity is PolicyBook's liquidity\n  /// @return _annualProfitYields is its APY\n  function stats()\n    external\n    view\n    returns (\n      string memory _name,\n      IPolicyBookFabric.ContractType _contractType,\n      uint256 _maxCapacities,\n      uint256 _totalDaiLiquidity,\n      uint256 _annualProfitYields\n    );\n}\n",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
    "exportedSymbols": {
      "IERC1155": [
        5848
      ],
      "IERC165": [
        5457
      ],
      "IERC20": [
        6485
      ],
      "IPolicyBook": [
        3066
      ],
      "IPolicyBookFabric": [
        3115
      ]
    },
    "id": 3067,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2928,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "id": 2929,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2930,
        "nodeType": "ImportDirective",
        "scope": 3067,
        "sourceUnit": 6486,
        "src": "91:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 2931,
        "nodeType": "ImportDirective",
        "scope": 3067,
        "sourceUnit": 5849,
        "src": "148:60:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol",
        "file": "./IPolicyBookFabric.sol",
        "id": 2932,
        "nodeType": "ImportDirective",
        "scope": 3067,
        "sourceUnit": 3116,
        "src": "210:33:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2933,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6485,
              "src": "270:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6485",
                "typeString": "contract IERC20"
              }
            },
            "id": 2934,
            "nodeType": "InheritanceSpecifier",
            "src": "270:6:9"
          }
        ],
        "contractDependencies": [
          6485
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3066,
        "linearizedBaseContracts": [
          3066,
          6485
        ],
        "name": "IPolicyBook",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2935,
              "nodeType": "StructuredDocumentation",
              "src": "339:130:9",
              "text": "@notice Returns address of contract this PolicyBook covers, access: ANY\n @return _contract is address of covered contract"
            },
            "functionSelector": "14c179c0",
            "id": 2940,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "insuranceContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:2:9"
            },
            "returnParameters": {
              "id": 2939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2938,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2940,
                  "src": "531:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "530:19:9"
            },
            "scope": 3066,
            "src": "472:78:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2941,
              "nodeType": "StructuredDocumentation",
              "src": "554:112:9",
              "text": "@notice Returns type of contract this PolicyBook covers, access: ANY\n @return _type is type of contract"
            },
            "functionSelector": "cb2ef6f7",
            "id": 2946,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "690:2:9"
            },
            "returnParameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2944,
                  "mutability": "mutable",
                  "name": "_type",
                  "nodeType": "VariableDeclaration",
                  "scope": 2946,
                  "src": "716:36:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$3073",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3073,
                    "src": "716:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$3073",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:38:9"
            },
            "scope": 3066,
            "src": "669:85:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2947,
              "nodeType": "StructuredDocumentation",
              "src": "758:176:9",
              "text": "@notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n @return _quoteStrategy is address of Quote strategy contract used to calculate quote"
            },
            "functionSelector": "7cd0fc9b",
            "id": 2952,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "959:2:9"
            },
            "returnParameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2950,
                  "mutability": "mutable",
                  "name": "_quoteStrategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2952,
                  "src": "985:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "985:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "984:24:9"
            },
            "scope": 3066,
            "src": "937:72:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2953,
              "nodeType": "StructuredDocumentation",
              "src": "1163:379:9",
              "text": "@notice Returns list of shield assets added to PolicyBook, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers"
            },
            "functionSelector": "79fac08c",
            "id": 2965,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2955,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2965,
                  "src": "1567:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2957,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2965,
                  "src": "1584:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1566:33:9"
            },
            "returnParameters": {
              "id": 2964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2960,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2965,
                  "src": "1635:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1635:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2963,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 2965,
                  "src": "1663:30:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2961,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1663:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2962,
                    "nodeType": "ArrayTypeName",
                    "src": "1663:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:60:9"
            },
            "scope": 3066,
            "src": "1545:150:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2966,
              "nodeType": "StructuredDocumentation",
              "src": "1699:608:9",
              "text": "@notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, \n to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset"
            },
            "functionSelector": "0e82da53",
            "id": 2981,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsWithBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "2343:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2343:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2970,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "2360:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2342:33:9"
            },
            "returnParameters": {
              "id": 2980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2973,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "2418:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2976,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "2452:30:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2974,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2452:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2975,
                    "nodeType": "ArrayTypeName",
                    "src": "2452:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2979,
                  "mutability": "mutable",
                  "name": "_shieldAssetBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2981,
                  "src": "2490:36:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2977,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2490:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2978,
                    "nodeType": "ArrayTypeName",
                    "src": "2490:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2410:122:9"
            },
            "scope": 3066,
            "src": "2310:223:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2982,
              "nodeType": "StructuredDocumentation",
              "src": "2537:128:9",
              "text": "@notice Returns number of shield assets added, access: ANY\n @return _shieldAssetsCount is number of added shield assets"
            },
            "functionSelector": "2c865d6c",
            "id": 2987,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2694:2:9"
            },
            "returnParameters": {
              "id": 2986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2985,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2987,
                  "src": "2720:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:28:9"
            },
            "scope": 3066,
            "src": "2668:80:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2988,
              "nodeType": "StructuredDocumentation",
              "src": "2752:284:9",
              "text": "@notice Adds shield tokens to contract, access: ANY\n @param _tokenAddress is address of reward token to add\n @param _tokensAmount is max amount of reward to operate on\n @return _success is indicator if purchase is successful, it will throw exception if unsuccessful"
            },
            "functionSelector": "188ff854",
            "id": 2997,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addShieldTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2997,
                  "src": "3064:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3064:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2992,
                  "mutability": "mutable",
                  "name": "_tokensAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2997,
                  "src": "3087:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3063:46:9"
            },
            "returnParameters": {
              "id": 2996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2995,
                  "mutability": "mutable",
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 2997,
                  "src": "3128:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2994,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3127:15:9"
            },
            "scope": 3066,
            "src": "3039:104:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2998,
              "nodeType": "StructuredDocumentation",
              "src": "3147:181:9",
              "text": "@notice Let user to buy policy by supplying DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover  "
            },
            "functionSelector": "5da2460d",
            "id": 3005,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3000,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 3005,
                  "src": "3355:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3002,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3005,
                  "src": "3385:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3349:60:9"
            },
            "returnParameters": {
              "id": 3004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:0:9"
            },
            "scope": 3066,
            "src": "3331:88:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3006,
              "nodeType": "StructuredDocumentation",
              "src": "3423:267:9",
              "text": "@notice Let user to buy policy for another user by supplying DAI, access: ANY\n @param _policyHolderAddr is address of address to assign cover\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover  "
            },
            "functionSelector": "7234751b",
            "id": 3015,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicyFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3008,
                  "mutability": "mutable",
                  "name": "_policyHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3015,
                  "src": "3720:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3720:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3010,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 3015,
                  "src": "3751:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3012,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3015,
                  "src": "3781:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3781:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3714:91:9"
            },
            "returnParameters": {
              "id": 3014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3814:0:9"
            },
            "scope": 3066,
            "src": "3693:122:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3016,
              "nodeType": "StructuredDocumentation",
              "src": "3819:130:9",
              "text": "@notice Let user to add liquidity by supplying DAI, access: ANY\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "51c6590a",
            "id": 3021,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3018,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3021,
                  "src": "3974:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3973:25:9"
            },
            "returnParameters": {
              "id": 3020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4007:0:9"
            },
            "scope": 3066,
            "src": "3952:56:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3022,
              "nodeType": "StructuredDocumentation",
              "src": "4012:219:9",
              "text": "@notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "efa1f98a",
            "id": 3029,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3024,
                  "mutability": "mutable",
                  "name": "_liquidityHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3029,
                  "src": "4259:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4259:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3026,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3029,
                  "src": "4289:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4258:55:9"
            },
            "returnParameters": {
              "id": 3028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4322:0:9"
            },
            "scope": 3066,
            "src": "4234:89:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3030,
              "nodeType": "StructuredDocumentation",
              "src": "4327:132:9",
              "text": "@notice Let user to withdraw deposited liqiudity, access: ANY\n @param _tokensToWithdraw is amount of DAI tokens to withdraw"
            },
            "functionSelector": "0a861f2a",
            "id": 3035,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3032,
                  "mutability": "mutable",
                  "name": "_tokensToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 3035,
                  "src": "4489:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4489:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4488:27:9"
            },
            "returnParameters": {
              "id": 3034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4524:0:9"
            },
            "scope": 3066,
            "src": "4462:63:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3036,
              "nodeType": "StructuredDocumentation",
              "src": "4529:230:9",
              "text": "@notice Let user to calculate policy cost in DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _tokens is number of tokens to cover\n @return _daiTokens is amount of DAI policy costs"
            },
            "functionSelector": "758af3ab",
            "id": 3045,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3038,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 3045,
                  "src": "4780:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3040,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3045,
                  "src": "4806:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4806:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4779:43:9"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3043,
                  "mutability": "mutable",
                  "name": "_daiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3045,
                  "src": "4846:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4846:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4845:20:9"
            },
            "scope": 3066,
            "src": "4762:104:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3046,
              "nodeType": "StructuredDocumentation",
              "src": "4870:178:9",
              "text": "@notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n @param _policyId is id of policy to get reward for, reward will be sent to policy holder"
            },
            "functionSelector": "c18c6057",
            "id": 3051,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rewardForUnclaimedExpiredPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3048,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3051,
                  "src": "5092:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5092:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5091:19:9"
            },
            "returnParameters": {
              "id": 3050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5119:0:9"
            },
            "scope": 3066,
            "src": "5051:69:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3052,
              "nodeType": "StructuredDocumentation",
              "src": "5124:317:9",
              "text": "@notice Getting stats, access: ANY\n @return _name is the name of PolicyBook\n @return _contractType is a type of insured contract\n @return _maxCapacities is a max token amount that a user can buy\n @return _totalDaiLiquidity is PolicyBook's liquidity\n @return _annualProfitYields is its APY"
            },
            "functionSelector": "d80528ae",
            "id": 3065,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5458:2:9"
            },
            "returnParameters": {
              "id": 3064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3055,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3065,
                  "src": "5503:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3054,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5503:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "_contractType",
                  "nodeType": "VariableDeclaration",
                  "scope": 3065,
                  "src": "5530:44:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$3073",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3073,
                    "src": "5530:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$3073",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3059,
                  "mutability": "mutable",
                  "name": "_maxCapacities",
                  "nodeType": "VariableDeclaration",
                  "scope": 3065,
                  "src": "5582:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5582:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3061,
                  "mutability": "mutable",
                  "name": "_totalDaiLiquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 3065,
                  "src": "5612:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5612:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3063,
                  "mutability": "mutable",
                  "name": "_annualProfitYields",
                  "nodeType": "VariableDeclaration",
                  "scope": 3065,
                  "src": "5646:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5646:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5495:184:9"
            },
            "scope": 3066,
            "src": "5444:236:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3067,
        "src": "245:5437:9"
      }
    ],
    "src": "32:5651:9"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
      "exportedSymbols": {
        "IERC1155": [
          5848
        ],
        "IERC165": [
          5457
        ],
        "IERC20": [
          6485
        ],
        "IPolicyBook": [
          3066
        ],
        "IPolicyBookFabric": [
          3115
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 2928,
        "name": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2929,
        "name": "PragmaDirective",
        "src": "56:33:9"
      },
      {
        "attributes": {
          "SourceUnit": 6486,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 3067,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2930,
        "name": "ImportDirective",
        "src": "91:56:9"
      },
      {
        "attributes": {
          "SourceUnit": 5849,
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
          "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
          "scope": 3067,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2931,
        "name": "ImportDirective",
        "src": "148:60:9"
      },
      {
        "attributes": {
          "SourceUnit": 3116,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol",
          "file": "./IPolicyBookFabric.sol",
          "scope": 3067,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2932,
        "name": "ImportDirective",
        "src": "210:33:9"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            6485
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            3066,
            6485
          ],
          "name": "IPolicyBook",
          "scope": 3067
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6485,
                  "type": "contract IERC20"
                },
                "id": 2933,
                "name": "UserDefinedTypeName",
                "src": "270:6:9"
              }
            ],
            "id": 2934,
            "name": "InheritanceSpecifier",
            "src": "270:6:9"
          },
          {
            "attributes": {
              "functionSelector": "14c179c0",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "insuranceContractAddress",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns address of contract this PolicyBook covers, access: ANY\n @return _contract is address of covered contract"
                },
                "id": 2935,
                "name": "StructuredDocumentation",
                "src": "339:130:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2936,
                "name": "ParameterList",
                "src": "505:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contract",
                      "scope": 2940,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2937,
                        "name": "ElementaryTypeName",
                        "src": "531:7:9"
                      }
                    ],
                    "id": 2938,
                    "name": "VariableDeclaration",
                    "src": "531:17:9"
                  }
                ],
                "id": 2939,
                "name": "ParameterList",
                "src": "530:19:9"
              }
            ],
            "id": 2940,
            "name": "FunctionDefinition",
            "src": "472:78:9"
          },
          {
            "attributes": {
              "functionSelector": "cb2ef6f7",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "contractType",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns type of contract this PolicyBook covers, access: ANY\n @return _type is type of contract"
                },
                "id": 2941,
                "name": "StructuredDocumentation",
                "src": "554:112:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2942,
                "name": "ParameterList",
                "src": "690:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_type",
                      "scope": 2946,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum IPolicyBookFabric.ContractType",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IPolicyBookFabric.ContractType",
                          "referencedDeclaration": 3073,
                          "type": "enum IPolicyBookFabric.ContractType"
                        },
                        "id": 2943,
                        "name": "UserDefinedTypeName",
                        "src": "716:30:9"
                      }
                    ],
                    "id": 2944,
                    "name": "VariableDeclaration",
                    "src": "716:36:9"
                  }
                ],
                "id": 2945,
                "name": "ParameterList",
                "src": "715:38:9"
              }
            ],
            "id": 2946,
            "name": "FunctionDefinition",
            "src": "669:85:9"
          },
          {
            "attributes": {
              "functionSelector": "7cd0fc9b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "quoteStrategy",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n @return _quoteStrategy is address of Quote strategy contract used to calculate quote"
                },
                "id": 2947,
                "name": "StructuredDocumentation",
                "src": "758:176:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2948,
                "name": "ParameterList",
                "src": "959:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_quoteStrategy",
                      "scope": 2952,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2949,
                        "name": "ElementaryTypeName",
                        "src": "985:7:9"
                      }
                    ],
                    "id": 2950,
                    "name": "VariableDeclaration",
                    "src": "985:22:9"
                  }
                ],
                "id": 2951,
                "name": "ParameterList",
                "src": "984:24:9"
              }
            ],
            "id": 2952,
            "name": "FunctionDefinition",
            "src": "937:72:9"
          },
          {
            "attributes": {
              "functionSelector": "79fac08c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "shieldAssets",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns list of shield assets added to PolicyBook, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers"
                },
                "id": 2953,
                "name": "StructuredDocumentation",
                "src": "1163:379:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_offset",
                      "scope": 2965,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2954,
                        "name": "ElementaryTypeName",
                        "src": "1567:7:9"
                      }
                    ],
                    "id": 2955,
                    "name": "VariableDeclaration",
                    "src": "1567:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_limit",
                      "scope": 2965,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2956,
                        "name": "ElementaryTypeName",
                        "src": "1584:7:9"
                      }
                    ],
                    "id": 2957,
                    "name": "VariableDeclaration",
                    "src": "1584:14:9"
                  }
                ],
                "id": 2958,
                "name": "ParameterList",
                "src": "1566:33:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetsCount",
                      "scope": 2965,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2959,
                        "name": "ElementaryTypeName",
                        "src": "1635:7:9"
                      }
                    ],
                    "id": 2960,
                    "name": "VariableDeclaration",
                    "src": "1635:26:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssets",
                      "scope": 2965,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2961,
                            "name": "ElementaryTypeName",
                            "src": "1663:7:9"
                          }
                        ],
                        "id": 2962,
                        "name": "ArrayTypeName",
                        "src": "1663:9:9"
                      }
                    ],
                    "id": 2963,
                    "name": "VariableDeclaration",
                    "src": "1663:30:9"
                  }
                ],
                "id": 2964,
                "name": "ParameterList",
                "src": "1634:60:9"
              }
            ],
            "id": 2965,
            "name": "FunctionDefinition",
            "src": "1545:150:9"
          },
          {
            "attributes": {
              "functionSelector": "0e82da53",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "shieldAssetsWithBalance",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, \n to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset"
                },
                "id": 2966,
                "name": "StructuredDocumentation",
                "src": "1699:608:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_offset",
                      "scope": 2981,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2967,
                        "name": "ElementaryTypeName",
                        "src": "2343:7:9"
                      }
                    ],
                    "id": 2968,
                    "name": "VariableDeclaration",
                    "src": "2343:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_limit",
                      "scope": 2981,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2969,
                        "name": "ElementaryTypeName",
                        "src": "2360:7:9"
                      }
                    ],
                    "id": 2970,
                    "name": "VariableDeclaration",
                    "src": "2360:14:9"
                  }
                ],
                "id": 2971,
                "name": "ParameterList",
                "src": "2342:33:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetsCount",
                      "scope": 2981,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2972,
                        "name": "ElementaryTypeName",
                        "src": "2418:7:9"
                      }
                    ],
                    "id": 2973,
                    "name": "VariableDeclaration",
                    "src": "2418:26:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssets",
                      "scope": 2981,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 2974,
                            "name": "ElementaryTypeName",
                            "src": "2452:7:9"
                          }
                        ],
                        "id": 2975,
                        "name": "ArrayTypeName",
                        "src": "2452:9:9"
                      }
                    ],
                    "id": 2976,
                    "name": "VariableDeclaration",
                    "src": "2452:30:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetBalance",
                      "scope": 2981,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2977,
                            "name": "ElementaryTypeName",
                            "src": "2490:7:9"
                          }
                        ],
                        "id": 2978,
                        "name": "ArrayTypeName",
                        "src": "2490:9:9"
                      }
                    ],
                    "id": 2979,
                    "name": "VariableDeclaration",
                    "src": "2490:36:9"
                  }
                ],
                "id": 2980,
                "name": "ParameterList",
                "src": "2410:122:9"
              }
            ],
            "id": 2981,
            "name": "FunctionDefinition",
            "src": "2310:223:9"
          },
          {
            "attributes": {
              "functionSelector": "2c865d6c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "shieldAssetsCount",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns number of shield assets added, access: ANY\n @return _shieldAssetsCount is number of added shield assets"
                },
                "id": 2982,
                "name": "StructuredDocumentation",
                "src": "2537:128:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2983,
                "name": "ParameterList",
                "src": "2694:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetsCount",
                      "scope": 2987,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2984,
                        "name": "ElementaryTypeName",
                        "src": "2720:7:9"
                      }
                    ],
                    "id": 2985,
                    "name": "VariableDeclaration",
                    "src": "2720:26:9"
                  }
                ],
                "id": 2986,
                "name": "ParameterList",
                "src": "2719:28:9"
              }
            ],
            "id": 2987,
            "name": "FunctionDefinition",
            "src": "2668:80:9"
          },
          {
            "attributes": {
              "functionSelector": "188ff854",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addShieldTokens",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Adds shield tokens to contract, access: ANY\n @param _tokenAddress is address of reward token to add\n @param _tokensAmount is max amount of reward to operate on\n @return _success is indicator if purchase is successful, it will throw exception if unsuccessful"
                },
                "id": 2988,
                "name": "StructuredDocumentation",
                "src": "2752:284:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokenAddress",
                      "scope": 2997,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2989,
                        "name": "ElementaryTypeName",
                        "src": "3064:7:9"
                      }
                    ],
                    "id": 2990,
                    "name": "VariableDeclaration",
                    "src": "3064:21:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokensAmount",
                      "scope": 2997,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2991,
                        "name": "ElementaryTypeName",
                        "src": "3087:7:9"
                      }
                    ],
                    "id": 2992,
                    "name": "VariableDeclaration",
                    "src": "3087:21:9"
                  }
                ],
                "id": 2993,
                "name": "ParameterList",
                "src": "3063:46:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_success",
                      "scope": 2997,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2994,
                        "name": "ElementaryTypeName",
                        "src": "3128:4:9"
                      }
                    ],
                    "id": 2995,
                    "name": "VariableDeclaration",
                    "src": "3128:13:9"
                  }
                ],
                "id": 2996,
                "name": "ParameterList",
                "src": "3127:15:9"
              }
            ],
            "id": 2997,
            "name": "FunctionDefinition",
            "src": "3039:104:9"
          },
          {
            "attributes": {
              "functionSelector": "5da2460d",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "buyPolicy",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to buy policy by supplying DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover  "
                },
                "id": 2998,
                "name": "StructuredDocumentation",
                "src": "3147:181:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_durationSeconds",
                      "scope": 3005,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2999,
                        "name": "ElementaryTypeName",
                        "src": "3355:7:9"
                      }
                    ],
                    "id": 3000,
                    "name": "VariableDeclaration",
                    "src": "3355:24:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_coverTokens",
                      "scope": 3005,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3001,
                        "name": "ElementaryTypeName",
                        "src": "3385:7:9"
                      }
                    ],
                    "id": 3002,
                    "name": "VariableDeclaration",
                    "src": "3385:20:9"
                  }
                ],
                "id": 3003,
                "name": "ParameterList",
                "src": "3349:60:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3004,
                "name": "ParameterList",
                "src": "3418:0:9"
              }
            ],
            "id": 3005,
            "name": "FunctionDefinition",
            "src": "3331:88:9"
          },
          {
            "attributes": {
              "functionSelector": "7234751b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "buyPolicyFor",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to buy policy for another user by supplying DAI, access: ANY\n @param _policyHolderAddr is address of address to assign cover\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover  "
                },
                "id": 3006,
                "name": "StructuredDocumentation",
                "src": "3423:267:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyHolderAddr",
                      "scope": 3015,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3007,
                        "name": "ElementaryTypeName",
                        "src": "3720:7:9"
                      }
                    ],
                    "id": 3008,
                    "name": "VariableDeclaration",
                    "src": "3720:25:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_durationSeconds",
                      "scope": 3015,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3009,
                        "name": "ElementaryTypeName",
                        "src": "3751:7:9"
                      }
                    ],
                    "id": 3010,
                    "name": "VariableDeclaration",
                    "src": "3751:24:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_coverTokens",
                      "scope": 3015,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3011,
                        "name": "ElementaryTypeName",
                        "src": "3781:7:9"
                      }
                    ],
                    "id": 3012,
                    "name": "VariableDeclaration",
                    "src": "3781:20:9"
                  }
                ],
                "id": 3013,
                "name": "ParameterList",
                "src": "3714:91:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3014,
                "name": "ParameterList",
                "src": "3814:0:9"
              }
            ],
            "id": 3015,
            "name": "FunctionDefinition",
            "src": "3693:122:9"
          },
          {
            "attributes": {
              "functionSelector": "51c6590a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addLiquidity",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to add liquidity by supplying DAI, access: ANY\n @param _liqudityAmount is amount of DAI tokens to secure"
                },
                "id": 3016,
                "name": "StructuredDocumentation",
                "src": "3819:130:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liqudityAmount",
                      "scope": 3021,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3017,
                        "name": "ElementaryTypeName",
                        "src": "3974:7:9"
                      }
                    ],
                    "id": 3018,
                    "name": "VariableDeclaration",
                    "src": "3974:23:9"
                  }
                ],
                "id": 3019,
                "name": "ParameterList",
                "src": "3973:25:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3020,
                "name": "ParameterList",
                "src": "4007:0:9"
              }
            ],
            "id": 3021,
            "name": "FunctionDefinition",
            "src": "3952:56:9"
          },
          {
            "attributes": {
              "functionSelector": "efa1f98a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addLiquidityFor",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
                },
                "id": 3022,
                "name": "StructuredDocumentation",
                "src": "4012:219:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liquidityHolderAddr",
                      "scope": 3029,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3023,
                        "name": "ElementaryTypeName",
                        "src": "4259:7:9"
                      }
                    ],
                    "id": 3024,
                    "name": "VariableDeclaration",
                    "src": "4259:28:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liqudityAmount",
                      "scope": 3029,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3025,
                        "name": "ElementaryTypeName",
                        "src": "4289:7:9"
                      }
                    ],
                    "id": 3026,
                    "name": "VariableDeclaration",
                    "src": "4289:23:9"
                  }
                ],
                "id": 3027,
                "name": "ParameterList",
                "src": "4258:55:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3028,
                "name": "ParameterList",
                "src": "4322:0:9"
              }
            ],
            "id": 3029,
            "name": "FunctionDefinition",
            "src": "4234:89:9"
          },
          {
            "attributes": {
              "functionSelector": "0a861f2a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawLiquidity",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to withdraw deposited liqiudity, access: ANY\n @param _tokensToWithdraw is amount of DAI tokens to withdraw"
                },
                "id": 3030,
                "name": "StructuredDocumentation",
                "src": "4327:132:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokensToWithdraw",
                      "scope": 3035,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3031,
                        "name": "ElementaryTypeName",
                        "src": "4489:7:9"
                      }
                    ],
                    "id": 3032,
                    "name": "VariableDeclaration",
                    "src": "4489:25:9"
                  }
                ],
                "id": 3033,
                "name": "ParameterList",
                "src": "4488:27:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3034,
                "name": "ParameterList",
                "src": "4524:0:9"
              }
            ],
            "id": 3035,
            "name": "FunctionDefinition",
            "src": "4462:63:9"
          },
          {
            "attributes": {
              "functionSelector": "758af3ab",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getQuote",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to calculate policy cost in DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _tokens is number of tokens to cover\n @return _daiTokens is amount of DAI policy costs"
                },
                "id": 3036,
                "name": "StructuredDocumentation",
                "src": "4529:230:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_durationSeconds",
                      "scope": 3045,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3037,
                        "name": "ElementaryTypeName",
                        "src": "4780:7:9"
                      }
                    ],
                    "id": 3038,
                    "name": "VariableDeclaration",
                    "src": "4780:24:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "scope": 3045,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3039,
                        "name": "ElementaryTypeName",
                        "src": "4806:7:9"
                      }
                    ],
                    "id": 3040,
                    "name": "VariableDeclaration",
                    "src": "4806:15:9"
                  }
                ],
                "id": 3041,
                "name": "ParameterList",
                "src": "4779:43:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_daiTokens",
                      "scope": 3045,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3042,
                        "name": "ElementaryTypeName",
                        "src": "4846:7:9"
                      }
                    ],
                    "id": 3043,
                    "name": "VariableDeclaration",
                    "src": "4846:18:9"
                  }
                ],
                "id": 3044,
                "name": "ParameterList",
                "src": "4845:20:9"
              }
            ],
            "id": 3045,
            "name": "FunctionDefinition",
            "src": "4762:104:9"
          },
          {
            "attributes": {
              "functionSelector": "c18c6057",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "rewardForUnclaimedExpiredPolicy",
              "scope": 3066,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n @param _policyId is id of policy to get reward for, reward will be sent to policy holder"
                },
                "id": 3046,
                "name": "StructuredDocumentation",
                "src": "4870:178:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyId",
                      "scope": 3051,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3047,
                        "name": "ElementaryTypeName",
                        "src": "5092:7:9"
                      }
                    ],
                    "id": 3048,
                    "name": "VariableDeclaration",
                    "src": "5092:17:9"
                  }
                ],
                "id": 3049,
                "name": "ParameterList",
                "src": "5091:19:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3050,
                "name": "ParameterList",
                "src": "5119:0:9"
              }
            ],
            "id": 3051,
            "name": "FunctionDefinition",
            "src": "5051:69:9"
          },
          {
            "attributes": {
              "functionSelector": "d80528ae",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stats",
              "scope": 3066,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Getting stats, access: ANY\n @return _name is the name of PolicyBook\n @return _contractType is a type of insured contract\n @return _maxCapacities is a max token amount that a user can buy\n @return _totalDaiLiquidity is PolicyBook's liquidity\n @return _annualProfitYields is its APY"
                },
                "id": 3052,
                "name": "StructuredDocumentation",
                "src": "5124:317:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3053,
                "name": "ParameterList",
                "src": "5458:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_name",
                      "scope": 3065,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 3054,
                        "name": "ElementaryTypeName",
                        "src": "5503:6:9"
                      }
                    ],
                    "id": 3055,
                    "name": "VariableDeclaration",
                    "src": "5503:19:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractType",
                      "scope": 3065,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum IPolicyBookFabric.ContractType",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IPolicyBookFabric.ContractType",
                          "referencedDeclaration": 3073,
                          "type": "enum IPolicyBookFabric.ContractType"
                        },
                        "id": 3056,
                        "name": "UserDefinedTypeName",
                        "src": "5530:30:9"
                      }
                    ],
                    "id": 3057,
                    "name": "VariableDeclaration",
                    "src": "5530:44:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_maxCapacities",
                      "scope": 3065,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3058,
                        "name": "ElementaryTypeName",
                        "src": "5582:7:9"
                      }
                    ],
                    "id": 3059,
                    "name": "VariableDeclaration",
                    "src": "5582:22:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_totalDaiLiquidity",
                      "scope": 3065,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3060,
                        "name": "ElementaryTypeName",
                        "src": "5612:7:9"
                      }
                    ],
                    "id": 3061,
                    "name": "VariableDeclaration",
                    "src": "5612:26:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_annualProfitYields",
                      "scope": 3065,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3062,
                        "name": "ElementaryTypeName",
                        "src": "5646:7:9"
                      }
                    ],
                    "id": 3063,
                    "name": "VariableDeclaration",
                    "src": "5646:27:9"
                  }
                ],
                "id": 3064,
                "name": "ParameterList",
                "src": "5495:184:9"
              }
            ],
            "id": 3065,
            "name": "FunctionDefinition",
            "src": "5444:236:9"
          }
        ],
        "id": 3066,
        "name": "ContractDefinition",
        "src": "245:5437:9"
      }
    ],
    "id": 3067,
    "name": "SourceUnit",
    "src": "32:5651:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-25T17:02:31.952Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addLiquidity(uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure"
        }
      },
      "addLiquidityFor(address,uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure",
          "_liquidityHolderAddr": "is address of address to assign cover"
        }
      },
      "addShieldTokens(address,uint256)": {
        "params": {
          "_tokenAddress": "is address of reward token to add",
          "_tokensAmount": "is max amount of reward to operate on"
        },
        "returns": {
          "_success": "is indicator if purchase is successful, it will throw exception if unsuccessful"
        }
      },
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "buyPolicy(uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover  ",
          "_durationSeconds": "is number of seconds to cover"
        }
      },
      "buyPolicyFor(address,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover  ",
          "_durationSeconds": "is number of seconds to cover",
          "_policyHolderAddr": "is address of address to assign cover"
        }
      },
      "contractType()": {
        "returns": {
          "_type": "is type of contract"
        }
      },
      "getQuote(uint256,uint256)": {
        "params": {
          "_durationSeconds": "is number of seconds to cover",
          "_tokens": "is number of tokens to cover"
        },
        "returns": {
          "_daiTokens": "is amount of DAI policy costs"
        }
      },
      "insuranceContractAddress()": {
        "returns": {
          "_contract": "is address of covered contract"
        }
      },
      "quoteStrategy()": {
        "returns": {
          "_quoteStrategy": "is address of Quote strategy contract used to calculate quote"
        }
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "params": {
          "_policyId": "is id of policy to get reward for, reward will be sent to policy holder"
        }
      },
      "shieldAssets(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsCount()": {
        "returns": {
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssetBalance": "is tokens amount of shield assets allocated to Policy Book,  to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset",
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "stats()": {
        "returns": {
          "_annualProfitYields": "is its APY",
          "_contractType": "is a type of insured contract",
          "_maxCapacities": "is a max token amount that a user can buy",
          "_name": "is the name of PolicyBook",
          "_totalDaiLiquidity": "is PolicyBook's liquidity"
        }
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "withdrawLiquidity(uint256)": {
        "params": {
          "_tokensToWithdraw": "is amount of DAI tokens to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addLiquidity(uint256)": {
        "notice": "Let user to add liquidity by supplying DAI, access: ANY"
      },
      "addLiquidityFor(address,uint256)": {
        "notice": "Let user to add liqiudity for another user by supplying DAI, access: ANY"
      },
      "addShieldTokens(address,uint256)": {
        "notice": "Adds shield tokens to contract, access: ANY"
      },
      "buyPolicy(uint256,uint256)": {
        "notice": "Let user to buy policy by supplying DAI, access: ANY"
      },
      "buyPolicyFor(address,uint256,uint256)": {
        "notice": "Let user to buy policy for another user by supplying DAI, access: ANY"
      },
      "contractType()": {
        "notice": "Returns type of contract this PolicyBook covers, access: ANY"
      },
      "getQuote(uint256,uint256)": {
        "notice": "Let user to calculate policy cost in DAI, access: ANY"
      },
      "insuranceContractAddress()": {
        "notice": "Returns address of contract this PolicyBook covers, access: ANY"
      },
      "quoteStrategy()": {
        "notice": "Returns quote strategy defined during creation of PolicyBook, access: ANY"
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "notice": "Let user to claim rewards for unclaimed policy cost in DAI, access: ANY"
      },
      "shieldAssets(uint256,uint256)": {
        "notice": "Returns list of shield assets added to PolicyBook, access: ANY"
      },
      "shieldAssetsCount()": {
        "notice": "Returns number of shield assets added, access: ANY"
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "notice": "Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY"
      },
      "stats()": {
        "notice": "Getting stats, access: ANY"
      },
      "withdrawLiquidity(uint256)": {
        "notice": "Let user to withdraw deposited liqiudity, access: ANY"
      }
    },
    "version": 1
  }
}