{
  "contractName": "IPolicyBook",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractType",
      "outputs": [
        {
          "internalType": "enum IPolicyBookFabric.ContractType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "_quoteStrategy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssetsWithBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_shieldAssetBalance",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shieldAssetsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensAmount",
          "type": "uint256"
        }
      ],
      "name": "addShieldTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDaiTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDaiTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicyFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokensToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_daiTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "rewardForUnclaimedExpiredPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_yearlyCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCapacities",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDaiLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_annualProfitYields",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensAmount\",\"type\":\"uint256\"}],\"name\":\"addShieldTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDaiTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDaiTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicyFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractType\",\"outputs\":[{\"internalType\":\"enum IPolicyBookFabric.ContractType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_daiTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_quoteStrategy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"rewardForUnclaimedExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shieldAssetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssetsWithBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shieldAssetBalance\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_yearlyCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCapacities\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDaiLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_annualProfitYields\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\"}},\"addLiquidityFor(address,uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\",\"_liquidityHolderAddr\":\"is address of address to assign cover\"}},\"addShieldTokens(address,uint256)\":{\"params\":{\"_tokenAddress\":\"is address of reward token to add\",\"_tokensAmount\":\"is max amount of reward to operate on\"},\"returns\":{\"_success\":\"is indicator if purchase is successful, it will throw exception if unsuccessful\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"buyPolicy(uint256,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover\",\"_durationDays\":\"is number of days to cover\",\"_maxDaiTokens\":\"is number of DAI to spend\"}},\"buyPolicyFor(address,uint256,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover\",\"_durationDays\":\"is number of days to cover\",\"_maxDaiTokens\":\"is number of DAI to spend\",\"_policyHolderAddr\":\"is address of address to assign cover\"}},\"getContractAddress()\":{\"returns\":{\"_contract\":\"is address of covered contract\"}},\"getContractType()\":{\"returns\":{\"_type\":\"is type of contract\"}},\"getQuote(uint256,uint256)\":{\"params\":{\"_durationDays\":\"is number of days to cover\",\"_tokens\":\"is number of tokens to cover\"},\"returns\":{\"_daiTokens\":\"is amount of DAI policy costs\"}},\"quoteStrategy()\":{\"returns\":{\"_quoteStrategy\":\"is address of Quote strategy contract used to calculate quote\"}},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"params\":{\"_policyId\":\"is id of policy to get reward for, reward will be sent to policy holder\"}},\"shieldAssets(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsCount()\":{\"returns\":{\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsWithBalance(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssetBalance\":\"is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\",\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"stats()\":{\"returns\":{\"_annualProfitYields\":\"is current annual profit yield\",\"_maxCapacities\":\"is max DAI amount to be covered at now\",\"_totalDaiLiquidity\":\"is DAI amount placed by Policy providers\",\"_yearlyCost\":\"_yearlyCost\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdrawLiquidity(uint256)\":{\"params\":{\"_tokensToWithdraw\":\"is amount of DAI tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256)\":{\"notice\":\"Let user to add liquidity by supplying DAI, access: ANY\"},\"addLiquidityFor(address,uint256)\":{\"notice\":\"Let user to add liqiudity for another user by supplying DAI, access: ANY\"},\"addShieldTokens(address,uint256)\":{\"notice\":\"Adds shield tokens to contract, access: ANY\"},\"buyPolicy(uint256,uint256,uint256)\":{\"notice\":\"Let user to buy policy by supplying DAI, access: ANY\"},\"buyPolicyFor(address,uint256,uint256,uint256)\":{\"notice\":\"Let user to buy policy for another user by supplying DAI, access: ANY\"},\"getContractAddress()\":{\"notice\":\"Returns address of contract this PolicyBook covers, access: ANY\"},\"getContractType()\":{\"notice\":\"Returns type of contract this PolicyBook covers, access: ANY\"},\"getQuote(uint256,uint256)\":{\"notice\":\"Let user to calculate policy cost in DAI, access: ANY\"},\"quoteStrategy()\":{\"notice\":\"Returns quote strategy defined during creation of PolicyBook, access: ANY\"},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"notice\":\"Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\"},\"shieldAssets(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added to PolicyBook, access: ANY\"},\"shieldAssetsCount()\":{\"notice\":\"Returns number of shield assets added, access: ANY\"},\"shieldAssetsWithBalance(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\"},\"stats()\":{\"notice\":\"Getting stats, access: ANY\"},\"withdrawLiquidity(uint256)\":{\"notice\":\"Let user to withdraw deposited liqiudity, access: ANY\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":\"IPolicyBook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x4045fb9457c48fd676c982febc5c9c4422e72ec2d90ffad7fe9e52b876b3eaa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5cf4a33399a3d04ca52817687986d1a2005e09176cd1d5022fec49a6d324a5\",\"dweb:/ipfs/QmUBWNhMZn4ZVHcGyA9FYdNaiLzmuRryfJ8NPPV6jRsXRM\"]},\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x243c0c0820d278cd59abfc5ee3941adaff0c6f11f8c3ae9e1fd4b3e10d94b61a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a78a7637452417a50ea81e1a15a07df3bdff3cf8cba41c06fe019ade5c556be2\",\"dweb:/ipfs/QmZfuC1pY6jdu9p47G66a9rNrPezoGYLvEKEBd3Weje13K\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IPolicyBookFabric.sol\";\n\ninterface IPolicyBook is IERC20 {\n  struct Policy {\n    uint256 id;\n    uint256 holder;\n    uint256 daiTokens;\n    uint256 durationDays;\n    uint256 coveredTokens;\n    uint256 createdAt;\n    bool claimed;\n    bool rewarded;\n  }\n\n  // @TODO: should we let DAO to change contract address?\n  /// @notice Returns address of contract this PolicyBook covers, access: ANY\n  /// @return _contract is address of covered contract\n  function getContractAddress() external view returns (address _contract);\n\n  /// @notice Returns type of contract this PolicyBook covers, access: ANY\n  /// @return _type is type of contract\n  function getContractType() external view returns (IPolicyBookFabric.ContractType _type);\n\n  /// @notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n  /// @return _quoteStrategy is address of Quote strategy contract used to calculate quote\n  function quoteStrategy() external view returns (address _quoteStrategy);\n\n  // @TODO: Vector Attack - Hacker? can add too many shield tokens, that will be impossible to calculate tokens portion to give to Policy giver\n  /// @notice Returns list of shield assets added to PolicyBook, access: ANY\n  /// @param _offset is starting item in array to return array from\n  /// @param _limit is number of policy books to returns from _offset\n  /// @return _shieldAssetsCount is number of added shield assets\n  /// @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n  function shieldAssets(uint256 _offset, uint256 _limit)\n    external\n    view\n    returns (uint256 _shieldAssetsCount, address[] memory _shieldAssets);\n\n  /// @notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n  /// @param _offset is starting item in array to return array from\n  /// @param _limit is number of policy books to returns from _offset\n  /// @return _shieldAssetsCount is number of added shield assets\n  /// @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n  /// @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\n  function shieldAssetsWithBalance(uint256 _offset, uint256 _limit)\n    external\n    view\n    returns (\n      uint256 _shieldAssetsCount,\n      address[] memory _shieldAssets,\n      uint256[] memory _shieldAssetBalance\n    );\n\n  /// @notice Returns number of shield assets added, access: ANY\n  /// @return _shieldAssetsCount is number of added shield assets\n  function shieldAssetsCount() external view returns (uint256 _shieldAssetsCount);\n\n  /// @notice Adds shield tokens to contract, access: ANY\n  /// @param _tokenAddress is address of reward token to add\n  /// @param _tokensAmount is max amount of reward to operate on\n  /// @return _success is indicator if purchase is successful, it will throw exception if unsuccessful\n  function addShieldTokens(address _tokenAddress, uint256 _tokensAmount) external returns (bool _success);\n\n  /// @notice Let user to buy policy by supplying DAI, access: ANY\n  /// @param _durationDays is number of days to cover\n  /// @param _coverTokens is number of tokens to cover\n  /// @param _maxDaiTokens is number of DAI to spend\n  function buyPolicy(\n    uint256 _durationDays,\n    uint256 _coverTokens,\n    uint256 _maxDaiTokens\n  ) external;\n\n  /// @notice Let user to buy policy for another user by supplying DAI, access: ANY\n  /// @param _policyHolderAddr is address of address to assign cover\n  /// @param _durationDays is number of days to cover\n  /// @param _coverTokens is number of tokens to cover\n  /// @param _maxDaiTokens is number of DAI to spend\n  function buyPolicyFor(\n    address _policyHolderAddr,\n    uint256 _durationDays,\n    uint256 _coverTokens,\n    uint256 _maxDaiTokens\n  ) external;\n\n  /// @notice Let user to add liquidity by supplying DAI, access: ANY\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidity(uint256 _liqudityAmount) external;\n\n  /// @notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n  /// @param _liquidityHolderAddr is address of address to assign cover\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidityFor(address _liquidityHolderAddr, uint256 _liqudityAmount) external;\n\n  /// @notice Let user to withdraw deposited liqiudity, access: ANY\n  /// @param _tokensToWithdraw is amount of DAI tokens to withdraw\n  function withdrawLiquidity(uint256 _tokensToWithdraw) external;\n\n  /// @notice Let user to calculate policy cost in DAI, access: ANY\n  /// @param _durationDays is number of days to cover\n  /// @param _tokens is number of tokens to cover\n  /// @return _daiTokens is amount of DAI policy costs\n  function getQuote(uint256 _durationDays, uint256 _tokens) external view returns (uint256 _daiTokens);\n\n  /// @notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n  /// @param _policyId is id of policy to get reward for, reward will be sent to policy holder\n  function rewardForUnclaimedExpiredPolicy(uint256 _policyId) external;\n\n  /// @notice Getting stats, access: ANY\n  /// @return _yearlyCost\n  /// @return _maxCapacities is max DAI amount to be covered at now\n  /// @return _totalDaiLiquidity is DAI amount placed by Policy providers\n  /// @return _annualProfitYields is current annual profit yield\n  function stats()\n    external\n    returns (\n      uint256 _yearlyCost,\n      uint256 _maxCapacities,\n      uint256 _totalDaiLiquidity,\n      uint256 _annualProfitYields\n    );\n}\n",
  "sourcePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
  "ast": {
    "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
    "exportedSymbols": {
      "IERC20": [
        3221
      ],
      "IPolicyBook": [
        1959
      ],
      "IPolicyBookFabric": [
        2004
      ]
    },
    "id": 1960,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1803,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "id": 1804,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1805,
        "nodeType": "ImportDirective",
        "scope": 1960,
        "sourceUnit": 3222,
        "src": "91:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol",
        "file": "./IPolicyBookFabric.sol",
        "id": 1806,
        "nodeType": "ImportDirective",
        "scope": 1960,
        "sourceUnit": 2005,
        "src": "148:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1807,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3221,
              "src": "208:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3221",
                "typeString": "contract IERC20"
              }
            },
            "id": 1808,
            "nodeType": "InheritanceSpecifier",
            "src": "208:6:8"
          }
        ],
        "contractDependencies": [
          3221
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1959,
        "linearizedBaseContracts": [
          1959,
          3221
        ],
        "name": "IPolicyBook",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IPolicyBook.Policy",
            "id": 1825,
            "members": [
              {
                "constant": false,
                "id": 1810,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "239:10:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1809,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "239:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1812,
                "mutability": "mutable",
                "name": "holder",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "255:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1811,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1814,
                "mutability": "mutable",
                "name": "daiTokens",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "275:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1813,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "275:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1816,
                "mutability": "mutable",
                "name": "durationDays",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "298:20:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1815,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1818,
                "mutability": "mutable",
                "name": "coveredTokens",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "324:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1817,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "324:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1820,
                "mutability": "mutable",
                "name": "createdAt",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "351:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1822,
                "mutability": "mutable",
                "name": "claimed",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "374:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1821,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1824,
                "mutability": "mutable",
                "name": "rewarded",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "392:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1823,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nodeType": "StructDefinition",
            "scope": 1959,
            "src": "219:191:8",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 1826,
              "nodeType": "StructuredDocumentation",
              "src": "472:130:8",
              "text": "@notice Returns address of contract this PolicyBook covers, access: ANY\n @return _contract is address of covered contract"
            },
            "functionSelector": "32a2c5d0",
            "id": 1831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:2:8"
            },
            "returnParameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "658:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:19:8"
            },
            "scope": 1959,
            "src": "605:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1832,
              "nodeType": "StructuredDocumentation",
              "src": "681:112:8",
              "text": "@notice Returns type of contract this PolicyBook covers, access: ANY\n @return _type is type of contract"
            },
            "functionSelector": "c51a29e0",
            "id": 1837,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:2:8"
            },
            "returnParameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "_type",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "846:36:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$1966",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1966,
                    "src": "846:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$1966",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "845:38:8"
            },
            "scope": 1959,
            "src": "796:88:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1838,
              "nodeType": "StructuredDocumentation",
              "src": "888:176:8",
              "text": "@notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n @return _quoteStrategy is address of Quote strategy contract used to calculate quote"
            },
            "functionSelector": "7cd0fc9b",
            "id": 1843,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:2:8"
            },
            "returnParameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "_quoteStrategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1115:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:24:8"
            },
            "scope": 1959,
            "src": "1067:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1844,
              "nodeType": "StructuredDocumentation",
              "src": "1287:379:8",
              "text": "@notice Returns list of shield assets added to PolicyBook, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers"
            },
            "functionSelector": "79fac08c",
            "id": 1856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1691:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1708:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1690:33:8"
            },
            "returnParameters": {
              "id": 1855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1759:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1787:30:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1852,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1787:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1853,
                    "nodeType": "ArrayTypeName",
                    "src": "1787:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:60:8"
            },
            "scope": 1959,
            "src": "1669:150:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1857,
              "nodeType": "StructuredDocumentation",
              "src": "1823:601:8",
              "text": "@notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset"
            },
            "functionSelector": "0e82da53",
            "id": 1872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsWithBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2460:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2477:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:33:8"
            },
            "returnParameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2535:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2569:30:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1865,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2569:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1866,
                    "nodeType": "ArrayTypeName",
                    "src": "2569:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "_shieldAssetBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2607:36:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1868,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1869,
                    "nodeType": "ArrayTypeName",
                    "src": "2607:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:122:8"
            },
            "scope": 1959,
            "src": "2427:223:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1873,
              "nodeType": "StructuredDocumentation",
              "src": "2654:128:8",
              "text": "@notice Returns number of shield assets added, access: ANY\n @return _shieldAssetsCount is number of added shield assets"
            },
            "functionSelector": "2c865d6c",
            "id": 1878,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2811:2:8"
            },
            "returnParameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "2837:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2836:28:8"
            },
            "scope": 1959,
            "src": "2785:80:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1879,
              "nodeType": "StructuredDocumentation",
              "src": "2869:284:8",
              "text": "@notice Adds shield tokens to contract, access: ANY\n @param _tokenAddress is address of reward token to add\n @param _tokensAmount is max amount of reward to operate on\n @return _success is indicator if purchase is successful, it will throw exception if unsuccessful"
            },
            "functionSelector": "188ff854",
            "id": 1888,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addShieldTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "3181:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "_tokensAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "3204:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:46:8"
            },
            "returnParameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "3245:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:15:8"
            },
            "scope": 1959,
            "src": "3156:104:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "3264:226:8",
              "text": "@notice Let user to buy policy by supplying DAI, access: ANY\n @param _durationDays is number of days to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
            },
            "functionSelector": "f4020b5b",
            "id": 1898,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "_durationDays",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "3517:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "3544:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "_maxDaiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "3570:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3511:84:8"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3604:0:8"
            },
            "scope": 1959,
            "src": "3493:112:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "3609:312:8",
              "text": "@notice Let user to buy policy for another user by supplying DAI, access: ANY\n @param _policyHolderAddr is address of address to assign cover\n @param _durationDays is number of days to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
            },
            "functionSelector": "fc3dfc99",
            "id": 1910,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicyFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "_policyHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "3951:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3951:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "_durationDays",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "3982:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "4009:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "_maxDaiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "4035:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4035:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:115:8"
            },
            "returnParameters": {
              "id": 1909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4069:0:8"
            },
            "scope": 1959,
            "src": "3924:146:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1911,
              "nodeType": "StructuredDocumentation",
              "src": "4074:130:8",
              "text": "@notice Let user to add liquidity by supplying DAI, access: ANY\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "51c6590a",
            "id": 1916,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1913,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "4229:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4229:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4228:25:8"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4262:0:8"
            },
            "scope": 1959,
            "src": "4207:56:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1917,
              "nodeType": "StructuredDocumentation",
              "src": "4267:219:8",
              "text": "@notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "efa1f98a",
            "id": 1924,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "_liquidityHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "4514:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4514:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1921,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "4544:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4513:55:8"
            },
            "returnParameters": {
              "id": 1923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4577:0:8"
            },
            "scope": 1959,
            "src": "4489:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1925,
              "nodeType": "StructuredDocumentation",
              "src": "4582:132:8",
              "text": "@notice Let user to withdraw deposited liqiudity, access: ANY\n @param _tokensToWithdraw is amount of DAI tokens to withdraw"
            },
            "functionSelector": "0a861f2a",
            "id": 1930,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "_tokensToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 1930,
                  "src": "4744:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:27:8"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4779:0:8"
            },
            "scope": 1959,
            "src": "4717:63:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1931,
              "nodeType": "StructuredDocumentation",
              "src": "4784:224:8",
              "text": "@notice Let user to calculate policy cost in DAI, access: ANY\n @param _durationDays is number of days to cover\n @param _tokens is number of tokens to cover\n @return _daiTokens is amount of DAI policy costs"
            },
            "functionSelector": "758af3ab",
            "id": 1940,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "mutability": "mutable",
                  "name": "_durationDays",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "5029:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "5052:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5052:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:40:8"
            },
            "returnParameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "_daiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "5092:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5092:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5091:20:8"
            },
            "scope": 1959,
            "src": "5011:101:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1941,
              "nodeType": "StructuredDocumentation",
              "src": "5116:178:8",
              "text": "@notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n @param _policyId is id of policy to get reward for, reward will be sent to policy holder"
            },
            "functionSelector": "c18c6057",
            "id": 1946,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rewardForUnclaimedExpiredPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1943,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "5338:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:19:8"
            },
            "returnParameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5365:0:8"
            },
            "scope": 1959,
            "src": "5297:69:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1947,
              "nodeType": "StructuredDocumentation",
              "src": "5370:271:8",
              "text": "@notice Getting stats, access: ANY\n @return _yearlyCost\n @return _maxCapacities is max DAI amount to be covered at now\n @return _totalDaiLiquidity is DAI amount placed by Policy providers\n @return _annualProfitYields is current annual profit yield"
            },
            "functionSelector": "d80528ae",
            "id": 1958,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5658:2:8"
            },
            "returnParameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "_yearlyCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5694:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5694:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "_maxCapacities",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5721:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "_totalDaiLiquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5751:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "_annualProfitYields",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5785:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5785:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5686:132:8"
            },
            "scope": 1959,
            "src": "5644:175:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1960,
        "src": "183:5638:8"
      }
    ],
    "src": "32:5790:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
    "exportedSymbols": {
      "IERC20": [
        3221
      ],
      "IPolicyBook": [
        1959
      ],
      "IPolicyBookFabric": [
        2004
      ]
    },
    "id": 1960,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1803,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "id": 1804,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1805,
        "nodeType": "ImportDirective",
        "scope": 1960,
        "sourceUnit": 3222,
        "src": "91:56:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol",
        "file": "./IPolicyBookFabric.sol",
        "id": 1806,
        "nodeType": "ImportDirective",
        "scope": 1960,
        "sourceUnit": 2005,
        "src": "148:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1807,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3221,
              "src": "208:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3221",
                "typeString": "contract IERC20"
              }
            },
            "id": 1808,
            "nodeType": "InheritanceSpecifier",
            "src": "208:6:8"
          }
        ],
        "contractDependencies": [
          3221
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1959,
        "linearizedBaseContracts": [
          1959,
          3221
        ],
        "name": "IPolicyBook",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IPolicyBook.Policy",
            "id": 1825,
            "members": [
              {
                "constant": false,
                "id": 1810,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "239:10:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1809,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "239:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1812,
                "mutability": "mutable",
                "name": "holder",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "255:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1811,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1814,
                "mutability": "mutable",
                "name": "daiTokens",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "275:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1813,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "275:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1816,
                "mutability": "mutable",
                "name": "durationDays",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "298:20:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1815,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1818,
                "mutability": "mutable",
                "name": "coveredTokens",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "324:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1817,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "324:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1820,
                "mutability": "mutable",
                "name": "createdAt",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "351:17:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "351:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1822,
                "mutability": "mutable",
                "name": "claimed",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "374:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1821,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1824,
                "mutability": "mutable",
                "name": "rewarded",
                "nodeType": "VariableDeclaration",
                "scope": 1825,
                "src": "392:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1823,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:4:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nodeType": "StructDefinition",
            "scope": 1959,
            "src": "219:191:8",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 1826,
              "nodeType": "StructuredDocumentation",
              "src": "472:130:8",
              "text": "@notice Returns address of contract this PolicyBook covers, access: ANY\n @return _contract is address of covered contract"
            },
            "functionSelector": "32a2c5d0",
            "id": 1831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:2:8"
            },
            "returnParameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "658:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:19:8"
            },
            "scope": 1959,
            "src": "605:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1832,
              "nodeType": "StructuredDocumentation",
              "src": "681:112:8",
              "text": "@notice Returns type of contract this PolicyBook covers, access: ANY\n @return _type is type of contract"
            },
            "functionSelector": "c51a29e0",
            "id": 1837,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "820:2:8"
            },
            "returnParameters": {
              "id": 1836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1835,
                  "mutability": "mutable",
                  "name": "_type",
                  "nodeType": "VariableDeclaration",
                  "scope": 1837,
                  "src": "846:36:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$1966",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 1834,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1966,
                    "src": "846:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$1966",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "845:38:8"
            },
            "scope": 1959,
            "src": "796:88:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1838,
              "nodeType": "StructuredDocumentation",
              "src": "888:176:8",
              "text": "@notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n @return _quoteStrategy is address of Quote strategy contract used to calculate quote"
            },
            "functionSelector": "7cd0fc9b",
            "id": 1843,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:2:8"
            },
            "returnParameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1841,
                  "mutability": "mutable",
                  "name": "_quoteStrategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1843,
                  "src": "1115:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:24:8"
            },
            "scope": 1959,
            "src": "1067:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1844,
              "nodeType": "StructuredDocumentation",
              "src": "1287:379:8",
              "text": "@notice Returns list of shield assets added to PolicyBook, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers"
            },
            "functionSelector": "79fac08c",
            "id": 1856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1846,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1691:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1708:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1690:33:8"
            },
            "returnParameters": {
              "id": 1855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1759:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1759:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1856,
                  "src": "1787:30:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1852,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1787:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1853,
                    "nodeType": "ArrayTypeName",
                    "src": "1787:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:60:8"
            },
            "scope": 1959,
            "src": "1669:150:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1857,
              "nodeType": "StructuredDocumentation",
              "src": "1823:601:8",
              "text": "@notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset"
            },
            "functionSelector": "0e82da53",
            "id": 1872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsWithBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2460:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2477:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:33:8"
            },
            "returnParameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2535:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2535:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2569:30:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1865,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2569:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1866,
                    "nodeType": "ArrayTypeName",
                    "src": "2569:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "_shieldAssetBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1872,
                  "src": "2607:36:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1868,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2607:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1869,
                    "nodeType": "ArrayTypeName",
                    "src": "2607:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:122:8"
            },
            "scope": 1959,
            "src": "2427:223:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1873,
              "nodeType": "StructuredDocumentation",
              "src": "2654:128:8",
              "text": "@notice Returns number of shield assets added, access: ANY\n @return _shieldAssetsCount is number of added shield assets"
            },
            "functionSelector": "2c865d6c",
            "id": 1878,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2811:2:8"
            },
            "returnParameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "2837:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2837:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2836:28:8"
            },
            "scope": 1959,
            "src": "2785:80:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1879,
              "nodeType": "StructuredDocumentation",
              "src": "2869:284:8",
              "text": "@notice Adds shield tokens to contract, access: ANY\n @param _tokenAddress is address of reward token to add\n @param _tokensAmount is max amount of reward to operate on\n @return _success is indicator if purchase is successful, it will throw exception if unsuccessful"
            },
            "functionSelector": "188ff854",
            "id": 1888,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addShieldTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "3181:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "_tokensAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "3204:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3204:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:46:8"
            },
            "returnParameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "3245:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3244:15:8"
            },
            "scope": 1959,
            "src": "3156:104:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "3264:226:8",
              "text": "@notice Let user to buy policy by supplying DAI, access: ANY\n @param _durationDays is number of days to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
            },
            "functionSelector": "f4020b5b",
            "id": 1898,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "_durationDays",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "3517:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "3544:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "_maxDaiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "3570:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3511:84:8"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3604:0:8"
            },
            "scope": 1959,
            "src": "3493:112:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "3609:312:8",
              "text": "@notice Let user to buy policy for another user by supplying DAI, access: ANY\n @param _policyHolderAddr is address of address to assign cover\n @param _durationDays is number of days to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
            },
            "functionSelector": "fc3dfc99",
            "id": 1910,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicyFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "_policyHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "3951:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3951:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "_durationDays",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "3982:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "4009:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "_maxDaiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1910,
                  "src": "4035:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4035:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:115:8"
            },
            "returnParameters": {
              "id": 1909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4069:0:8"
            },
            "scope": 1959,
            "src": "3924:146:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1911,
              "nodeType": "StructuredDocumentation",
              "src": "4074:130:8",
              "text": "@notice Let user to add liquidity by supplying DAI, access: ANY\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "51c6590a",
            "id": 1916,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1913,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1916,
                  "src": "4229:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4229:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4228:25:8"
            },
            "returnParameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4262:0:8"
            },
            "scope": 1959,
            "src": "4207:56:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1917,
              "nodeType": "StructuredDocumentation",
              "src": "4267:219:8",
              "text": "@notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "efa1f98a",
            "id": 1924,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "_liquidityHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "4514:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4514:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1921,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1924,
                  "src": "4544:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4513:55:8"
            },
            "returnParameters": {
              "id": 1923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4577:0:8"
            },
            "scope": 1959,
            "src": "4489:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1925,
              "nodeType": "StructuredDocumentation",
              "src": "4582:132:8",
              "text": "@notice Let user to withdraw deposited liqiudity, access: ANY\n @param _tokensToWithdraw is amount of DAI tokens to withdraw"
            },
            "functionSelector": "0a861f2a",
            "id": 1930,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "_tokensToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 1930,
                  "src": "4744:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:27:8"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4779:0:8"
            },
            "scope": 1959,
            "src": "4717:63:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1931,
              "nodeType": "StructuredDocumentation",
              "src": "4784:224:8",
              "text": "@notice Let user to calculate policy cost in DAI, access: ANY\n @param _durationDays is number of days to cover\n @param _tokens is number of tokens to cover\n @return _daiTokens is amount of DAI policy costs"
            },
            "functionSelector": "758af3ab",
            "id": 1940,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "mutability": "mutable",
                  "name": "_durationDays",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "5029:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "5052:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5052:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:40:8"
            },
            "returnParameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "_daiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1940,
                  "src": "5092:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5092:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5091:20:8"
            },
            "scope": 1959,
            "src": "5011:101:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1941,
              "nodeType": "StructuredDocumentation",
              "src": "5116:178:8",
              "text": "@notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n @param _policyId is id of policy to get reward for, reward will be sent to policy holder"
            },
            "functionSelector": "c18c6057",
            "id": 1946,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rewardForUnclaimedExpiredPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1943,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "5338:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:19:8"
            },
            "returnParameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5365:0:8"
            },
            "scope": 1959,
            "src": "5297:69:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1947,
              "nodeType": "StructuredDocumentation",
              "src": "5370:271:8",
              "text": "@notice Getting stats, access: ANY\n @return _yearlyCost\n @return _maxCapacities is max DAI amount to be covered at now\n @return _totalDaiLiquidity is DAI amount placed by Policy providers\n @return _annualProfitYields is current annual profit yield"
            },
            "functionSelector": "d80528ae",
            "id": 1958,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5658:2:8"
            },
            "returnParameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "_yearlyCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5694:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5694:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "_maxCapacities",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5721:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5721:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "_totalDaiLiquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5751:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "_annualProfitYields",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "5785:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5785:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5686:132:8"
            },
            "scope": 1959,
            "src": "5644:175:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1960,
        "src": "183:5638:8"
      }
    ],
    "src": "32:5790:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0-tezos.1",
  "updatedAt": "2021-01-18T12:01:15.890Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addLiquidity(uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure"
        }
      },
      "addLiquidityFor(address,uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure",
          "_liquidityHolderAddr": "is address of address to assign cover"
        }
      },
      "addShieldTokens(address,uint256)": {
        "params": {
          "_tokenAddress": "is address of reward token to add",
          "_tokensAmount": "is max amount of reward to operate on"
        },
        "returns": {
          "_success": "is indicator if purchase is successful, it will throw exception if unsuccessful"
        }
      },
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "buyPolicy(uint256,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover",
          "_durationDays": "is number of days to cover",
          "_maxDaiTokens": "is number of DAI to spend"
        }
      },
      "buyPolicyFor(address,uint256,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover",
          "_durationDays": "is number of days to cover",
          "_maxDaiTokens": "is number of DAI to spend",
          "_policyHolderAddr": "is address of address to assign cover"
        }
      },
      "getContractAddress()": {
        "returns": {
          "_contract": "is address of covered contract"
        }
      },
      "getContractType()": {
        "returns": {
          "_type": "is type of contract"
        }
      },
      "getQuote(uint256,uint256)": {
        "params": {
          "_durationDays": "is number of days to cover",
          "_tokens": "is number of tokens to cover"
        },
        "returns": {
          "_daiTokens": "is amount of DAI policy costs"
        }
      },
      "quoteStrategy()": {
        "returns": {
          "_quoteStrategy": "is address of Quote strategy contract used to calculate quote"
        }
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "params": {
          "_policyId": "is id of policy to get reward for, reward will be sent to policy holder"
        }
      },
      "shieldAssets(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsCount()": {
        "returns": {
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssetBalance": "is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset",
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "stats()": {
        "returns": {
          "_annualProfitYields": "is current annual profit yield",
          "_maxCapacities": "is max DAI amount to be covered at now",
          "_totalDaiLiquidity": "is DAI amount placed by Policy providers",
          "_yearlyCost": "_yearlyCost"
        }
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "withdrawLiquidity(uint256)": {
        "params": {
          "_tokensToWithdraw": "is amount of DAI tokens to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addLiquidity(uint256)": {
        "notice": "Let user to add liquidity by supplying DAI, access: ANY"
      },
      "addLiquidityFor(address,uint256)": {
        "notice": "Let user to add liqiudity for another user by supplying DAI, access: ANY"
      },
      "addShieldTokens(address,uint256)": {
        "notice": "Adds shield tokens to contract, access: ANY"
      },
      "buyPolicy(uint256,uint256,uint256)": {
        "notice": "Let user to buy policy by supplying DAI, access: ANY"
      },
      "buyPolicyFor(address,uint256,uint256,uint256)": {
        "notice": "Let user to buy policy for another user by supplying DAI, access: ANY"
      },
      "getContractAddress()": {
        "notice": "Returns address of contract this PolicyBook covers, access: ANY"
      },
      "getContractType()": {
        "notice": "Returns type of contract this PolicyBook covers, access: ANY"
      },
      "getQuote(uint256,uint256)": {
        "notice": "Let user to calculate policy cost in DAI, access: ANY"
      },
      "quoteStrategy()": {
        "notice": "Returns quote strategy defined during creation of PolicyBook, access: ANY"
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "notice": "Let user to claim rewards for unclaimed policy cost in DAI, access: ANY"
      },
      "shieldAssets(uint256,uint256)": {
        "notice": "Returns list of shield assets added to PolicyBook, access: ANY"
      },
      "shieldAssetsCount()": {
        "notice": "Returns number of shield assets added, access: ANY"
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "notice": "Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY"
      },
      "stats()": {
        "notice": "Getting stats, access: ANY"
      },
      "withdrawLiquidity(uint256)": {
        "notice": "Let user to withdraw deposited liqiudity, access: ANY"
      }
    },
    "version": 1
  }
}