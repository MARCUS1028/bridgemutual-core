{
  "contractName": "IPolicyBook",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractType",
      "outputs": [
        {
          "internalType": "enum IPolicyBookFabric.ContractType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "_quoteStrategy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssetsWithBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_shieldAssetBalance",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shieldAssetsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensAmount",
          "type": "uint256"
        }
      ],
      "name": "addShieldTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDaiTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDaiTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicyFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityFromLM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokensToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_daiTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "rewardForUnclaimedExpiredPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_yearlyCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCapacities",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDaiLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_annualProfitYields",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityFromLM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensAmount\",\"type\":\"uint256\"}],\"name\":\"addShieldTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDaiTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDaiTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicyFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractType\",\"outputs\":[{\"internalType\":\"enum IPolicyBookFabric.ContractType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_daiTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_quoteStrategy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"rewardForUnclaimedExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shieldAssetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssetsWithBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shieldAssetBalance\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_yearlyCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCapacities\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDaiLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_annualProfitYields\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\"}},\"addLiquidityFor(address,uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\",\"_liquidityHolderAddr\":\"is address of address to assign cover\"}},\"addLiquidityFromLM(address,uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\",\"_liquidityHolderAddr\":\"is address of address to assign cover\"}},\"addShieldTokens(address,uint256)\":{\"params\":{\"_tokenAddress\":\"is address of reward token to add\",\"_tokensAmount\":\"is max amount of reward to operate on\"},\"returns\":{\"_success\":\"is indicator if purchase is successful, it will throw exception if unsuccessful\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"buyPolicy(uint256,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover\",\"_durationSeconds\":\"is number of seconds to cover\",\"_maxDaiTokens\":\"is number of DAI to spend\"}},\"buyPolicyFor(address,uint256,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover\",\"_durationSeconds\":\"is number of seconds to cover\",\"_maxDaiTokens\":\"is number of DAI to spend\",\"_policyHolderAddr\":\"is address of address to assign cover\"}},\"contractAddress()\":{\"returns\":{\"_contract\":\"is address of covered contract\"}},\"contractType()\":{\"returns\":{\"_type\":\"is type of contract\"}},\"getQuote(uint256,uint256)\":{\"params\":{\"_durationSeconds\":\"is number of seconds to cover\",\"_tokens\":\"is number of tokens to cover\"},\"returns\":{\"_daiTokens\":\"is amount of DAI policy costs\"}},\"quoteStrategy()\":{\"returns\":{\"_quoteStrategy\":\"is address of Quote strategy contract used to calculate quote\"}},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"params\":{\"_policyId\":\"is id of policy to get reward for, reward will be sent to policy holder\"}},\"shieldAssets(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsCount()\":{\"returns\":{\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsWithBalance(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssetBalance\":\"is tokens amount of shield assets allocated to Policy Book,  to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\",\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"stats()\":{\"returns\":{\"_annualProfitYields\":\"is current annual profit yield\",\"_maxCapacities\":\"is max DAI amount to be covered at now\",\"_totalDaiLiquidity\":\"is DAI amount placed by Policy providers\",\"_yearlyCost\":\"_yearlyCost\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdrawLiquidity(uint256)\":{\"params\":{\"_tokensToWithdraw\":\"is amount of DAI tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256)\":{\"notice\":\"Let user to add liquidity by supplying DAI, access: ANY\"},\"addLiquidityFor(address,uint256)\":{\"notice\":\"Let user to add liqiudity for another user by supplying DAI, access: ANY\"},\"addLiquidityFromLM(address,uint256)\":{\"notice\":\"Let liquidityMining contract to add liqiudity for another user by supplying DAI, access: ONLY LM\"},\"addShieldTokens(address,uint256)\":{\"notice\":\"Adds shield tokens to contract, access: ANY\"},\"buyPolicy(uint256,uint256,uint256)\":{\"notice\":\"Let user to buy policy by supplying DAI, access: ANY\"},\"buyPolicyFor(address,uint256,uint256,uint256)\":{\"notice\":\"Let user to buy policy for another user by supplying DAI, access: ANY\"},\"contractAddress()\":{\"notice\":\"Returns address of contract this PolicyBook covers, access: ANY\"},\"contractType()\":{\"notice\":\"Returns type of contract this PolicyBook covers, access: ANY\"},\"getQuote(uint256,uint256)\":{\"notice\":\"Let user to calculate policy cost in DAI, access: ANY\"},\"quoteStrategy()\":{\"notice\":\"Returns quote strategy defined during creation of PolicyBook, access: ANY\"},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"notice\":\"Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\"},\"shieldAssets(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added to PolicyBook, access: ANY\"},\"shieldAssetsCount()\":{\"notice\":\"Returns number of shield assets added, access: ANY\"},\"shieldAssetsWithBalance(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\"},\"stats()\":{\"notice\":\"Getting stats, access: ANY\"},\"withdrawLiquidity(uint256)\":{\"notice\":\"Let user to withdraw deposited liqiudity, access: ANY\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":\"IPolicyBook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x678abf9eceab922621749bc33370a85c00c908ec9b0cd92d04b9684e2e183940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55da363d71c091227946111d7f0c027e8b11d613a00116576c029e1c826350ec\",\"dweb:/ipfs/QmUaqeLvhYVzKKuv82VmvwTnWjfRtqikpK1z4W491YrmKR\"]},\"/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0xbad7303fb38ce95695c90327b81fba5839bd5dfd375f588d3895c7cf3d5936b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c11ed13cc4984e2e491b43bf1a0f7e5181c749ab6f84db470ec174f4c77cde3\",\"dweb:/ipfs/QmYt3N3kMSFyMbZFEpzzdTa4QHgaMzGiaVJbTVDnFW62tq\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IPolicyBookFabric.sol\";\n\ninterface IPolicyBook is IERC20 {\n  struct Policy {\n    uint256 id;\n    uint256 holder;\n    uint256 daiTokens;\n    uint256 durationSeconds;\n    uint256 coveredTokens;\n    uint256 createdAt;\n    bool claimed;\n    bool rewarded;\n  }\n\n  // @TODO: should we let DAO to change contract address?\n  /// @notice Returns address of contract this PolicyBook covers, access: ANY\n  /// @return _contract is address of covered contract\n  function contractAddress() external view returns (address _contract);\n\n  /// @notice Returns type of contract this PolicyBook covers, access: ANY\n  /// @return _type is type of contract\n  function contractType() external view returns (IPolicyBookFabric.ContractType _type);\n\n  /// @notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n  /// @return _quoteStrategy is address of Quote strategy contract used to calculate quote\n  function quoteStrategy() external view returns (address _quoteStrategy);\n\n  // @TODO: Vector Attack - Hacker? can add too many shield tokens, \n  // that will be impossible to calculate tokens portion to give to Policy giver\n  /// @notice Returns list of shield assets added to PolicyBook, access: ANY\n  /// @param _offset is starting item in array to return array from\n  /// @param _limit is number of policy books to returns from _offset\n  /// @return _shieldAssetsCount is number of added shield assets\n  /// @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n  function shieldAssets(uint256 _offset, uint256 _limit)\n    external\n    view\n    returns (uint256 _shieldAssetsCount, address[] memory _shieldAssets);\n\n  /// @notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n  /// @param _offset is starting item in array to return array from\n  /// @param _limit is number of policy books to returns from _offset\n  /// @return _shieldAssetsCount is number of added shield assets\n  /// @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n  /// @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, \n  /// to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\n  function shieldAssetsWithBalance(uint256 _offset, uint256 _limit)\n    external\n    view\n    returns (\n      uint256 _shieldAssetsCount,\n      address[] memory _shieldAssets,\n      uint256[] memory _shieldAssetBalance\n    );\n\n  /// @notice Returns number of shield assets added, access: ANY\n  /// @return _shieldAssetsCount is number of added shield assets\n  function shieldAssetsCount() external view returns (uint256 _shieldAssetsCount);\n\n  /// @notice Adds shield tokens to contract, access: ANY\n  /// @param _tokenAddress is address of reward token to add\n  /// @param _tokensAmount is max amount of reward to operate on\n  /// @return _success is indicator if purchase is successful, it will throw exception if unsuccessful\n  function addShieldTokens(address _tokenAddress, uint256 _tokensAmount) external returns (bool _success);\n\n  /// @notice Let user to buy policy by supplying DAI, access: ANY\n  /// @param _durationSeconds is number of seconds to cover\n  /// @param _coverTokens is number of tokens to cover\n  /// @param _maxDaiTokens is number of DAI to spend\n  function buyPolicy(\n    uint256 _durationSeconds,\n    uint256 _coverTokens,\n    uint256 _maxDaiTokens\n  ) external;\n\n  /// @notice Let user to buy policy for another user by supplying DAI, access: ANY\n  /// @param _policyHolderAddr is address of address to assign cover\n  /// @param _durationSeconds is number of seconds to cover\n  /// @param _coverTokens is number of tokens to cover\n  /// @param _maxDaiTokens is number of DAI to spend\n  function buyPolicyFor(\n    address _policyHolderAddr,\n    uint256 _durationSeconds,\n    uint256 _coverTokens,\n    uint256 _maxDaiTokens\n  ) external;\n\n  /// @notice Let user to add liquidity by supplying DAI, access: ANY\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidity(uint256 _liqudityAmount) external;\n\n  /// @notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n  /// @param _liquidityHolderAddr is address of address to assign cover\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidityFor(address _liquidityHolderAddr, uint256 _liqudityAmount) external;\n\n  /// @notice Let liquidityMining contract to add liqiudity for another user by supplying DAI, access: ONLY LM\n  /// @param _liquidityHolderAddr is address of address to assign cover\n  /// @param _liqudityAmount is amount of DAI tokens to secure\n  function addLiquidityFromLM(address _liquidityHolderAddr, uint256 _liqudityAmount) external;\n\n  /// @notice Let user to withdraw deposited liqiudity, access: ANY\n  /// @param _tokensToWithdraw is amount of DAI tokens to withdraw\n  function withdrawLiquidity(uint256 _tokensToWithdraw) external;\n\n  /// @notice Let user to calculate policy cost in DAI, access: ANY\n  /// @param _durationSeconds is number of seconds to cover\n  /// @param _tokens is number of tokens to cover\n  /// @return _daiTokens is amount of DAI policy costs\n  function getQuote(uint256 _durationSeconds, uint256 _tokens) external view returns (uint256 _daiTokens);\n\n  /// @notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n  /// @param _policyId is id of policy to get reward for, reward will be sent to policy holder\n  function rewardForUnclaimedExpiredPolicy(uint256 _policyId) external;\n\n  /// @notice Getting stats, access: ANY\n  /// @return _yearlyCost\n  /// @return _maxCapacities is max DAI amount to be covered at now\n  /// @return _totalDaiLiquidity is DAI amount placed by Policy providers\n  /// @return _annualProfitYields is current annual profit yield\n  function stats()\n    external\n    returns (\n      uint256 _yearlyCost,\n      uint256 _maxCapacities,\n      uint256 _totalDaiLiquidity,\n      uint256 _annualProfitYields\n    );\n}\n",
  "sourcePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
  "ast": {
    "absolutePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
    "exportedSymbols": {
      "IERC20": [
        6408
      ],
      "IPolicyBook": [
        3563
      ],
      "IPolicyBookFabric": [
        3612
      ]
    },
    "id": 3564,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3399,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "id": 3400,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3401,
        "nodeType": "ImportDirective",
        "scope": 3564,
        "sourceUnit": 6409,
        "src": "91:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol",
        "file": "./IPolicyBookFabric.sol",
        "id": 3402,
        "nodeType": "ImportDirective",
        "scope": 3564,
        "sourceUnit": 3613,
        "src": "148:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3403,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6408,
              "src": "208:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6408",
                "typeString": "contract IERC20"
              }
            },
            "id": 3404,
            "nodeType": "InheritanceSpecifier",
            "src": "208:6:11"
          }
        ],
        "contractDependencies": [
          6408
        ],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3563,
        "linearizedBaseContracts": [
          3563,
          6408
        ],
        "name": "IPolicyBook",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IPolicyBook.Policy",
            "id": 3421,
            "members": [
              {
                "constant": false,
                "id": 3406,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "239:10:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3405,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "239:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3408,
                "mutability": "mutable",
                "name": "holder",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "255:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3407,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3410,
                "mutability": "mutable",
                "name": "daiTokens",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "275:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3409,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "275:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3412,
                "mutability": "mutable",
                "name": "durationSeconds",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "298:23:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3411,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3414,
                "mutability": "mutable",
                "name": "coveredTokens",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "327:21:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3413,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "327:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3416,
                "mutability": "mutable",
                "name": "createdAt",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "354:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3415,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "354:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3418,
                "mutability": "mutable",
                "name": "claimed",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "377:12:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3417,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3420,
                "mutability": "mutable",
                "name": "rewarded",
                "nodeType": "VariableDeclaration",
                "scope": 3421,
                "src": "395:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3419,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "395:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Policy",
            "nodeType": "StructDefinition",
            "scope": 3563,
            "src": "219:194:11",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 3422,
              "nodeType": "StructuredDocumentation",
              "src": "475:130:11",
              "text": "@notice Returns address of contract this PolicyBook covers, access: ANY\n @return _contract is address of covered contract"
            },
            "functionSelector": "f6b4dfb4",
            "id": 3427,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:2:11"
            },
            "returnParameters": {
              "id": 3426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3425,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 3427,
                  "src": "658:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "658:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "657:19:11"
            },
            "scope": 3563,
            "src": "608:69:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3428,
              "nodeType": "StructuredDocumentation",
              "src": "681:112:11",
              "text": "@notice Returns type of contract this PolicyBook covers, access: ANY\n @return _type is type of contract"
            },
            "functionSelector": "cb2ef6f7",
            "id": 3433,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "817:2:11"
            },
            "returnParameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3431,
                  "mutability": "mutable",
                  "name": "_type",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "843:36:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$3570",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 3430,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3570,
                    "src": "843:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$3570",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:38:11"
            },
            "scope": 3563,
            "src": "796:85:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3434,
              "nodeType": "StructuredDocumentation",
              "src": "885:176:11",
              "text": "@notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n @return _quoteStrategy is address of Quote strategy contract used to calculate quote"
            },
            "functionSelector": "7cd0fc9b",
            "id": 3439,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "quoteStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:11"
            },
            "returnParameters": {
              "id": 3438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "_quoteStrategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 3439,
                  "src": "1112:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:24:11"
            },
            "scope": 3563,
            "src": "1064:72:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3440,
              "nodeType": "StructuredDocumentation",
              "src": "1290:379:11",
              "text": "@notice Returns list of shield assets added to PolicyBook, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers"
            },
            "functionSelector": "79fac08c",
            "id": 3452,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssets",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3442,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 3452,
                  "src": "1694:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3444,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 3452,
                  "src": "1711:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1693:33:11"
            },
            "returnParameters": {
              "id": 3451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3447,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3452,
                  "src": "1762:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3450,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 3452,
                  "src": "1790:30:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3448,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1790:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3449,
                    "nodeType": "ArrayTypeName",
                    "src": "1790:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:60:11"
            },
            "scope": 3563,
            "src": "1672:150:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3453,
              "nodeType": "StructuredDocumentation",
              "src": "1826:608:11",
              "text": "@notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, \n to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset"
            },
            "functionSelector": "0e82da53",
            "id": 3468,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsWithBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3455,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "2470:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3457,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "2487:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:33:11"
            },
            "returnParameters": {
              "id": 3467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3460,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "2545:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2545:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "_shieldAssets",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "2579:30:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3461,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2579:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3462,
                    "nodeType": "ArrayTypeName",
                    "src": "2579:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3466,
                  "mutability": "mutable",
                  "name": "_shieldAssetBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3468,
                  "src": "2617:36:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3464,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2617:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3465,
                    "nodeType": "ArrayTypeName",
                    "src": "2617:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:122:11"
            },
            "scope": 3563,
            "src": "2437:223:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3469,
              "nodeType": "StructuredDocumentation",
              "src": "2664:128:11",
              "text": "@notice Returns number of shield assets added, access: ANY\n @return _shieldAssetsCount is number of added shield assets"
            },
            "functionSelector": "2c865d6c",
            "id": 3474,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "shieldAssetsCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2821:2:11"
            },
            "returnParameters": {
              "id": 3473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3472,
                  "mutability": "mutable",
                  "name": "_shieldAssetsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3474,
                  "src": "2847:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:28:11"
            },
            "scope": 3563,
            "src": "2795:80:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3475,
              "nodeType": "StructuredDocumentation",
              "src": "2879:284:11",
              "text": "@notice Adds shield tokens to contract, access: ANY\n @param _tokenAddress is address of reward token to add\n @param _tokensAmount is max amount of reward to operate on\n @return _success is indicator if purchase is successful, it will throw exception if unsuccessful"
            },
            "functionSelector": "188ff854",
            "id": 3484,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addShieldTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3477,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "3191:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3191:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3479,
                  "mutability": "mutable",
                  "name": "_tokensAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "3214:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3190:46:11"
            },
            "returnParameters": {
              "id": 3483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3482,
                  "mutability": "mutable",
                  "name": "_success",
                  "nodeType": "VariableDeclaration",
                  "scope": 3484,
                  "src": "3255:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3255:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3254:15:11"
            },
            "scope": 3563,
            "src": "3166:104:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3485,
              "nodeType": "StructuredDocumentation",
              "src": "3274:232:11",
              "text": "@notice Let user to buy policy by supplying DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
            },
            "functionSelector": "f4020b5b",
            "id": 3494,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3487,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 3494,
                  "src": "3533:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3533:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3489,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3494,
                  "src": "3563:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3491,
                  "mutability": "mutable",
                  "name": "_maxDaiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3494,
                  "src": "3589:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3589:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3527:87:11"
            },
            "returnParameters": {
              "id": 3493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:0:11"
            },
            "scope": 3563,
            "src": "3509:115:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3495,
              "nodeType": "StructuredDocumentation",
              "src": "3628:318:11",
              "text": "@notice Let user to buy policy for another user by supplying DAI, access: ANY\n @param _policyHolderAddr is address of address to assign cover\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
            },
            "functionSelector": "fc3dfc99",
            "id": 3506,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buyPolicyFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3497,
                  "mutability": "mutable",
                  "name": "_policyHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3506,
                  "src": "3976:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3976:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3499,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 3506,
                  "src": "4007:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3501,
                  "mutability": "mutable",
                  "name": "_coverTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3506,
                  "src": "4037:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4037:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3503,
                  "mutability": "mutable",
                  "name": "_maxDaiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3506,
                  "src": "4063:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4063:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3970:118:11"
            },
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4097:0:11"
            },
            "scope": 3563,
            "src": "3949:149:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3507,
              "nodeType": "StructuredDocumentation",
              "src": "4102:130:11",
              "text": "@notice Let user to add liquidity by supplying DAI, access: ANY\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "51c6590a",
            "id": 3512,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3509,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3512,
                  "src": "4257:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4257:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4256:25:11"
            },
            "returnParameters": {
              "id": 3511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4290:0:11"
            },
            "scope": 3563,
            "src": "4235:56:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3513,
              "nodeType": "StructuredDocumentation",
              "src": "4295:219:11",
              "text": "@notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "efa1f98a",
            "id": 3520,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3515,
                  "mutability": "mutable",
                  "name": "_liquidityHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "4542:28:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4542:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3517,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3520,
                  "src": "4572:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4572:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4541:55:11"
            },
            "returnParameters": {
              "id": 3519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4605:0:11"
            },
            "scope": 3563,
            "src": "4517:89:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3521,
              "nodeType": "StructuredDocumentation",
              "src": "4610:243:11",
              "text": "@notice Let liquidityMining contract to add liqiudity for another user by supplying DAI, access: ONLY LM\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
            },
            "functionSelector": "c91348c3",
            "id": 3528,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityFromLM",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3523,
                  "mutability": "mutable",
                  "name": "_liquidityHolderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3528,
                  "src": "4884:28:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4884:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "_liqudityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3528,
                  "src": "4914:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4914:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4883:55:11"
            },
            "returnParameters": {
              "id": 3527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4947:0:11"
            },
            "scope": 3563,
            "src": "4856:92:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3529,
              "nodeType": "StructuredDocumentation",
              "src": "4952:132:11",
              "text": "@notice Let user to withdraw deposited liqiudity, access: ANY\n @param _tokensToWithdraw is amount of DAI tokens to withdraw"
            },
            "functionSelector": "0a861f2a",
            "id": 3534,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "_tokensToWithdraw",
                  "nodeType": "VariableDeclaration",
                  "scope": 3534,
                  "src": "5114:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5113:27:11"
            },
            "returnParameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5149:0:11"
            },
            "scope": 3563,
            "src": "5087:63:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3535,
              "nodeType": "StructuredDocumentation",
              "src": "5154:230:11",
              "text": "@notice Let user to calculate policy cost in DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _tokens is number of tokens to cover\n @return _daiTokens is amount of DAI policy costs"
            },
            "functionSelector": "758af3ab",
            "id": 3544,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getQuote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3537,
                  "mutability": "mutable",
                  "name": "_durationSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "5405:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3539,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "5431:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5431:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5404:43:11"
            },
            "returnParameters": {
              "id": 3543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3542,
                  "mutability": "mutable",
                  "name": "_daiTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3544,
                  "src": "5471:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5471:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5470:20:11"
            },
            "scope": 3563,
            "src": "5387:104:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3545,
              "nodeType": "StructuredDocumentation",
              "src": "5495:178:11",
              "text": "@notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n @param _policyId is id of policy to get reward for, reward will be sent to policy holder"
            },
            "functionSelector": "c18c6057",
            "id": 3550,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rewardForUnclaimedExpiredPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3547,
                  "mutability": "mutable",
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3550,
                  "src": "5717:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5717:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5716:19:11"
            },
            "returnParameters": {
              "id": 3549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5744:0:11"
            },
            "scope": 3563,
            "src": "5676:69:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3551,
              "nodeType": "StructuredDocumentation",
              "src": "5749:271:11",
              "text": "@notice Getting stats, access: ANY\n @return _yearlyCost\n @return _maxCapacities is max DAI amount to be covered at now\n @return _totalDaiLiquidity is DAI amount placed by Policy providers\n @return _annualProfitYields is current annual profit yield"
            },
            "functionSelector": "d80528ae",
            "id": 3562,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stats",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6037:2:11"
            },
            "returnParameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3554,
                  "mutability": "mutable",
                  "name": "_yearlyCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 3562,
                  "src": "6073:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6073:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3556,
                  "mutability": "mutable",
                  "name": "_maxCapacities",
                  "nodeType": "VariableDeclaration",
                  "scope": 3562,
                  "src": "6100:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6100:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3558,
                  "mutability": "mutable",
                  "name": "_totalDaiLiquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 3562,
                  "src": "6130:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6130:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3560,
                  "mutability": "mutable",
                  "name": "_annualProfitYields",
                  "nodeType": "VariableDeclaration",
                  "scope": 3562,
                  "src": "6164:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6164:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6065:132:11"
            },
            "scope": 3563,
            "src": "6023:175:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3564,
        "src": "183:6017:11"
      }
    ],
    "src": "32:6169:11"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
      "exportedSymbols": {
        "IERC20": [
          6408
        ],
        "IPolicyBook": [
          3563
        ],
        "IPolicyBookFabric": [
          3612
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 3399,
        "name": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 3400,
        "name": "PragmaDirective",
        "src": "56:33:11"
      },
      {
        "attributes": {
          "SourceUnit": 6409,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 3564,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3401,
        "name": "ImportDirective",
        "src": "91:56:11"
      },
      {
        "attributes": {
          "SourceUnit": 3613,
          "absolutePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol",
          "file": "./IPolicyBookFabric.sol",
          "scope": 3564,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3402,
        "name": "ImportDirective",
        "src": "148:33:11"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            6408
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            3563,
            6408
          ],
          "name": "IPolicyBook",
          "scope": 3564
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6408,
                  "type": "contract IERC20"
                },
                "id": 3403,
                "name": "UserDefinedTypeName",
                "src": "208:6:11"
              }
            ],
            "id": 3404,
            "name": "InheritanceSpecifier",
            "src": "208:6:11"
          },
          {
            "attributes": {
              "canonicalName": "IPolicyBook.Policy",
              "name": "Policy",
              "scope": 3563,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 3405,
                    "name": "ElementaryTypeName",
                    "src": "239:7:11"
                  }
                ],
                "id": 3406,
                "name": "VariableDeclaration",
                "src": "239:10:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "holder",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 3407,
                    "name": "ElementaryTypeName",
                    "src": "255:7:11"
                  }
                ],
                "id": 3408,
                "name": "VariableDeclaration",
                "src": "255:14:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "daiTokens",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 3409,
                    "name": "ElementaryTypeName",
                    "src": "275:7:11"
                  }
                ],
                "id": 3410,
                "name": "VariableDeclaration",
                "src": "275:17:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "durationSeconds",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 3411,
                    "name": "ElementaryTypeName",
                    "src": "298:7:11"
                  }
                ],
                "id": 3412,
                "name": "VariableDeclaration",
                "src": "298:23:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "coveredTokens",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 3413,
                    "name": "ElementaryTypeName",
                    "src": "327:7:11"
                  }
                ],
                "id": 3414,
                "name": "VariableDeclaration",
                "src": "327:21:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "createdAt",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 3415,
                    "name": "ElementaryTypeName",
                    "src": "354:7:11"
                  }
                ],
                "id": 3416,
                "name": "VariableDeclaration",
                "src": "354:17:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "claimed",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 3417,
                    "name": "ElementaryTypeName",
                    "src": "377:4:11"
                  }
                ],
                "id": 3418,
                "name": "VariableDeclaration",
                "src": "377:12:11"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "rewarded",
                  "scope": 3421,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 3419,
                    "name": "ElementaryTypeName",
                    "src": "395:4:11"
                  }
                ],
                "id": 3420,
                "name": "VariableDeclaration",
                "src": "395:13:11"
              }
            ],
            "id": 3421,
            "name": "StructDefinition",
            "src": "219:194:11"
          },
          {
            "attributes": {
              "functionSelector": "f6b4dfb4",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "contractAddress",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns address of contract this PolicyBook covers, access: ANY\n @return _contract is address of covered contract"
                },
                "id": 3422,
                "name": "StructuredDocumentation",
                "src": "475:130:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3423,
                "name": "ParameterList",
                "src": "632:2:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contract",
                      "scope": 3427,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3424,
                        "name": "ElementaryTypeName",
                        "src": "658:7:11"
                      }
                    ],
                    "id": 3425,
                    "name": "VariableDeclaration",
                    "src": "658:17:11"
                  }
                ],
                "id": 3426,
                "name": "ParameterList",
                "src": "657:19:11"
              }
            ],
            "id": 3427,
            "name": "FunctionDefinition",
            "src": "608:69:11"
          },
          {
            "attributes": {
              "functionSelector": "cb2ef6f7",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "contractType",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns type of contract this PolicyBook covers, access: ANY\n @return _type is type of contract"
                },
                "id": 3428,
                "name": "StructuredDocumentation",
                "src": "681:112:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3429,
                "name": "ParameterList",
                "src": "817:2:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_type",
                      "scope": 3433,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum IPolicyBookFabric.ContractType",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IPolicyBookFabric.ContractType",
                          "referencedDeclaration": 3570,
                          "type": "enum IPolicyBookFabric.ContractType"
                        },
                        "id": 3430,
                        "name": "UserDefinedTypeName",
                        "src": "843:30:11"
                      }
                    ],
                    "id": 3431,
                    "name": "VariableDeclaration",
                    "src": "843:36:11"
                  }
                ],
                "id": 3432,
                "name": "ParameterList",
                "src": "842:38:11"
              }
            ],
            "id": 3433,
            "name": "FunctionDefinition",
            "src": "796:85:11"
          },
          {
            "attributes": {
              "functionSelector": "7cd0fc9b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "quoteStrategy",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns quote strategy defined during creation of PolicyBook, access: ANY\n @return _quoteStrategy is address of Quote strategy contract used to calculate quote"
                },
                "id": 3434,
                "name": "StructuredDocumentation",
                "src": "885:176:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3435,
                "name": "ParameterList",
                "src": "1086:2:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_quoteStrategy",
                      "scope": 3439,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3436,
                        "name": "ElementaryTypeName",
                        "src": "1112:7:11"
                      }
                    ],
                    "id": 3437,
                    "name": "VariableDeclaration",
                    "src": "1112:22:11"
                  }
                ],
                "id": 3438,
                "name": "ParameterList",
                "src": "1111:24:11"
              }
            ],
            "id": 3439,
            "name": "FunctionDefinition",
            "src": "1064:72:11"
          },
          {
            "attributes": {
              "functionSelector": "79fac08c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "shieldAssets",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns list of shield assets added to PolicyBook, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers"
                },
                "id": 3440,
                "name": "StructuredDocumentation",
                "src": "1290:379:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_offset",
                      "scope": 3452,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3441,
                        "name": "ElementaryTypeName",
                        "src": "1694:7:11"
                      }
                    ],
                    "id": 3442,
                    "name": "VariableDeclaration",
                    "src": "1694:15:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_limit",
                      "scope": 3452,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3443,
                        "name": "ElementaryTypeName",
                        "src": "1711:7:11"
                      }
                    ],
                    "id": 3444,
                    "name": "VariableDeclaration",
                    "src": "1711:14:11"
                  }
                ],
                "id": 3445,
                "name": "ParameterList",
                "src": "1693:33:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetsCount",
                      "scope": 3452,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3446,
                        "name": "ElementaryTypeName",
                        "src": "1762:7:11"
                      }
                    ],
                    "id": 3447,
                    "name": "VariableDeclaration",
                    "src": "1762:26:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssets",
                      "scope": 3452,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 3448,
                            "name": "ElementaryTypeName",
                            "src": "1790:7:11"
                          }
                        ],
                        "id": 3449,
                        "name": "ArrayTypeName",
                        "src": "1790:9:11"
                      }
                    ],
                    "id": 3450,
                    "name": "VariableDeclaration",
                    "src": "1790:30:11"
                  }
                ],
                "id": 3451,
                "name": "ParameterList",
                "src": "1761:60:11"
              }
            ],
            "id": 3452,
            "name": "FunctionDefinition",
            "src": "1672:150:11"
          },
          {
            "attributes": {
              "functionSelector": "0e82da53",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "shieldAssetsWithBalance",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\n @param _offset is starting item in array to return array from\n @param _limit is number of policy books to returns from _offset\n @return _shieldAssetsCount is number of added shield assets\n @return _shieldAssets is addresses of shield assets, that will be distributed to Policy givers\n @return _shieldAssetBalance is tokens amount of shield assets allocated to Policy Book, \n to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset"
                },
                "id": 3453,
                "name": "StructuredDocumentation",
                "src": "1826:608:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_offset",
                      "scope": 3468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3454,
                        "name": "ElementaryTypeName",
                        "src": "2470:7:11"
                      }
                    ],
                    "id": 3455,
                    "name": "VariableDeclaration",
                    "src": "2470:15:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_limit",
                      "scope": 3468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3456,
                        "name": "ElementaryTypeName",
                        "src": "2487:7:11"
                      }
                    ],
                    "id": 3457,
                    "name": "VariableDeclaration",
                    "src": "2487:14:11"
                  }
                ],
                "id": 3458,
                "name": "ParameterList",
                "src": "2469:33:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetsCount",
                      "scope": 3468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3459,
                        "name": "ElementaryTypeName",
                        "src": "2545:7:11"
                      }
                    ],
                    "id": 3460,
                    "name": "VariableDeclaration",
                    "src": "2545:26:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssets",
                      "scope": 3468,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 3461,
                            "name": "ElementaryTypeName",
                            "src": "2579:7:11"
                          }
                        ],
                        "id": 3462,
                        "name": "ArrayTypeName",
                        "src": "2579:9:11"
                      }
                    ],
                    "id": 3463,
                    "name": "VariableDeclaration",
                    "src": "2579:30:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetBalance",
                      "scope": 3468,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 3464,
                            "name": "ElementaryTypeName",
                            "src": "2617:7:11"
                          }
                        ],
                        "id": 3465,
                        "name": "ArrayTypeName",
                        "src": "2617:9:11"
                      }
                    ],
                    "id": 3466,
                    "name": "VariableDeclaration",
                    "src": "2617:36:11"
                  }
                ],
                "id": 3467,
                "name": "ParameterList",
                "src": "2537:122:11"
              }
            ],
            "id": 3468,
            "name": "FunctionDefinition",
            "src": "2437:223:11"
          },
          {
            "attributes": {
              "functionSelector": "2c865d6c",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "shieldAssetsCount",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Returns number of shield assets added, access: ANY\n @return _shieldAssetsCount is number of added shield assets"
                },
                "id": 3469,
                "name": "StructuredDocumentation",
                "src": "2664:128:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3470,
                "name": "ParameterList",
                "src": "2821:2:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_shieldAssetsCount",
                      "scope": 3474,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3471,
                        "name": "ElementaryTypeName",
                        "src": "2847:7:11"
                      }
                    ],
                    "id": 3472,
                    "name": "VariableDeclaration",
                    "src": "2847:26:11"
                  }
                ],
                "id": 3473,
                "name": "ParameterList",
                "src": "2846:28:11"
              }
            ],
            "id": 3474,
            "name": "FunctionDefinition",
            "src": "2795:80:11"
          },
          {
            "attributes": {
              "functionSelector": "188ff854",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addShieldTokens",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Adds shield tokens to contract, access: ANY\n @param _tokenAddress is address of reward token to add\n @param _tokensAmount is max amount of reward to operate on\n @return _success is indicator if purchase is successful, it will throw exception if unsuccessful"
                },
                "id": 3475,
                "name": "StructuredDocumentation",
                "src": "2879:284:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokenAddress",
                      "scope": 3484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3476,
                        "name": "ElementaryTypeName",
                        "src": "3191:7:11"
                      }
                    ],
                    "id": 3477,
                    "name": "VariableDeclaration",
                    "src": "3191:21:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokensAmount",
                      "scope": 3484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3478,
                        "name": "ElementaryTypeName",
                        "src": "3214:7:11"
                      }
                    ],
                    "id": 3479,
                    "name": "VariableDeclaration",
                    "src": "3214:21:11"
                  }
                ],
                "id": 3480,
                "name": "ParameterList",
                "src": "3190:46:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_success",
                      "scope": 3484,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3481,
                        "name": "ElementaryTypeName",
                        "src": "3255:4:11"
                      }
                    ],
                    "id": 3482,
                    "name": "VariableDeclaration",
                    "src": "3255:13:11"
                  }
                ],
                "id": 3483,
                "name": "ParameterList",
                "src": "3254:15:11"
              }
            ],
            "id": 3484,
            "name": "FunctionDefinition",
            "src": "3166:104:11"
          },
          {
            "attributes": {
              "functionSelector": "f4020b5b",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "buyPolicy",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to buy policy by supplying DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
                },
                "id": 3485,
                "name": "StructuredDocumentation",
                "src": "3274:232:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_durationSeconds",
                      "scope": 3494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3486,
                        "name": "ElementaryTypeName",
                        "src": "3533:7:11"
                      }
                    ],
                    "id": 3487,
                    "name": "VariableDeclaration",
                    "src": "3533:24:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_coverTokens",
                      "scope": 3494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3488,
                        "name": "ElementaryTypeName",
                        "src": "3563:7:11"
                      }
                    ],
                    "id": 3489,
                    "name": "VariableDeclaration",
                    "src": "3563:20:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_maxDaiTokens",
                      "scope": 3494,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3490,
                        "name": "ElementaryTypeName",
                        "src": "3589:7:11"
                      }
                    ],
                    "id": 3491,
                    "name": "VariableDeclaration",
                    "src": "3589:21:11"
                  }
                ],
                "id": 3492,
                "name": "ParameterList",
                "src": "3527:87:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3493,
                "name": "ParameterList",
                "src": "3623:0:11"
              }
            ],
            "id": 3494,
            "name": "FunctionDefinition",
            "src": "3509:115:11"
          },
          {
            "attributes": {
              "functionSelector": "fc3dfc99",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "buyPolicyFor",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to buy policy for another user by supplying DAI, access: ANY\n @param _policyHolderAddr is address of address to assign cover\n @param _durationSeconds is number of seconds to cover\n @param _coverTokens is number of tokens to cover\n @param _maxDaiTokens is number of DAI to spend"
                },
                "id": 3495,
                "name": "StructuredDocumentation",
                "src": "3628:318:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyHolderAddr",
                      "scope": 3506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3496,
                        "name": "ElementaryTypeName",
                        "src": "3976:7:11"
                      }
                    ],
                    "id": 3497,
                    "name": "VariableDeclaration",
                    "src": "3976:25:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_durationSeconds",
                      "scope": 3506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3498,
                        "name": "ElementaryTypeName",
                        "src": "4007:7:11"
                      }
                    ],
                    "id": 3499,
                    "name": "VariableDeclaration",
                    "src": "4007:24:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_coverTokens",
                      "scope": 3506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3500,
                        "name": "ElementaryTypeName",
                        "src": "4037:7:11"
                      }
                    ],
                    "id": 3501,
                    "name": "VariableDeclaration",
                    "src": "4037:20:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_maxDaiTokens",
                      "scope": 3506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3502,
                        "name": "ElementaryTypeName",
                        "src": "4063:7:11"
                      }
                    ],
                    "id": 3503,
                    "name": "VariableDeclaration",
                    "src": "4063:21:11"
                  }
                ],
                "id": 3504,
                "name": "ParameterList",
                "src": "3970:118:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3505,
                "name": "ParameterList",
                "src": "4097:0:11"
              }
            ],
            "id": 3506,
            "name": "FunctionDefinition",
            "src": "3949:149:11"
          },
          {
            "attributes": {
              "functionSelector": "51c6590a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addLiquidity",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to add liquidity by supplying DAI, access: ANY\n @param _liqudityAmount is amount of DAI tokens to secure"
                },
                "id": 3507,
                "name": "StructuredDocumentation",
                "src": "4102:130:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liqudityAmount",
                      "scope": 3512,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3508,
                        "name": "ElementaryTypeName",
                        "src": "4257:7:11"
                      }
                    ],
                    "id": 3509,
                    "name": "VariableDeclaration",
                    "src": "4257:23:11"
                  }
                ],
                "id": 3510,
                "name": "ParameterList",
                "src": "4256:25:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3511,
                "name": "ParameterList",
                "src": "4290:0:11"
              }
            ],
            "id": 3512,
            "name": "FunctionDefinition",
            "src": "4235:56:11"
          },
          {
            "attributes": {
              "functionSelector": "efa1f98a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addLiquidityFor",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to add liqiudity for another user by supplying DAI, access: ANY\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
                },
                "id": 3513,
                "name": "StructuredDocumentation",
                "src": "4295:219:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liquidityHolderAddr",
                      "scope": 3520,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3514,
                        "name": "ElementaryTypeName",
                        "src": "4542:7:11"
                      }
                    ],
                    "id": 3515,
                    "name": "VariableDeclaration",
                    "src": "4542:28:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liqudityAmount",
                      "scope": 3520,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3516,
                        "name": "ElementaryTypeName",
                        "src": "4572:7:11"
                      }
                    ],
                    "id": 3517,
                    "name": "VariableDeclaration",
                    "src": "4572:23:11"
                  }
                ],
                "id": 3518,
                "name": "ParameterList",
                "src": "4541:55:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3519,
                "name": "ParameterList",
                "src": "4605:0:11"
              }
            ],
            "id": 3520,
            "name": "FunctionDefinition",
            "src": "4517:89:11"
          },
          {
            "attributes": {
              "functionSelector": "c91348c3",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addLiquidityFromLM",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let liquidityMining contract to add liqiudity for another user by supplying DAI, access: ONLY LM\n @param _liquidityHolderAddr is address of address to assign cover\n @param _liqudityAmount is amount of DAI tokens to secure"
                },
                "id": 3521,
                "name": "StructuredDocumentation",
                "src": "4610:243:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liquidityHolderAddr",
                      "scope": 3528,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 3522,
                        "name": "ElementaryTypeName",
                        "src": "4884:7:11"
                      }
                    ],
                    "id": 3523,
                    "name": "VariableDeclaration",
                    "src": "4884:28:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liqudityAmount",
                      "scope": 3528,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3524,
                        "name": "ElementaryTypeName",
                        "src": "4914:7:11"
                      }
                    ],
                    "id": 3525,
                    "name": "VariableDeclaration",
                    "src": "4914:23:11"
                  }
                ],
                "id": 3526,
                "name": "ParameterList",
                "src": "4883:55:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3527,
                "name": "ParameterList",
                "src": "4947:0:11"
              }
            ],
            "id": 3528,
            "name": "FunctionDefinition",
            "src": "4856:92:11"
          },
          {
            "attributes": {
              "functionSelector": "0a861f2a",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawLiquidity",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to withdraw deposited liqiudity, access: ANY\n @param _tokensToWithdraw is amount of DAI tokens to withdraw"
                },
                "id": 3529,
                "name": "StructuredDocumentation",
                "src": "4952:132:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokensToWithdraw",
                      "scope": 3534,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3530,
                        "name": "ElementaryTypeName",
                        "src": "5114:7:11"
                      }
                    ],
                    "id": 3531,
                    "name": "VariableDeclaration",
                    "src": "5114:25:11"
                  }
                ],
                "id": 3532,
                "name": "ParameterList",
                "src": "5113:27:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3533,
                "name": "ParameterList",
                "src": "5149:0:11"
              }
            ],
            "id": 3534,
            "name": "FunctionDefinition",
            "src": "5087:63:11"
          },
          {
            "attributes": {
              "functionSelector": "758af3ab",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getQuote",
              "scope": 3563,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to calculate policy cost in DAI, access: ANY\n @param _durationSeconds is number of seconds to cover\n @param _tokens is number of tokens to cover\n @return _daiTokens is amount of DAI policy costs"
                },
                "id": 3535,
                "name": "StructuredDocumentation",
                "src": "5154:230:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_durationSeconds",
                      "scope": 3544,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3536,
                        "name": "ElementaryTypeName",
                        "src": "5405:7:11"
                      }
                    ],
                    "id": 3537,
                    "name": "VariableDeclaration",
                    "src": "5405:24:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_tokens",
                      "scope": 3544,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3538,
                        "name": "ElementaryTypeName",
                        "src": "5431:7:11"
                      }
                    ],
                    "id": 3539,
                    "name": "VariableDeclaration",
                    "src": "5431:15:11"
                  }
                ],
                "id": 3540,
                "name": "ParameterList",
                "src": "5404:43:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_daiTokens",
                      "scope": 3544,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3541,
                        "name": "ElementaryTypeName",
                        "src": "5471:7:11"
                      }
                    ],
                    "id": 3542,
                    "name": "VariableDeclaration",
                    "src": "5471:18:11"
                  }
                ],
                "id": 3543,
                "name": "ParameterList",
                "src": "5470:20:11"
              }
            ],
            "id": 3544,
            "name": "FunctionDefinition",
            "src": "5387:104:11"
          },
          {
            "attributes": {
              "functionSelector": "c18c6057",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "rewardForUnclaimedExpiredPolicy",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\n @param _policyId is id of policy to get reward for, reward will be sent to policy holder"
                },
                "id": 3545,
                "name": "StructuredDocumentation",
                "src": "5495:178:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyId",
                      "scope": 3550,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3546,
                        "name": "ElementaryTypeName",
                        "src": "5717:7:11"
                      }
                    ],
                    "id": 3547,
                    "name": "VariableDeclaration",
                    "src": "5717:17:11"
                  }
                ],
                "id": 3548,
                "name": "ParameterList",
                "src": "5716:19:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3549,
                "name": "ParameterList",
                "src": "5744:0:11"
              }
            ],
            "id": 3550,
            "name": "FunctionDefinition",
            "src": "5676:69:11"
          },
          {
            "attributes": {
              "functionSelector": "d80528ae",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stats",
              "scope": 3563,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Getting stats, access: ANY\n @return _yearlyCost\n @return _maxCapacities is max DAI amount to be covered at now\n @return _totalDaiLiquidity is DAI amount placed by Policy providers\n @return _annualProfitYields is current annual profit yield"
                },
                "id": 3551,
                "name": "StructuredDocumentation",
                "src": "5749:271:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3552,
                "name": "ParameterList",
                "src": "6037:2:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_yearlyCost",
                      "scope": 3562,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3553,
                        "name": "ElementaryTypeName",
                        "src": "6073:7:11"
                      }
                    ],
                    "id": 3554,
                    "name": "VariableDeclaration",
                    "src": "6073:19:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_maxCapacities",
                      "scope": 3562,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3555,
                        "name": "ElementaryTypeName",
                        "src": "6100:7:11"
                      }
                    ],
                    "id": 3556,
                    "name": "VariableDeclaration",
                    "src": "6100:22:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_totalDaiLiquidity",
                      "scope": 3562,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3557,
                        "name": "ElementaryTypeName",
                        "src": "6130:7:11"
                      }
                    ],
                    "id": 3558,
                    "name": "VariableDeclaration",
                    "src": "6130:26:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_annualProfitYields",
                      "scope": 3562,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3559,
                        "name": "ElementaryTypeName",
                        "src": "6164:7:11"
                      }
                    ],
                    "id": 3560,
                    "name": "VariableDeclaration",
                    "src": "6164:27:11"
                  }
                ],
                "id": 3561,
                "name": "ParameterList",
                "src": "6065:132:11"
              }
            ],
            "id": 3562,
            "name": "FunctionDefinition",
            "src": "6023:175:11"
          }
        ],
        "id": 3563,
        "name": "ContractDefinition",
        "src": "183:6017:11"
      }
    ],
    "id": 3564,
    "name": "SourceUnit",
    "src": "32:6169:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-27T09:58:45.957Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addLiquidity(uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure"
        }
      },
      "addLiquidityFor(address,uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure",
          "_liquidityHolderAddr": "is address of address to assign cover"
        }
      },
      "addLiquidityFromLM(address,uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure",
          "_liquidityHolderAddr": "is address of address to assign cover"
        }
      },
      "addShieldTokens(address,uint256)": {
        "params": {
          "_tokenAddress": "is address of reward token to add",
          "_tokensAmount": "is max amount of reward to operate on"
        },
        "returns": {
          "_success": "is indicator if purchase is successful, it will throw exception if unsuccessful"
        }
      },
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "buyPolicy(uint256,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover",
          "_durationSeconds": "is number of seconds to cover",
          "_maxDaiTokens": "is number of DAI to spend"
        }
      },
      "buyPolicyFor(address,uint256,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover",
          "_durationSeconds": "is number of seconds to cover",
          "_maxDaiTokens": "is number of DAI to spend",
          "_policyHolderAddr": "is address of address to assign cover"
        }
      },
      "contractAddress()": {
        "returns": {
          "_contract": "is address of covered contract"
        }
      },
      "contractType()": {
        "returns": {
          "_type": "is type of contract"
        }
      },
      "getQuote(uint256,uint256)": {
        "params": {
          "_durationSeconds": "is number of seconds to cover",
          "_tokens": "is number of tokens to cover"
        },
        "returns": {
          "_daiTokens": "is amount of DAI policy costs"
        }
      },
      "quoteStrategy()": {
        "returns": {
          "_quoteStrategy": "is address of Quote strategy contract used to calculate quote"
        }
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "params": {
          "_policyId": "is id of policy to get reward for, reward will be sent to policy holder"
        }
      },
      "shieldAssets(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsCount()": {
        "returns": {
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssetBalance": "is tokens amount of shield assets allocated to Policy Book,  to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset",
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "stats()": {
        "returns": {
          "_annualProfitYields": "is current annual profit yield",
          "_maxCapacities": "is max DAI amount to be covered at now",
          "_totalDaiLiquidity": "is DAI amount placed by Policy providers",
          "_yearlyCost": "_yearlyCost"
        }
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "withdrawLiquidity(uint256)": {
        "params": {
          "_tokensToWithdraw": "is amount of DAI tokens to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addLiquidity(uint256)": {
        "notice": "Let user to add liquidity by supplying DAI, access: ANY"
      },
      "addLiquidityFor(address,uint256)": {
        "notice": "Let user to add liqiudity for another user by supplying DAI, access: ANY"
      },
      "addLiquidityFromLM(address,uint256)": {
        "notice": "Let liquidityMining contract to add liqiudity for another user by supplying DAI, access: ONLY LM"
      },
      "addShieldTokens(address,uint256)": {
        "notice": "Adds shield tokens to contract, access: ANY"
      },
      "buyPolicy(uint256,uint256,uint256)": {
        "notice": "Let user to buy policy by supplying DAI, access: ANY"
      },
      "buyPolicyFor(address,uint256,uint256,uint256)": {
        "notice": "Let user to buy policy for another user by supplying DAI, access: ANY"
      },
      "contractAddress()": {
        "notice": "Returns address of contract this PolicyBook covers, access: ANY"
      },
      "contractType()": {
        "notice": "Returns type of contract this PolicyBook covers, access: ANY"
      },
      "getQuote(uint256,uint256)": {
        "notice": "Let user to calculate policy cost in DAI, access: ANY"
      },
      "quoteStrategy()": {
        "notice": "Returns quote strategy defined during creation of PolicyBook, access: ANY"
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "notice": "Let user to claim rewards for unclaimed policy cost in DAI, access: ANY"
      },
      "shieldAssets(uint256,uint256)": {
        "notice": "Returns list of shield assets added to PolicyBook, access: ANY"
      },
      "shieldAssetsCount()": {
        "notice": "Returns number of shield assets added, access: ANY"
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "notice": "Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY"
      },
      "stats()": {
        "notice": "Getting stats, access: ANY"
      },
      "withdrawLiquidity(uint256)": {
        "notice": "Let user to withdraw deposited liqiudity, access: ANY"
      }
    },
    "version": 1
  }
}