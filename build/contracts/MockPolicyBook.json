{
  "contractName": "MockPolicyBook",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "enum IPolicyBookFabric.ContractType",
          "name": "_contractType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_daiAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_liquidityHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newTotalLiquidity",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_policyHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newTotalCoverTokens",
          "type": "uint256"
        }
      ],
      "name": "BuyPolicy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_liquidityHolder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokensToWithdraw",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newTotalLiquidity",
          "type": "uint256"
        }
      ],
      "name": "WithdrawLiquidity",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAYS_IN_THE_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXIMUM_COST_100_UTILIZATION_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXIMUM_COST_NOT_RISKY_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_COST_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENTAGE_100",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RISKY_ASSET_THRESHOLD_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liqudityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensAmount",
          "type": "uint256"
        }
      ],
      "name": "addShieldTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDaiTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policyHolderAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDaiTokens",
          "type": "uint256"
        }
      ],
      "name": "buyPolicyFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractType",
      "outputs": [
        {
          "internalType": "enum IPolicyBookFabric.ContractType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokens",
          "type": "uint256"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_daiTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidityHolders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "policyHolders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "coverTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "durationDays",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxDaiTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "_quoteStrategy",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        }
      ],
      "name": "rewardForUnclaimedExpiredPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shieldAssetsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "shieldAssetsWithBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_shieldAssetsCount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_shieldAssets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_shieldAssetBalance",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_yearlyCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCapacities",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDaiLiquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_annualProfitYields",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCoverTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokensToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdrawLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_daiInThePoolTotal",
          "type": "uint256"
        }
      ],
      "name": "setTotalLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_daiInThePoolBought",
          "type": "uint256"
        }
      ],
      "name": "setTotalCoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"enum IPolicyBookFabric.ContractType\",\"name\":\"_contractType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_daiAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newTotalLiquidity\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_policyHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newTotalCoverTokens\",\"type\":\"uint256\"}],\"name\":\"BuyPolicy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_liquidityHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokensToWithdraw\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newTotalLiquidity\",\"type\":\"uint256\"}],\"name\":\"WithdrawLiquidity\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAYS_IN_THE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_COST_100_UTILIZATION_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_COST_NOT_RISKY_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_COST_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTAGE_100\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RISKY_ASSET_THRESHOLD_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liqudityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidityFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensAmount\",\"type\":\"uint256\"}],\"name\":\"addShieldTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDaiTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyHolderAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDaiTokens\",\"type\":\"uint256\"}],\"name\":\"buyPolicyFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractType\",\"outputs\":[{\"internalType\":\"enum IPolicyBookFabric.ContractType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_daiTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"policyHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"coverTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationDays\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDaiTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_quoteStrategy\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"}],\"name\":\"rewardForUnclaimedExpiredPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_daiInThePoolBought\",\"type\":\"uint256\"}],\"name\":\"setTotalCoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_daiInThePoolTotal\",\"type\":\"uint256\"}],\"name\":\"setTotalLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shieldAssetsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"shieldAssetsWithBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_shieldAssetsCount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_shieldAssets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_shieldAssetBalance\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_yearlyCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCapacities\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDaiLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_annualProfitYields\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCoverTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\"}},\"addLiquidityFor(address,uint256)\":{\"params\":{\"_liqudityAmount\":\"is amount of DAI tokens to secure\",\"_liquidityHolderAddr\":\"is address of address to assign cover\"}},\"addShieldTokens(address,uint256)\":{\"params\":{\"_tokenAddress\":\"is address of reward token to add\",\"_tokensAmount\":\"is max amount of reward to operate on\"},\"returns\":{\"_success\":\"is indicator if purchase is successful, it will throw exception if unsuccessful\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"buyPolicy(uint256,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover\",\"_durationDays\":\"is number of days to cover\",\"_maxDaiTokens\":\"is number of DAI to spend\"}},\"buyPolicyFor(address,uint256,uint256,uint256)\":{\"params\":{\"_coverTokens\":\"is number of tokens to cover\",\"_durationDays\":\"is number of days to cover\",\"_maxDaiTokens\":\"is number of DAI to spend\",\"_policyHolderAddr\":\"is address of address to assign cover\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getContractAddress()\":{\"returns\":{\"_contract\":\"is address of covered contract\"}},\"getContractType()\":{\"returns\":{\"_type\":\"is type of contract\"}},\"getQuote(uint256,uint256)\":{\"params\":{\"_durationDays\":\"is number of days to cover\",\"_tokens\":\"is number of tokens to cover\"},\"returns\":{\"_daiTokens\":\"is amount of DAI policy costs\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"quoteStrategy()\":{\"returns\":{\"_quoteStrategy\":\"is address of Quote strategy contract used to calculate quote\"}},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"params\":{\"_policyId\":\"is id of policy to get reward for, reward will be sent to policy holder\"}},\"shieldAssets(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsCount()\":{\"returns\":{\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"shieldAssetsWithBalance(uint256,uint256)\":{\"params\":{\"_limit\":\"is number of policy books to returns from _offset\",\"_offset\":\"is starting item in array to return array from\"},\"returns\":{\"_shieldAssetBalance\":\"is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset\",\"_shieldAssets\":\"is addresses of shield assets, that will be distributed to Policy givers\",\"_shieldAssetsCount\":\"is number of added shield assets\"}},\"stats()\":{\"returns\":{\"_annualProfitYields\":\"is current annual profit yield\",\"_maxCapacities\":\"is max DAI amount to be covered at now\",\"_totalDaiLiquidity\":\"is DAI amount placed by Policy providers\",\"_yearlyCost\":\"_yearlyCost\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"withdrawLiquidity(uint256)\":{\"params\":{\"_tokensToWithdraw\":\"is amount of DAI tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256)\":{\"notice\":\"Let user to add liquidity by supplying DAI, access: ANY\"},\"addLiquidityFor(address,uint256)\":{\"notice\":\"Let user to add liqiudity for another user by supplying DAI, access: ANY\"},\"addShieldTokens(address,uint256)\":{\"notice\":\"Adds shield tokens to contract, access: ANY\"},\"buyPolicy(uint256,uint256,uint256)\":{\"notice\":\"Let user to buy policy by supplying DAI, access: ANY\"},\"buyPolicyFor(address,uint256,uint256,uint256)\":{\"notice\":\"Let user to buy policy for another user by supplying DAI, access: ANY\"},\"getContractAddress()\":{\"notice\":\"Returns address of contract this PolicyBook covers, access: ANY\"},\"getContractType()\":{\"notice\":\"Returns type of contract this PolicyBook covers, access: ANY\"},\"getQuote(uint256,uint256)\":{\"notice\":\"Let user to calculate policy cost in DAI, access: ANY\"},\"quoteStrategy()\":{\"notice\":\"Returns quote strategy defined during creation of PolicyBook, access: ANY\"},\"rewardForUnclaimedExpiredPolicy(uint256)\":{\"notice\":\"Let user to claim rewards for unclaimed policy cost in DAI, access: ANY\"},\"shieldAssets(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added to PolicyBook, access: ANY\"},\"shieldAssetsCount()\":{\"notice\":\"Returns number of shield assets added, access: ANY\"},\"shieldAssetsWithBalance(uint256,uint256)\":{\"notice\":\"Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY\"},\"stats()\":{\"notice\":\"Getting stats, access: ANY\"},\"withdrawLiquidity(uint256)\":{\"notice\":\"Let user to withdraw deposited liqiudity, access: ANY\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/Mock/MockPolicyBook.sol\":\"MockPolicyBook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/Mock/MockPolicyBook.sol\":{\"keccak256\":\"0xce9fdadcced214db9038d4a00a2283ee75cfc654adad8ca1762a7cdb8973221d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbca8ce27a4ced1b86f0dff83ac51927607996c18bd801f4d702ade1b91969af\",\"dweb:/ipfs/Qme8A7npPyPvFiJ5VBbPAZxoqwnxULdvZhzCFtDg3KCjph\"]},\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/PolicyBook.sol\":{\"keccak256\":\"0xd2170c318914ef776657482daba5014dc9ed2d82367a3ef48b58ada0d144c7e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0c660739c9cbb3365a1213981004e96ee17adab51696d334a5e95a04c949e3d\",\"dweb:/ipfs/QmXV5TCwLnKungt5tmTws1xYUD5yf62s9tUt1mw3ee6q6n\"]},\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x4045fb9457c48fd676c982febc5c9c4422e72ec2d90ffad7fe9e52b876b3eaa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5cf4a33399a3d04ca52817687986d1a2005e09176cd1d5022fec49a6d324a5\",\"dweb:/ipfs/QmUBWNhMZn4ZVHcGyA9FYdNaiLzmuRryfJ8NPPV6jRsXRM\"]},\"/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x243c0c0820d278cd59abfc5ee3941adaff0c6f11f8c3ae9e1fd4b3e10d94b61a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a78a7637452417a50ea81e1a15a07df3bdff3cf8cba41c06fe019ade5c556be2\",\"dweb:/ipfs/QmZfuC1pY6jdu9p47G66a9rNrPezoGYLvEKEBd3Weje13K\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200224f3803806200224f8339810160408190526200003491620001f5565b604080518082018252601681527f4272696467654d757475616c20496e737572616e6365000000000000000000006020808301918252835180850190945260078452660c4dad2888292f60cb1b90840152815186938693869390926200009d916003916200012c565b508051620000b39060049060208401906200012c565b505060058054601260ff1990911617610100600160a81b0319166101006001600160a01b038716021780825584925060ff60a81b1916600160a81b836003811115620000fb57fe5b0217905550600680546001600160a01b0319166001600160a01b039290921691909117905550620002429350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001645760008555620001af565b82601f106200017f57805160ff1916838001178555620001af565b82800160010185558215620001af579182015b82811115620001af57825182559160200191906001019062000192565b50620001bd929150620001c1565b5090565b5b80821115620001bd5760008155600101620001c2565b80516001600160a01b0381168114620001f057600080fd5b919050565b6000806000606084860312156200020a578283fd5b6200021584620001d8565b925060208401516004811062000229578283fd5b91506200023960408501620001d8565b90509250925092565b611ffd80620002526000396000f3fe6080604052600436106102a45760003560e01c8063758af3ab1161016e578063c51a29e0116100cb578063e98a04e11161007f578063f4020b5b11610064578063f4020b5b14610718578063f60ff93714610738578063fc3dfc991461074d576102ab565b8063e98a04e1146106e3578063efa1f98a146106f8576102ab565b8063cfa8b3a8116100b0578063cfa8b3a814610689578063d80528ae1461069e578063dd62ed3e146106c3576102ab565b8063c51a29e014610652578063cbf5a55e14610674576102ab565b80639f7754cd11610122578063a9059cbb11610107578063a9059cbb146105fd578063aaf5eb681461061d578063c18c605714610632576102ab565b80639f7754cd146105af578063a457c2d7146105dd576102ab565b80637cd0fc9b116101535780637cd0fc9b1461057057806395d89b41146105855780639c5900061461059a576102ab565b8063758af3ab1461052257806379fac08c14610542576102ab565b80632c865d6c1161021c57806351c6590a116101d0578063611258a5116101b5578063611258a5146104be57806370a08231146104d357806370b68a2a146104f3576102ab565b806351c6590a1461047e578063561e795d1461049e576102ab565b806332a2c5d01161020157806332a2c5d0146104275780633950935114610449578063514ea9bd14610469576102ab565b80632c865d6c146103f0578063313ce56714610405576102ab565b80630e82da531161027357806318160ddd1161025857806318160ddd1461039b578063188ff854146103b057806323b872dd146103d0576102ab565b80630e82da531461034a57806315770f9214610379576102ab565b806306fdde03146102b0578063095ea7b3146102db57806309b7d94b146103085780630a861f2a1461032a576102ab565b366102ab57005b600080fd5b3480156102bc57600080fd5b506102c561076d565b6040516102d29190611bc2565b60405180910390f35b3480156102e757600080fd5b506102fb6102f6366004611995565b610821565b6040516102d29190611ba3565b34801561031457600080fd5b50610328610323366004611a16565b61083f565b005b34801561033657600080fd5b50610328610345366004611a16565b610844565b34801561035657600080fd5b5061036a610365366004611a2e565b610a6a565b6040516102d293929190611dfe565b34801561038557600080fd5b5061038e610a76565b6040516102d29190611dd4565b3480156103a757600080fd5b5061038e610a7c565b3480156103bc57600080fd5b506102fb6103cb366004611995565b610a82565b3480156103dc57600080fd5b506102fb6103eb36600461195a565b610a8a565b3480156103fc57600080fd5b5061038e610b2b565b34801561041157600080fd5b5061041a610b30565b6040516102d29190611e97565b34801561043357600080fd5b5061043c610b39565b6040516102d29190611aca565b34801561045557600080fd5b506102fb610464366004611995565b610b5a565b34801561047557600080fd5b5061038e610bb5565b34801561048a57600080fd5b50610328610499366004611a16565b610bbe565b3480156104aa57600080fd5b506103286104b9366004611a16565b610bcb565b3480156104ca57600080fd5b5061038e610bd0565b3480156104df57600080fd5b5061038e6104ee36600461190e565b610bd6565b3480156104ff57600080fd5b5061051361050e36600461190e565b610c02565b6040516102d293929190611e66565b34801561052e57600080fd5b5061038e61053d366004611a2e565b610c23565b34801561054e57600080fd5b5061056261055d366004611a2e565b610c36565b6040516102d2929190611ddd565b34801561057c57600080fd5b5061043c610b2b565b34801561059157600080fd5b506102c5610c40565b3480156105a657600080fd5b5061038e610cbf565b3480156105bb57600080fd5b506105cf6105ca36600461190e565b610cc8565b6040516102d2929190611e58565b3480156105e957600080fd5b506102fb6105f8366004611995565b610ce1565b34801561060957600080fd5b506102fb610618366004611995565b610d56565b34801561062957600080fd5b5061038e610d6a565b34801561063e57600080fd5b5061032861064d366004611a16565b610bc8565b34801561065e57600080fd5b50610667610d73565b6040516102d29190611bae565b34801561068057600080fd5b5061038e610d95565b34801561069557600080fd5b5061038e610d9e565b3480156106aa57600080fd5b506106b3610da8565b6040516102d29493929190611e7c565b3480156106cf57600080fd5b5061038e6106de366004611928565b610db2565b3480156106ef57600080fd5b5061038e610dea565b34801561070457600080fd5b50610328610713366004611995565b610df3565b34801561072457600080fd5b50610328610733366004611a4f565b610e01565b34801561074457600080fd5b5061038e610e12565b34801561075957600080fd5b506103286107683660046119be565b610e18565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b600061083561082e610e2a565b8484610e2e565b5060015b92915050565b600755565b61084c6118af565b50336000908152600960209081526040918290208251808401909352805483526001015490820181905261089b5760405162461bcd60e51b815260040161089290611cd6565b60405180910390fd5b60006108a633610f41565b82519091506108b59082610f47565b82526007546108c49082610f47565b60075581518311156108e85760405162461bcd60e51b815260040161089290611d77565b6008546007546108f89085610fa1565b10156109165760405162461bcd60e51b815260040161089290611d40565b81516109229084610fa1565b82524260208084019182523360009081526009909152604090208351815590516001909101556007546109559084610fa1565b6007556006546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690600090829063a9059cbb906109b59033908990600401611aeb565b602060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0791906119f6565b905080610a265760405162461bcd60e51b815260040161089290611c9f565b7fac927268ea9ae2e55027e6ab727fc2db8e3ea48c56c658223a1074567e4298c03386600754604051610a5b93929190611b11565b60405180910390a15050505050565b60006060809250925092565b60075481565b60025490565b600092915050565b6000610a97848484610fe3565b610b2184610aa3610e2a565b610b1c85604051806060016040528060288152602001611f326028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610aee610e2a565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919061117f565b610e2e565b5060019392505050565b600090565b60055460ff1690565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1690565b6000610835610b67610e2a565b84610b1c8560016000610b78610e2a565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610f47565b6445d964b80081565b610bc83382611216565b50565b600855565b61016d81565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b600a6020526000908152604090208054600182015460029092015490919083565b6000610c2f83836113ed565b9392505050565b5060009160609150565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108175780601f106107ec57610100808354040283529160200191610817565b640ba43b740081565b6009602052600090815260409020805460019091015482565b6000610835610cee610e2a565b84610b1c85604051806060016040528060258152602001611fa36025913960016000610d18610e2a565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919061117f565b6000610835610d63610e2a565b8484610fe3565b6402540be40081565b6005547501000000000000000000000000000000000000000000900460ff1690565b64e8d4a5100081565b65015d3ef7980081565b6000808080919293565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b64a2fb40580081565b610dfd8282611216565b5050565b610e0d338484846114eb565b505050565b60085481565b610e24848484846114eb565b50505050565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316610e805760405162461bcd60e51b8152600401808060200182810382526024815260200180611f7f6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ed25760405162461bcd60e51b8152600401808060200182810382526022815260200180611ec96022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b50600090565b600082820183811015610c2f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610c2f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061117f565b73ffffffffffffffffffffffffffffffffffffffff83166110355760405162461bcd60e51b8152600401808060200182810382526025815260200180611f5a6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110875760405162461bcd60e51b8152600401808060200182810382526023815260200180611ea66023913960400191505060405180910390fd5b611092838383610e0d565b6110dc81604051806060016040528060268152602001611eeb6026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919061117f565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546111189082610f47565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561120e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111d35781810151838201526020016111bb565b50505050905090810190601f1680156112005780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b61121e6118af565b5073ffffffffffffffffffffffffffffffffffffffff82166000908152600960209081526040808320815180830190925280548252600101549181018290529190156112705761126d84610f41565b90505b600061127c8483610f47565b835190915061128b9082610f47565b835242602080850191825273ffffffffffffffffffffffffffffffffffffffff871660009081526009909152604090208451815590516001909101556007546112d49082610f47565b6007556006546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169060009082906323b872dd90611336908a9030908b90600401611b3f565b602060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138891906119f6565b9050806113a75760405162461bcd60e51b815260040161089290611c9f565b7f06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca87876007546040516113dc93929190611b11565b60405180910390a150505050505050565b600060075461140783600854610f4790919063ffffffff16565b11156114255760405162461bcd60e51b815260040161089290611c6a565b6000600754116114475760405162461bcd60e51b815260040161089290611c33565b600061147c6007546114766402540be40060640261147087600854610f4790919063ffffffff16565b9061170d565b90611766565b9050600064a2fb40580082101561149d57611496826117a8565b90506114a9565b6114a6826117c2565b90505b6114b881640ba43b7400611833565b905060006114cc61016d611476888561170d565b90506114e164e8d4a51000611476878461170d565b9695505050505050565b6114f36118c9565b5073ffffffffffffffffffffffffffffffffffffffff84166000908152600a60209081526040918290208251606081018452815481526001820154928101839052600290910154928101929092521561155e5760405162461bcd60e51b815260040161089290611d0b565b60085461156b9084610f47565b600754101561158c5760405162461bcd60e51b815260040161089290611d40565b600061159885856113ed565b8483526020808401878152604080860187815273ffffffffffffffffffffffffffffffffffffffff8b166000908152600a9094529220855181559051600182015590516002909101556008549091506115f19085610f47565b6008556006546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169060009082906323b872dd90611653908b9030908890600401611b3f565b602060405180830381600087803b15801561166d57600080fd5b505af1158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a591906119f6565b9050806116c45760405162461bcd60e51b815260040161089290611c9f565b7f1cd728a6e764ed0dcddb6e5b88d736a4a8d2a0d420ca373588f7a1109e18663f8887856008546040516116fb9493929190611b70565b60405180910390a15050505050505050565b60008261171c57506000610839565b8282028284828161172957fe5b0414610c2f5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f116021913960400191505060405180910390fd5b6000610c2f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061184a565b600061083964a2fb405800611476846445d964b80061170d565b6000806117fa6117dc64e8d4a5100064a2fb405800610fa1565b6114766117ee8664a2fb405800610fa1565b6402540be4009061170d565b9050610c2f6118276402540be40061147661182065015d3ef798006445d964b800610fa1565b859061170d565b6445d964b80090610f47565b6000818310156118435781610c2f565b5090919050565b600081836118995760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156111d35781810151838201526020016111bb565b5060008385816118a557fe5b0495945050505050565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bfd57600080fd5b60006020828403121561191f578081fd5b610c2f826118ea565b6000806040838503121561193a578081fd5b611943836118ea565b9150611951602084016118ea565b90509250929050565b60008060006060848603121561196e578081fd5b611977846118ea565b9250611985602085016118ea565b9150604084013590509250925092565b600080604083850312156119a7578182fd5b6119b0836118ea565b946020939093013593505050565b600080600080608085870312156119d3578081fd5b6119dc856118ea565b966020860135965060408601359560600135945092505050565b600060208284031215611a07578081fd5b81518015158114610c2f578182fd5b600060208284031215611a27578081fd5b5035919050565b60008060408385031215611a40578182fd5b50508035926020909101359150565b600080600060608486031215611a63578283fd5b505081359360208301359350604090920135919050565b6000815180845260208085019450808401835b83811015611abf57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611a8d565b509495945050505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff94909416845260208401929092526040830152606082015260800190565b901515815260200190565b6020810160048310611bbc57fe5b91905290565b6000602080835283518082850152825b81811015611bee57858101830151858201604001528201611bd2565b81811115611bff5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526011908201527f54686520706f6f6c20697320656d707479000000000000000000000000000000604082015260600190565b6020808252818101527f526571756972696e67206d6f7265207468616e20746865726520657869737473604082015260600190565b60208082526019908201527f4661696c656420746f207472616e7366657220746f6b656e7300000000000000604082015260600190565b6020808252818101527f4c697175696469747920686f6c64657220646f6573206e6f7420657869737473604082015260600190565b6020808252818101527f54686520706f6c69637920686f6c64657220616c726561647920657869737473604082015260600190565b6020808252601e908201527f4e6f7420656e6f75676820617661696c61626c65206c69717569646974790000604082015260600190565b6020808252603f908201527f54686520616d6f756e7420746f2062652077697468647261776e20697320677260408201527f6561746572207468616e20746865206465706f736974656420616d6f756e7400606082015260800190565b90815260200190565b600083825260406020830152611df66040830184611a7a565b949350505050565b60008482526020606081840152611e186060840186611a7a565b8381036040850152845180825282860191830190845b81811015611e4a57835183529284019291840191600101611e2e565b509098975050505050505050565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122091430b6ef2e6a6cb16fc1d492a2b7db2e7623c1151209623830a11ca2ca0cb5664736f6c63430007040033",
  "deployedBytecode": "0x6080604052600436106102a45760003560e01c8063758af3ab1161016e578063c51a29e0116100cb578063e98a04e11161007f578063f4020b5b11610064578063f4020b5b14610718578063f60ff93714610738578063fc3dfc991461074d576102ab565b8063e98a04e1146106e3578063efa1f98a146106f8576102ab565b8063cfa8b3a8116100b0578063cfa8b3a814610689578063d80528ae1461069e578063dd62ed3e146106c3576102ab565b8063c51a29e014610652578063cbf5a55e14610674576102ab565b80639f7754cd11610122578063a9059cbb11610107578063a9059cbb146105fd578063aaf5eb681461061d578063c18c605714610632576102ab565b80639f7754cd146105af578063a457c2d7146105dd576102ab565b80637cd0fc9b116101535780637cd0fc9b1461057057806395d89b41146105855780639c5900061461059a576102ab565b8063758af3ab1461052257806379fac08c14610542576102ab565b80632c865d6c1161021c57806351c6590a116101d0578063611258a5116101b5578063611258a5146104be57806370a08231146104d357806370b68a2a146104f3576102ab565b806351c6590a1461047e578063561e795d1461049e576102ab565b806332a2c5d01161020157806332a2c5d0146104275780633950935114610449578063514ea9bd14610469576102ab565b80632c865d6c146103f0578063313ce56714610405576102ab565b80630e82da531161027357806318160ddd1161025857806318160ddd1461039b578063188ff854146103b057806323b872dd146103d0576102ab565b80630e82da531461034a57806315770f9214610379576102ab565b806306fdde03146102b0578063095ea7b3146102db57806309b7d94b146103085780630a861f2a1461032a576102ab565b366102ab57005b600080fd5b3480156102bc57600080fd5b506102c561076d565b6040516102d29190611bc2565b60405180910390f35b3480156102e757600080fd5b506102fb6102f6366004611995565b610821565b6040516102d29190611ba3565b34801561031457600080fd5b50610328610323366004611a16565b61083f565b005b34801561033657600080fd5b50610328610345366004611a16565b610844565b34801561035657600080fd5b5061036a610365366004611a2e565b610a6a565b6040516102d293929190611dfe565b34801561038557600080fd5b5061038e610a76565b6040516102d29190611dd4565b3480156103a757600080fd5b5061038e610a7c565b3480156103bc57600080fd5b506102fb6103cb366004611995565b610a82565b3480156103dc57600080fd5b506102fb6103eb36600461195a565b610a8a565b3480156103fc57600080fd5b5061038e610b2b565b34801561041157600080fd5b5061041a610b30565b6040516102d29190611e97565b34801561043357600080fd5b5061043c610b39565b6040516102d29190611aca565b34801561045557600080fd5b506102fb610464366004611995565b610b5a565b34801561047557600080fd5b5061038e610bb5565b34801561048a57600080fd5b50610328610499366004611a16565b610bbe565b3480156104aa57600080fd5b506103286104b9366004611a16565b610bcb565b3480156104ca57600080fd5b5061038e610bd0565b3480156104df57600080fd5b5061038e6104ee36600461190e565b610bd6565b3480156104ff57600080fd5b5061051361050e36600461190e565b610c02565b6040516102d293929190611e66565b34801561052e57600080fd5b5061038e61053d366004611a2e565b610c23565b34801561054e57600080fd5b5061056261055d366004611a2e565b610c36565b6040516102d2929190611ddd565b34801561057c57600080fd5b5061043c610b2b565b34801561059157600080fd5b506102c5610c40565b3480156105a657600080fd5b5061038e610cbf565b3480156105bb57600080fd5b506105cf6105ca36600461190e565b610cc8565b6040516102d2929190611e58565b3480156105e957600080fd5b506102fb6105f8366004611995565b610ce1565b34801561060957600080fd5b506102fb610618366004611995565b610d56565b34801561062957600080fd5b5061038e610d6a565b34801561063e57600080fd5b5061032861064d366004611a16565b610bc8565b34801561065e57600080fd5b50610667610d73565b6040516102d29190611bae565b34801561068057600080fd5b5061038e610d95565b34801561069557600080fd5b5061038e610d9e565b3480156106aa57600080fd5b506106b3610da8565b6040516102d29493929190611e7c565b3480156106cf57600080fd5b5061038e6106de366004611928565b610db2565b3480156106ef57600080fd5b5061038e610dea565b34801561070457600080fd5b50610328610713366004611995565b610df3565b34801561072457600080fd5b50610328610733366004611a4f565b610e01565b34801561074457600080fd5b5061038e610e12565b34801561075957600080fd5b506103286107683660046119be565b610e18565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b600061083561082e610e2a565b8484610e2e565b5060015b92915050565b600755565b61084c6118af565b50336000908152600960209081526040918290208251808401909352805483526001015490820181905261089b5760405162461bcd60e51b815260040161089290611cd6565b60405180910390fd5b60006108a633610f41565b82519091506108b59082610f47565b82526007546108c49082610f47565b60075581518311156108e85760405162461bcd60e51b815260040161089290611d77565b6008546007546108f89085610fa1565b10156109165760405162461bcd60e51b815260040161089290611d40565b81516109229084610fa1565b82524260208084019182523360009081526009909152604090208351815590516001909101556007546109559084610fa1565b6007556006546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690600090829063a9059cbb906109b59033908990600401611aeb565b602060405180830381600087803b1580156109cf57600080fd5b505af11580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0791906119f6565b905080610a265760405162461bcd60e51b815260040161089290611c9f565b7fac927268ea9ae2e55027e6ab727fc2db8e3ea48c56c658223a1074567e4298c03386600754604051610a5b93929190611b11565b60405180910390a15050505050565b60006060809250925092565b60075481565b60025490565b600092915050565b6000610a97848484610fe3565b610b2184610aa3610e2a565b610b1c85604051806060016040528060288152602001611f326028913973ffffffffffffffffffffffffffffffffffffffff8a16600090815260016020526040812090610aee610e2a565b73ffffffffffffffffffffffffffffffffffffffff168152602081019190915260400160002054919061117f565b610e2e565b5060019392505050565b600090565b60055460ff1690565b600554610100900473ffffffffffffffffffffffffffffffffffffffff1690565b6000610835610b67610e2a565b84610b1c8560016000610b78610e2a565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c168152925290205490610f47565b6445d964b80081565b610bc83382611216565b50565b600855565b61016d81565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b600a6020526000908152604090208054600182015460029092015490919083565b6000610c2f83836113ed565b9392505050565b5060009160609150565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108175780601f106107ec57610100808354040283529160200191610817565b640ba43b740081565b6009602052600090815260409020805460019091015482565b6000610835610cee610e2a565b84610b1c85604051806060016040528060258152602001611fa36025913960016000610d18610e2a565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d1681529252902054919061117f565b6000610835610d63610e2a565b8484610fe3565b6402540be40081565b6005547501000000000000000000000000000000000000000000900460ff1690565b64e8d4a5100081565b65015d3ef7980081565b6000808080919293565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b64a2fb40580081565b610dfd8282611216565b5050565b610e0d338484846114eb565b505050565b60085481565b610e24848484846114eb565b50505050565b3390565b73ffffffffffffffffffffffffffffffffffffffff8316610e805760405162461bcd60e51b8152600401808060200182810382526024815260200180611f7f6024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610ed25760405162461bcd60e51b8152600401808060200182810382526022815260200180611ec96022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b50600090565b600082820183811015610c2f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000610c2f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061117f565b73ffffffffffffffffffffffffffffffffffffffff83166110355760405162461bcd60e51b8152600401808060200182810382526025815260200180611f5a6025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166110875760405162461bcd60e51b8152600401808060200182810382526023815260200180611ea66023913960400191505060405180910390fd5b611092838383610e0d565b6110dc81604051806060016040528060268152602001611eeb6026913973ffffffffffffffffffffffffffffffffffffffff8616600090815260208190526040902054919061117f565b73ffffffffffffffffffffffffffffffffffffffff80851660009081526020819052604080822093909355908416815220546111189082610f47565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561120e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111d35781810151838201526020016111bb565b50505050905090810190601f1680156112005780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b61121e6118af565b5073ffffffffffffffffffffffffffffffffffffffff82166000908152600960209081526040808320815180830190925280548252600101549181018290529190156112705761126d84610f41565b90505b600061127c8483610f47565b835190915061128b9082610f47565b835242602080850191825273ffffffffffffffffffffffffffffffffffffffff871660009081526009909152604090208451815590516001909101556007546112d49082610f47565b6007556006546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169060009082906323b872dd90611336908a9030908b90600401611b3f565b602060405180830381600087803b15801561135057600080fd5b505af1158015611364573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138891906119f6565b9050806113a75760405162461bcd60e51b815260040161089290611c9f565b7f06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca87876007546040516113dc93929190611b11565b60405180910390a150505050505050565b600060075461140783600854610f4790919063ffffffff16565b11156114255760405162461bcd60e51b815260040161089290611c6a565b6000600754116114475760405162461bcd60e51b815260040161089290611c33565b600061147c6007546114766402540be40060640261147087600854610f4790919063ffffffff16565b9061170d565b90611766565b9050600064a2fb40580082101561149d57611496826117a8565b90506114a9565b6114a6826117c2565b90505b6114b881640ba43b7400611833565b905060006114cc61016d611476888561170d565b90506114e164e8d4a51000611476878461170d565b9695505050505050565b6114f36118c9565b5073ffffffffffffffffffffffffffffffffffffffff84166000908152600a60209081526040918290208251606081018452815481526001820154928101839052600290910154928101929092521561155e5760405162461bcd60e51b815260040161089290611d0b565b60085461156b9084610f47565b600754101561158c5760405162461bcd60e51b815260040161089290611d40565b600061159885856113ed565b8483526020808401878152604080860187815273ffffffffffffffffffffffffffffffffffffffff8b166000908152600a9094529220855181559051600182015590516002909101556008549091506115f19085610f47565b6008556006546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169060009082906323b872dd90611653908b9030908890600401611b3f565b602060405180830381600087803b15801561166d57600080fd5b505af1158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a591906119f6565b9050806116c45760405162461bcd60e51b815260040161089290611c9f565b7f1cd728a6e764ed0dcddb6e5b88d736a4a8d2a0d420ca373588f7a1109e18663f8887856008546040516116fb9493929190611b70565b60405180910390a15050505050505050565b60008261171c57506000610839565b8282028284828161172957fe5b0414610c2f5760405162461bcd60e51b8152600401808060200182810382526021815260200180611f116021913960400191505060405180910390fd5b6000610c2f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061184a565b600061083964a2fb405800611476846445d964b80061170d565b6000806117fa6117dc64e8d4a5100064a2fb405800610fa1565b6114766117ee8664a2fb405800610fa1565b6402540be4009061170d565b9050610c2f6118276402540be40061147661182065015d3ef798006445d964b800610fa1565b859061170d565b6445d964b80090610f47565b6000818310156118435781610c2f565b5090919050565b600081836118995760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156111d35781810151838201526020016111bb565b5060008385816118a557fe5b0495945050505050565b604051806040016040528060008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bfd57600080fd5b60006020828403121561191f578081fd5b610c2f826118ea565b6000806040838503121561193a578081fd5b611943836118ea565b9150611951602084016118ea565b90509250929050565b60008060006060848603121561196e578081fd5b611977846118ea565b9250611985602085016118ea565b9150604084013590509250925092565b600080604083850312156119a7578182fd5b6119b0836118ea565b946020939093013593505050565b600080600080608085870312156119d3578081fd5b6119dc856118ea565b966020860135965060408601359560600135945092505050565b600060208284031215611a07578081fd5b81518015158114610c2f578182fd5b600060208284031215611a27578081fd5b5035919050565b60008060408385031215611a40578182fd5b50508035926020909101359150565b600080600060608486031215611a63578283fd5b505081359360208301359350604090920135919050565b6000815180845260208085019450808401835b83811015611abf57815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101611a8d565b509495945050505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff94909416845260208401929092526040830152606082015260800190565b901515815260200190565b6020810160048310611bbc57fe5b91905290565b6000602080835283518082850152825b81811015611bee57858101830151858201604001528201611bd2565b81811115611bff5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526011908201527f54686520706f6f6c20697320656d707479000000000000000000000000000000604082015260600190565b6020808252818101527f526571756972696e67206d6f7265207468616e20746865726520657869737473604082015260600190565b60208082526019908201527f4661696c656420746f207472616e7366657220746f6b656e7300000000000000604082015260600190565b6020808252818101527f4c697175696469747920686f6c64657220646f6573206e6f7420657869737473604082015260600190565b6020808252818101527f54686520706f6c69637920686f6c64657220616c726561647920657869737473604082015260600190565b6020808252601e908201527f4e6f7420656e6f75676820617661696c61626c65206c69717569646974790000604082015260600190565b6020808252603f908201527f54686520616d6f756e7420746f2062652077697468647261776e20697320677260408201527f6561746572207468616e20746865206465706f736974656420616d6f756e7400606082015260800190565b90815260200190565b600083825260406020830152611df66040830184611a7a565b949350505050565b60008482526020606081840152611e186060840186611a7a565b8381036040850152845180825282860191830190845b81811015611e4a57835183529284019291840191600101611e2e565b509098975050505050505050565b918252602082015260400190565b9283526020830191909152604082015260600190565b93845260208401929092526040830152606082015260800190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122091430b6ef2e6a6cb16fc1d492a2b7db2e7623c1151209623830a11ca2ca0cb5664736f6c63430007040033",
  "immutableReferences": {},
  "sourceMap": "120:422:4:-:0;;;162:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1956:145:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1956:145:20;;;;2030:13;;272:9:4;;283:13;;298:8;;1956:145:20;;2030:13;;:5;;:13;:::i;:::-;-1:-1:-1;2053:17:20;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:20;:14;;2092:2;-1:-1:-1;;2080:14:20;;;;-1:-1:-1;;;;;;1438:27:5::1;2080:14:20::0;-1:-1:-1;;;;;1438:27:5;::::1;;;::::0;;;1486:13;;-1:-1:-1;;;;;1471:28:5::1;-1:-1:-1::0;;;1486:13:5;1471:28:::1;::::0;::::1;;;;;;;;::::0;;-1:-1:-1;1505:7:5::1;:18:::0;;-1:-1:-1;;;;;;1505:18:5::1;-1:-1:-1::0;;;;;1505:18:5;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;120:422:4;;-1:-1:-1;;;;120:422:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:422:4;;;-1:-1:-1;120:422:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:179:24;95:13;;-1:-1:-1;;;;;137:31:24;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:471::-;;;;372:2;360:9;351:7;347:23;343:32;340:2;;;393:6;385;378:22;340:2;421:42;453:9;421:42;:::i;:::-;411:52;;506:2;495:9;491:18;485:25;539:1;532:5;529:12;519:2;;560:6;552;545:22;519:2;588:5;-1:-1:-1;612:51:24;659:2;644:18;;612:51;:::i;:::-;602:61;;330:339;;;;;:::o;:::-;120:422:4;;;;;;",
  "deployedSourceMap": "120:422:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:166;;;;;;;;;;-1:-1:-1;4202:166:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;314:108:4:-;;;;;;;;;;-1:-1:-1;314:108:4;;;;;:::i;:::-;;:::i;:::-;;5413:1225:5;;;;;;;;;;-1:-1:-1;5413:1225:5;;;;;:::i;:::-;;:::i;2156:329::-;;;;;;;;;;-1:-1:-1;2156:329:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;587:29::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3209:98:20:-;;;;;;;;;;;;;:::i;2601:136:5:-;;;;;;;;;;-1:-1:-1;2601:136:5;;;;;:::i;:::-;;:::i;4835:317:20:-;;;;;;;;;;-1:-1:-1;4835:317:20;;;;;:::i;:::-;;:::i;2489:108:5:-;;;;;;;;;;;;;:::i;3068:81:20:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1565:119:5:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5547:215:20:-;;;;;;;;;;-1:-1:-1;5547:215:20;;;;;:::i;:::-;;:::i;7357:74:5:-;;;;;;;;;;;;;:::i;4181:121::-;;;;;;;;;;-1:-1:-1;4181:121:5;;;;;:::i;:::-;;:::i;426:114:4:-;;;;;;;;;;-1:-1:-1;426:114:4;;;;;:::i;:::-;;:::i;7056:46:5:-;;;;;;;;;;;;;:::i;3365:117:20:-;;;;;;;;;;-1:-1:-1;3365:117:20;;;;;:::i;:::-;;:::i;910:53:5:-;;;;;;;;;;-1:-1:-1;910:53:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;8258:167::-;;;;;;;;;;-1:-1:-1;8258:167:5;;;;;:::i;:::-;;:::i;1933:219::-;;;;;;;;;;-1:-1:-1;1933:219:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1820:109::-;;;;;;;;;;;;;:::i;2360:85:20:-;;;;;;;;;;;;;:::i;7213:63:5:-;;;;;;;;;;;;;:::i;847:59::-;;;;;;;;;;-1:-1:-1;847:59:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6249:266:20:-;;;;;;;;;;-1:-1:-1;6249:266:20;;;;;:::i;:::-;;:::i;3685:172::-;;;;;;;;;;-1:-1:-1;3685:172:20;;;;;:::i;:::-;;:::i;7106:42:5:-;;;;;;;;;;;;;:::i;6748:80::-;;;;;;;;;;-1:-1:-1;6748:80:5;;;;;:::i;:::-;;:::i;1688:128::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7152:56::-;;;;;;;;;;;;;:::i;7435:81::-;;;;;;;;;;;;;:::i;6832:220::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;3915:149:20:-;;;;;;;;;;-1:-1:-1;3915:149:20;;;;;:::i;:::-;;:::i;7280:73:5:-;;;;;;;;;;;;;:::i;4306:164::-;;;;;;;;;;-1:-1:-1;4306:164:5;;;;;:::i;:::-;;:::i;2741:201::-;;;;;;;;;;-1:-1:-1;2741:201:5;;;;;:::i;:::-;;:::i;620:31::-;;;;;;;;;;;;;:::i;2946:242::-;;;;;;;;;;-1:-1:-1;2946:242:5;;;;;:::i;:::-;;:::i;2166:81:20:-;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;:::o;4202:166::-;4285:4;4301:39;4310:12;:10;:12::i;:::-;4324:7;4333:6;4301:8;:39::i;:::-;-1:-1:-1;4357:4:20;4202:166;;;;;:::o;314:108:4:-;382:14;:35;314:108::o;5413:1225:5:-;5491:39;;:::i;:::-;-1:-1:-1;5550:10:5;5533:28;;;;:16;:28;;;;;;;;;5491:70;;;;;;;;;;;;;;;;;;;;;5568:76;;;;-1:-1:-1;;;5568:76:5;;;;;;;:::i;:::-;;;;;;;;;5651:27;5681:30;5700:10;5681:18;:30::i;:::-;5752:32;;5651:60;;-1:-1:-1;5752:57:5;;5651:60;5752:36;:57::i;:::-;5717:92;;5832:14;;:39;;5851:19;5832:18;:39::i;:::-;5815:14;:56;5893:32;;:53;-1:-1:-1;5893:53:5;5878:147;;;;-1:-1:-1;;;5878:147:5;;;;;;;:::i;:::-;6081:16;;6040:14;;:37;;6059:17;6040:18;:37::i;:::-;:57;;6032:100;;;;-1:-1:-1;;;6032:100:5;;;;;;;:::i;:::-;6174:32;;:55;;6211:17;6174:36;:55::i;:::-;6139:90;;6265:15;6235:27;;;;:45;;;6304:10;6139:32;6287:28;;;:16;:28;;;;;;:47;;;;;;;;;;;6358:14;;:37;;6377:17;6358:18;:37::i;:::-;6341:14;:54;6427:7;;6457:48;;;;;6427:7;;;;;6402:15;;6427:7;;6457:17;;:48;;6475:10;;6487:17;;6457:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6441:64;;6519:8;6511:46;;;;-1:-1:-1;;;6511:46:5;;;;;;;:::i;:::-;6569:64;6587:10;6599:17;6618:14;;6569:64;;;;;;;;:::i;:::-;;;;;;;;5413:1225;;;;;:::o;2156:329::-;2277:26;2311:30;;2156:329;;;;;:::o;587:29::-;;;;:::o;3209:98:20:-;3288:12;;3209:98;:::o;2601:136:5:-;2699:13;2601:136;;;;:::o;4835:317:20:-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;5034:33;;;;;;;;;;;;;-1:-1:-1;5034:33:20;;;:89;:37;:89::i;:::-;5003:8;:121::i;:::-;-1:-1:-1;5141:4:20;4835:317;;;;;:::o;2489:108:5:-;2550:26;2489:108;:::o;3068:81:20:-;3133:9;;;;3068:81;:::o;1565:119:5:-;1664:15;;;;;;;;1565:119::o;5547:215:20:-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;5683:25;;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:20;;;:34;;;;;;;;;;;:38;:50::i;7357:74:5:-;7417:14;7357:74;:::o;4181:121::-;4252:45;4269:10;4281:15;4252:16;:45::i;:::-;4181:121;:::o;426:114:4:-;497:16;:38;426:114::o;7056:46:5:-;7099:3;7056:46;:::o;3365:117:20:-;3457:18;;;3431:7;3457:18;;;;;;;;;;;3365:117;;;;:::o;910:53:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8258:167::-;8348:18;8387:33;8397:13;8412:7;8387:9;:33::i;:::-;8374:46;8258:167;-1:-1:-1;;;8258:167:5:o;1933:219::-;-1:-1:-1;2036:26:5;;2064:30;;-1:-1:-1;1933:219:5:o;2360:85:20:-;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;7213:63:5;7263:13;7213:63;:::o;847:59::-;;;;;;;;;;;;;;;;;;;:::o;6249:266:20:-;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;6390:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:20;;;:34;;;;;;;;;;;:96;:38;:96::i;3685:172::-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;3787:9;:42::i;7106::5:-;7142:6;7106:42;:::o;1688:128::-;1799:12;;;;;;;;1688:128::o;7152:56::-;7193:15;7152:56;:::o;7435:81::-;7501:15;7435:81;:::o;6832:220::-;6895:19;;;;6832:220;;;:::o;3915:149:20:-;4030:18;;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;7280:73:5:-;7339:14;7280:73;:::o;4306:164::-;4410:55;4427:20;4449:15;4410:16;:55::i;:::-;4306:164;;:::o;2741:201::-;2868:69;2882:10;2894:13;2909:12;2923:13;2868;:69::i;:::-;2741:201;;;:::o;620:31::-;;;;:::o;2946:242::-;3107:76;3121:17;3140:13;3155:12;3169:13;3107;:76::i;:::-;2946:242;;;;:::o;598:104:16:-;685:10;598:104;:::o;9313:340:20:-;9414:19;;;9406:68;;;;-1:-1:-1;;;9406:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9492:21;;;9484:68;;;;-1:-1:-1;;;9484:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9563:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9614:32;;;;;;;;;;;;;;;;;9313:340;;;:::o;6642:102:5:-;-1:-1:-1;6716:7:5;;6642:102::o;882:176:19:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:19;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:134;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;6989:530:20:-;7094:20;;;7086:70;;;;-1:-1:-1;;;7086:70:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7174:23;;;7166:71;;;;-1:-1:-1;;;7166:71:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7306:17;;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:24;:32::i;:::-;7407:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;;7407:20;;7477:35;;;;;;;;;;;;;6989:530;;;:::o;1754:187:19:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:19;;;1754:187::o;4474:935:5:-;4570:39;;:::i;:::-;-1:-1:-1;4612:38:5;;;;;;;:16;:38;;;;;;;;4570:80;;;;;;;;;;;;;;;;;;;;;;4612:38;4694:31;4690:114;;4757:40;4776:20;4757:18;:40::i;:::-;4735:62;;4690:114;4810:20;4833:40;:15;4853:19;4833;:40::i;:::-;4915:32;;4810:63;;-1:-1:-1;4915:50:5;;4810:63;4915:36;:50::i;:::-;4880:85;;5001:15;4971:27;;;;:45;;;5023:38;;;4880:32;5023:38;;;:16;:38;;;;;;:57;;;;;;;;;;;5104:14;;:32;;5123:12;5104:18;:32::i;:::-;5087:14;:49;5168:7;;5198:75;;;;;5168:7;;;;;5143:15;;5168:7;;5198:21;;:75;;5220:20;;5250:4;;5257:15;;5198:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5182:91;;5287:8;5279:46;;;;-1:-1:-1;;;5279:46:5;;;;;;;:::i;:::-;5337:67;5350:20;5372:15;5389:14;;5337:67;;;;;;;;:::i;:::-;;;;;;;;4474:935;;;;;;;:::o;8429:979::-;8511:7;8567:14;;8534:29;8555:7;8534:16;;:20;;:29;;;;:::i;:::-;:47;;8526:92;;;;-1:-1:-1;;;8526:92:5;;;;;;;:::i;:::-;8649:1;8632:14;;:18;8624:48;;;;-1:-1:-1;;;8624:48:5;;;;;;;:::i;:::-;8679:34;8716:73;8774:14;;8717:51;7142:6;7193:3;:15;8718:29;8739:7;8718:16;;:20;;:29;;;;:::i;:::-;8717:35;;:51::i;:::-;8716:57;;:73::i;:::-;8679:110;-1:-1:-1;8796:37:5;7339:14;8844:61;;8840:264;;;8947:49;8969:26;8947:21;:49::i;:::-;8915:81;;8840:264;;;9049:48;9070:26;9049:20;:48::i;:::-;9017:80;;8840:264;9142:64;9151:29;7263:13;9142:8;:64::i;:::-;9110:96;-1:-1:-1;9213:37:5;9253:72;7099:3;9254:48;:13;9110:96;9254:17;:48::i;9253:72::-;9213:112;-1:-1:-1;9339:64:5;7193:15;9340:42;:7;9213:112;9340:11;:42::i;9339:64::-;9332:71;8429:979;-1:-1:-1;;;;;;8429:979:5:o;3192:985::-;3345:33;;:::i;:::-;-1:-1:-1;3381:32:5;;;;;;;:13;:32;;;;;;;;;3345:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:31;3419:76;;;;-1:-1:-1;;;3419:76:5;;;;;;;:::i;:::-;3527:16;;:34;;3548:12;3527:20;:34::i;:::-;3509:14;;:52;;3501:95;;;;-1:-1:-1;;;3501:95:5;;;;;;;:::i;:::-;3603:14;3620:38;3630:13;3645:12;3620:9;:38::i;:::-;3665:40;;;3711:26;;;;:42;;;3759:26;;;;:42;;;3808:32;;;3665:25;3808:32;;;:13;:32;;;;;:48;;;;;;;;;;;;;;;;;3881:16;;3603:55;;-1:-1:-1;3881:34:5;;3693:12;3881:20;:34::i;:::-;3862:16;:53;3947:7;;3977:63;;;;;3947:7;;;;;3922:15;;3947:7;;3977:21;;:63;;3999:17;;4026:4;;4033:6;;3977:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3961:79;;4054:8;4046:46;;;;-1:-1:-1;;;4046:46:5;;;;;;;:::i;:::-;4104:68;4114:17;4133:12;4147:6;4155:16;;4104:68;;;;;;;;;:::i;:::-;;;;;;;;3192:985;;;;;;;;:::o;2188:459:19:-;2246:7;2487:6;2483:45;;-1:-1:-1;2516:1:19;2509:8;;2483:45;2550:5;;;2554:1;2550;:5;:1;2573:5;;;;;:10;2565:56;;;;-1:-1:-1;;;2565:56:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3109:130;3167:7;3193:39;3197:1;3200;3193:39;;;;;;;;;;;;;;;;;:3;:39::i;7521:223:5:-;7611:7;7633:106;7339:14;7634:66;:27;7417:14;7634:31;:66::i;7748:506::-;7837:7;;7882:158;7979:52;7193:15;7339:14;7979:18;:52::i;:::-;7883:80;7897:65;:27;7339:14;7897:31;:65::i;:::-;7142:6;;7883:13;:80::i;7882:158::-;7852:188;-1:-1:-1;8060:189:5;8107:134;7142:6;8108:97;8126:78;7501:15;7417:14;8126:43;:78::i;:::-;8108:13;;:17;:97::i;8107:134::-;7417:14;;8060:37;:189::i;223:105:18:-;281:7;312:1;307;:6;;:14;;320:1;307:14;;;-1:-1:-1;316:1:18;;223:105;-1:-1:-1;223:105:18:o;3721:272:19:-;3807:7;3841:12;3834:5;3826:28;;;;-1:-1:-1;;;3826:28:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3864:9;3880:1;3876;:5;;;;;;;3721:272;-1:-1:-1;;;;;3721:272:19:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:198:24:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;217:198;;329:2;317:9;308:7;304:23;300:32;297:2;;;350:6;342;335:22;297:2;378:31;399:9;378:31;:::i;420:274::-;;;549:2;537:9;528:7;524:23;520:32;517:2;;;570:6;562;555:22;517:2;598:31;619:9;598:31;:::i;:::-;588:41;;648:40;684:2;673:9;669:18;648:40;:::i;:::-;638:50;;507:187;;;;;:::o;699:342::-;;;;845:2;833:9;824:7;820:23;816:32;813:2;;;866:6;858;851:22;813:2;894:31;915:9;894:31;:::i;:::-;884:41;;944:40;980:2;969:9;965:18;944:40;:::i;:::-;934:50;;1031:2;1020:9;1016:18;1003:32;993:42;;803:238;;;;;:::o;1046:266::-;;;1175:2;1163:9;1154:7;1150:23;1146:32;1143:2;;;1196:6;1188;1181:22;1143:2;1224:31;1245:9;1224:31;:::i;:::-;1214:41;1302:2;1287:18;;;;1274:32;;-1:-1:-1;;;1133:179:24:o;1317:403::-;;;;;1480:3;1468:9;1459:7;1455:23;1451:33;1448:2;;;1502:6;1494;1487:22;1448:2;1530:31;1551:9;1530:31;:::i;:::-;1520:41;1608:2;1593:18;;1580:32;;-1:-1:-1;1659:2:24;1644:18;;1631:32;;1710:2;1695:18;1682:32;;-1:-1:-1;1438:282:24;-1:-1:-1;;;1438:282:24:o;1725:297::-;;1845:2;1833:9;1824:7;1820:23;1816:32;1813:2;;;1866:6;1858;1851:22;1813:2;1903:9;1897:16;1956:5;1949:13;1942:21;1935:5;1932:32;1922:2;;1983:6;1975;1968:22;2027:190;;2139:2;2127:9;2118:7;2114:23;2110:32;2107:2;;;2160:6;2152;2145:22;2107:2;-1:-1:-1;2188:23:24;;2097:120;-1:-1:-1;2097:120:24:o;2222:258::-;;;2351:2;2339:9;2330:7;2326:23;2322:32;2319:2;;;2372:6;2364;2357:22;2319:2;-1:-1:-1;;2400:23:24;;;2470:2;2455:18;;;2442:32;;-1:-1:-1;2309:171:24:o;2485:326::-;;;;2631:2;2619:9;2610:7;2606:23;2602:32;2599:2;;;2652:6;2644;2637:22;2599:2;-1:-1:-1;;2680:23:24;;;2750:2;2735:18;;2722:32;;-1:-1:-1;2801:2:24;2786:18;;;2773:32;;2589:222;-1:-1:-1;2589:222:24:o;2816:492::-;;2913:5;2907:12;2940:6;2935:3;2928:19;2966:4;2995:2;2990:3;2986:12;2979:19;;3032:2;3025:5;3021:14;3053:3;3065:218;3079:6;3076:1;3073:13;3065:218;;;3144:13;;3159:42;3140:62;3128:75;;3223:12;;;;3258:15;;;;3101:1;3094:9;3065:218;;;-1:-1:-1;3299:3:24;;2883:425;-1:-1:-1;;;;;2883:425:24:o;3313:226::-;3489:42;3477:55;;;;3459:74;;3447:2;3432:18;;3414:125::o;3544:305::-;3756:42;3744:55;;;;3726:74;;3831:2;3816:18;;3809:34;3714:2;3699:18;;3681:168::o;3854:376::-;4094:42;4082:55;;;;4064:74;;4169:2;4154:18;;4147:34;;;;4212:2;4197:18;;4190:34;4052:2;4037:18;;4019:211::o;4235:406::-;4455:42;4524:15;;;4506:34;;4576:15;;;;4571:2;4556:18;;4549:43;4623:2;4608:18;;4601:34;;;;4433:2;4418:18;;4400:241::o;5019:440::-;5280:42;5268:55;;;;5250:74;;5355:2;5340:18;;5333:34;;;;5398:2;5383:18;;5376:34;5441:2;5426:18;;5419:34;5237:3;5222:19;;5204:255::o;5464:187::-;5629:14;;5622:22;5604:41;;5592:2;5577:18;;5559:92::o;5656:239::-;5805:2;5790:18;;5838:1;5827:13;;5817:2;;5844:9;5817:2;5864:25;;;5772:123;:::o;5900:662::-;;6041:2;6070;6059:9;6052:21;6102:6;6096:13;6145:6;6140:2;6129:9;6125:18;6118:34;6170:4;6183:140;6197:6;6194:1;6191:13;6183:140;;;6292:14;;;6288:23;;6282:30;6258:17;;;6277:2;6254:26;6247:66;6212:10;;6183:140;;;6341:6;6338:1;6335:13;6332:2;;;6411:4;6406:2;6397:6;6386:9;6382:22;6378:31;6371:45;6332:2;-1:-1:-1;6478:2:24;6466:15;6483:66;6462:88;6447:104;;;;6553:2;6443:113;;6021:541;-1:-1:-1;;;6021:541:24:o;6567:341::-;6769:2;6751:21;;;6808:2;6788:18;;;6781:30;6847:19;6842:2;6827:18;;6820:47;6899:2;6884:18;;6741:167::o;6913:356::-;7115:2;7097:21;;;7134:18;;;7127:30;7193:34;7188:2;7173:18;;7166:62;7260:2;7245:18;;7087:182::o;7274:349::-;7476:2;7458:21;;;7515:2;7495:18;;;7488:30;7554:27;7549:2;7534:18;;7527:55;7614:2;7599:18;;7448:175::o;7628:356::-;7830:2;7812:21;;;7849:18;;;7842:30;7908:34;7903:2;7888:18;;7881:62;7975:2;7960:18;;7802:182::o;7989:356::-;8191:2;8173:21;;;8210:18;;;8203:30;8269:34;8264:2;8249:18;;8242:62;8336:2;8321:18;;8163:182::o;8350:354::-;8552:2;8534:21;;;8591:2;8571:18;;;8564:30;8630:32;8625:2;8610:18;;8603:60;8695:2;8680:18;;8524:180::o;8709:427::-;8911:2;8893:21;;;8950:2;8930:18;;;8923:30;8989:34;8984:2;8969:18;;8962:62;9060:33;9055:2;9040:18;;9033:61;9126:3;9111:19;;8883:253::o;9141:177::-;9287:25;;;9275:2;9260:18;;9242:76::o;9323:338::-;;9530:6;9519:9;9512:25;9573:2;9568;9557:9;9553:18;9546:30;9593:62;9651:2;9640:9;9636:18;9628:6;9593:62;:::i;:::-;9585:70;9502:159;-1:-1:-1;;;;9502:159:24:o;9666:884::-;;9951:6;9940:9;9933:25;9977:2;10015;10010;9999:9;9995:18;9988:30;10041:62;10099:2;10088:9;10084:18;10076:6;10041:62;:::i;:::-;10139:22;;;10134:2;10119:18;;10112:50;10211:13;;10233:22;;;10309:15;;;;10271;;;10342:4;10355:169;10369:6;10366:1;10363:13;10355:169;;;10430:13;;10418:26;;10499:15;;;;10464:12;;;;10391:1;10384:9;10355:169;;;-1:-1:-1;10541:3:24;;9923:627;-1:-1:-1;;;;;;;;9923:627:24:o;10555:248::-;10729:25;;;10785:2;10770:18;;10763:34;10717:2;10702:18;;10684:119::o;10808:319::-;11010:25;;;11066:2;11051:18;;11044:34;;;;11109:2;11094:18;;11087:34;10998:2;10983:18;;10965:162::o;11132:391::-;11363:25;;;11419:2;11404:18;;11397:34;;;;11462:2;11447:18;;11440:34;11505:2;11490:18;;11483:34;11350:3;11335:19;;11317:206::o;11528:184::-;11700:4;11688:17;;;;11670:36;;11658:2;11643:18;;11625:87::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"../PolicyBook.sol\";\n\ncontract MockPolicyBook is PolicyBook {\n  constructor(address _contract, IPolicyBookFabric.ContractType _contractType, address _daiAddr)\n    PolicyBook(_contract, _contractType, _daiAddr) {}\n\n  function setTotalLiquidity(uint256 _daiInThePoolTotal) public {\n    totalLiquidity = _daiInThePoolTotal;\n  }\n\n  function setTotalCoverTokens(uint256 _daiInThePoolBought) public {\n    totalCoverTokens = _daiInThePoolBought;\n  }\n}\n",
  "sourcePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/Mock/MockPolicyBook.sol",
  "ast": {
    "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/Mock/MockPolicyBook.sol",
    "exportedSymbols": {
      "Context": [
        2262
      ],
      "ERC20": [
        3143
      ],
      "IERC20": [
        3221
      ],
      "IPolicyBook": [
        1959
      ],
      "IPolicyBookFabric": [
        2004
      ],
      "Math": [
        2444
      ],
      "MockPolicyBook": [
        573
      ],
      "PolicyBook": [
        1416
      ],
      "SafeMath": [
        2640
      ]
    },
    "id": 574,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 533,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "id": 534,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "../PolicyBook.sol",
        "id": 535,
        "nodeType": "ImportDirective",
        "scope": 574,
        "sourceUnit": 1417,
        "src": "91:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 536,
              "name": "PolicyBook",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1416,
              "src": "147:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyBook_$1416",
                "typeString": "contract PolicyBook"
              }
            },
            "id": 537,
            "nodeType": "InheritanceSpecifier",
            "src": "147:10:4"
          }
        ],
        "contractDependencies": [
          1416,
          1959,
          2262,
          3143,
          3221
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573,
          1416,
          3143,
          1959,
          3221,
          2262
        ],
        "name": "MockPolicyBook",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 551,
              "nodeType": "Block",
              "src": "308:2:4",
              "statements": []
            },
            "id": 552,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 546,
                    "name": "_contract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 539,
                    "src": "272:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 547,
                    "name": "_contractType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 541,
                    "src": "283:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$1966",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  {
                    "id": 548,
                    "name": "_daiAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 543,
                    "src": "298:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 549,
                "modifierName": {
                  "id": 545,
                  "name": "PolicyBook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1416,
                  "src": "261:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PolicyBook_$1416_$",
                    "typeString": "type(contract PolicyBook)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "261:46:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "174:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "174:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "_contractType",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "193:44:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$1966",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1966,
                    "src": "193:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$1966",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "_daiAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "239:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "173:83:4"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:4"
            },
            "scope": 573,
            "src": "162:148:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "376:46:4",
              "statements": [
                {
                  "expression": {
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 557,
                      "name": "totalLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "382:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 558,
                      "name": "_daiInThePoolTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "399:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "382:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "382:35:4"
                }
              ]
            },
            "functionSelector": "09b7d94b",
            "id": 562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "_daiInThePoolTotal",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "341:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "340:28:4"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:4"
            },
            "scope": 573,
            "src": "314:108:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "491:49:4",
              "statements": [
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 567,
                      "name": "totalCoverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "497:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 568,
                      "name": "_daiInThePoolBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "516:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "497:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "497:38:4"
                }
              ]
            },
            "functionSelector": "561e795d",
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalCoverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_daiInThePoolBought",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "455:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:29:4"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:4"
            },
            "scope": 573,
            "src": "426:114:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 574,
        "src": "120:422:4"
      }
    ],
    "src": "32:511:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/Mock/MockPolicyBook.sol",
    "exportedSymbols": {
      "Context": [
        2262
      ],
      "ERC20": [
        3143
      ],
      "IERC20": [
        3221
      ],
      "IPolicyBook": [
        1959
      ],
      "IPolicyBookFabric": [
        2004
      ],
      "Math": [
        2444
      ],
      "MockPolicyBook": [
        573
      ],
      "PolicyBook": [
        1416
      ],
      "SafeMath": [
        2640
      ]
    },
    "id": 574,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 533,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "id": 534,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "absolutePath": "/Users/armenarakelian/Documents/GitHub/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "../PolicyBook.sol",
        "id": 535,
        "nodeType": "ImportDirective",
        "scope": 574,
        "sourceUnit": 1417,
        "src": "91:27:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 536,
              "name": "PolicyBook",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1416,
              "src": "147:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyBook_$1416",
                "typeString": "contract PolicyBook"
              }
            },
            "id": 537,
            "nodeType": "InheritanceSpecifier",
            "src": "147:10:4"
          }
        ],
        "contractDependencies": [
          1416,
          1959,
          2262,
          3143,
          3221
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573,
          1416,
          3143,
          1959,
          3221,
          2262
        ],
        "name": "MockPolicyBook",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 551,
              "nodeType": "Block",
              "src": "308:2:4",
              "statements": []
            },
            "id": 552,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 546,
                    "name": "_contract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 539,
                    "src": "272:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 547,
                    "name": "_contractType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 541,
                    "src": "283:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$1966",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  {
                    "id": 548,
                    "name": "_daiAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 543,
                    "src": "298:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 549,
                "modifierName": {
                  "id": 545,
                  "name": "PolicyBook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1416,
                  "src": "261:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_PolicyBook_$1416_$",
                    "typeString": "type(contract PolicyBook)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "261:46:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "174:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "174:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "_contractType",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "193:44:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ContractType_$1966",
                    "typeString": "enum IPolicyBookFabric.ContractType"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "IPolicyBookFabric.ContractType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1966,
                    "src": "193:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ContractType_$1966",
                      "typeString": "enum IPolicyBookFabric.ContractType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "_daiAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 552,
                  "src": "239:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "173:83:4"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "308:0:4"
            },
            "scope": 573,
            "src": "162:148:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "376:46:4",
              "statements": [
                {
                  "expression": {
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 557,
                      "name": "totalLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "382:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 558,
                      "name": "_daiInThePoolTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 554,
                      "src": "399:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "382:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "382:35:4"
                }
              ]
            },
            "functionSelector": "09b7d94b",
            "id": 562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "_daiInThePoolTotal",
                  "nodeType": "VariableDeclaration",
                  "scope": 562,
                  "src": "341:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "340:28:4"
            },
            "returnParameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:4"
            },
            "scope": 573,
            "src": "314:108:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "491:49:4",
              "statements": [
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 567,
                      "name": "totalCoverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "497:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 568,
                      "name": "_daiInThePoolBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 564,
                      "src": "516:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "497:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "497:38:4"
                }
              ]
            },
            "functionSelector": "561e795d",
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalCoverTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "_daiInThePoolBought",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "455:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:29:4"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "491:0:4"
            },
            "scope": 573,
            "src": "426:114:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 574,
        "src": "120:422:4"
      }
    ],
    "src": "32:511:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0-tezos.1",
  "updatedAt": "2021-01-18T12:01:15.846Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addLiquidity(uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure"
        }
      },
      "addLiquidityFor(address,uint256)": {
        "params": {
          "_liqudityAmount": "is amount of DAI tokens to secure",
          "_liquidityHolderAddr": "is address of address to assign cover"
        }
      },
      "addShieldTokens(address,uint256)": {
        "params": {
          "_tokenAddress": "is address of reward token to add",
          "_tokensAmount": "is max amount of reward to operate on"
        },
        "returns": {
          "_success": "is indicator if purchase is successful, it will throw exception if unsuccessful"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "buyPolicy(uint256,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover",
          "_durationDays": "is number of days to cover",
          "_maxDaiTokens": "is number of DAI to spend"
        }
      },
      "buyPolicyFor(address,uint256,uint256,uint256)": {
        "params": {
          "_coverTokens": "is number of tokens to cover",
          "_durationDays": "is number of days to cover",
          "_maxDaiTokens": "is number of DAI to spend",
          "_policyHolderAddr": "is address of address to assign cover"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getContractAddress()": {
        "returns": {
          "_contract": "is address of covered contract"
        }
      },
      "getContractType()": {
        "returns": {
          "_type": "is type of contract"
        }
      },
      "getQuote(uint256,uint256)": {
        "params": {
          "_durationDays": "is number of days to cover",
          "_tokens": "is number of tokens to cover"
        },
        "returns": {
          "_daiTokens": "is amount of DAI policy costs"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "quoteStrategy()": {
        "returns": {
          "_quoteStrategy": "is address of Quote strategy contract used to calculate quote"
        }
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "params": {
          "_policyId": "is id of policy to get reward for, reward will be sent to policy holder"
        }
      },
      "shieldAssets(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsCount()": {
        "returns": {
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "params": {
          "_limit": "is number of policy books to returns from _offset",
          "_offset": "is starting item in array to return array from"
        },
        "returns": {
          "_shieldAssetBalance": "is tokens amount of shield assets allocated to Policy Book, to get specific shield asset balance lookup _shieldAssetBalances by same index as of shield asset",
          "_shieldAssets": "is addresses of shield assets, that will be distributed to Policy givers",
          "_shieldAssetsCount": "is number of added shield assets"
        }
      },
      "stats()": {
        "returns": {
          "_annualProfitYields": "is current annual profit yield",
          "_maxCapacities": "is max DAI amount to be covered at now",
          "_totalDaiLiquidity": "is DAI amount placed by Policy providers",
          "_yearlyCost": "_yearlyCost"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdrawLiquidity(uint256)": {
        "params": {
          "_tokensToWithdraw": "is amount of DAI tokens to withdraw"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addLiquidity(uint256)": {
        "notice": "Let user to add liquidity by supplying DAI, access: ANY"
      },
      "addLiquidityFor(address,uint256)": {
        "notice": "Let user to add liqiudity for another user by supplying DAI, access: ANY"
      },
      "addShieldTokens(address,uint256)": {
        "notice": "Adds shield tokens to contract, access: ANY"
      },
      "buyPolicy(uint256,uint256,uint256)": {
        "notice": "Let user to buy policy by supplying DAI, access: ANY"
      },
      "buyPolicyFor(address,uint256,uint256,uint256)": {
        "notice": "Let user to buy policy for another user by supplying DAI, access: ANY"
      },
      "getContractAddress()": {
        "notice": "Returns address of contract this PolicyBook covers, access: ANY"
      },
      "getContractType()": {
        "notice": "Returns type of contract this PolicyBook covers, access: ANY"
      },
      "getQuote(uint256,uint256)": {
        "notice": "Let user to calculate policy cost in DAI, access: ANY"
      },
      "quoteStrategy()": {
        "notice": "Returns quote strategy defined during creation of PolicyBook, access: ANY"
      },
      "rewardForUnclaimedExpiredPolicy(uint256)": {
        "notice": "Let user to claim rewards for unclaimed policy cost in DAI, access: ANY"
      },
      "shieldAssets(uint256,uint256)": {
        "notice": "Returns list of shield assets added to PolicyBook, access: ANY"
      },
      "shieldAssetsCount()": {
        "notice": "Returns number of shield assets added, access: ANY"
      },
      "shieldAssetsWithBalance(uint256,uint256)": {
        "notice": "Returns list of shield assets added with tokens amount allocated to Policy Book, access: ANY"
      },
      "stats()": {
        "notice": "Getting stats, access: ANY"
      },
      "withdrawLiquidity(uint256)": {
        "notice": "Let user to withdraw deposited liqiudity, access: ANY"
      }
    },
    "version": 1
  }
}