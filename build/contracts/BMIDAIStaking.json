{
  "contractName": "BMIDAIStaking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "policyBookAddress",
          "type": "address"
        }
      ],
      "name": "StakingNFTBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "policyBookAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "StakingNFTMinted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defiYieldGenerator",
      "outputs": [
        {
          "internalType": "contract DefiYieldGenerator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "contract PolicyBook",
          "name": "_policyBook",
          "type": "address"
        }
      ],
      "name": "stakeDAIx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawBMIProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsWithProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "stakingInfoByToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedDaiAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract PolicyBook",
              "name": "policyBook",
              "type": "address"
            }
          ],
          "internalType": "struct BMIDAIStaking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "howManyStakings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getStakingTokensByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"}],\"name\":\"StakingNFTBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"StakingNFTMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defiYieldGenerator\",\"outputs\":[{\"internalType\":\"contract DefiYieldGenerator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getStakingTokensByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"howManyStakings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"_policyBook\",\"type\":\"address\"}],\"name\":\"stakeDAIx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"stakingInfoByToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedDaiAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"policyBook\",\"type\":\"address\"}],\"internalType\":\"struct BMIDAIStaking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawBMIProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsWithProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol\":\"BMIDAIStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol\":{\"keccak256\":\"0xd0e3dada4a18f583c8758c277abb6ef5781496272ab781c493bfe572a536a566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7cf95ff8d1d4427d6ea41d293f6aa549920466aab32ad716f69966e44a6a6\",\"dweb:/ipfs/QmT7sV3HtsiqYBGBTLZx5kRvRTFoncRjA2gL37aFD63P5e\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0x87f0ae4427c59f2ff4ebe396dec6f8474f0da9e6e8e69abace24851116d308ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4485205e253106bbe76e1effe4b0f841ff4aa08f471e58fb3cd9dd29df3cae54\",\"dweb:/ipfs/QmW6K1UjZW8j9hBriKgJ51PLVjtAKTrfAttfVUW8bfvgRb\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0xa4d48a8b7f3c70c70c3643a7c94ac0d73a1ca399d8d0e08e181bb2730cd429ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0218f4cfcfa57d8499531504346c7c5f831a1419e80b2a77442083dc843366e0\",\"dweb:/ipfs/Qma3NDpEmSDLsihYnVLQuHj4dePNGxyKG58EMV5hY5EQYC\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol\":{\"keccak256\":\"0xa451092960898901963c151cbd2e783e554173c53671bf3a5118e0b649ec2de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf45fa93b602e7e83da3392228613d082f91274ba8569291520d4fca5b07c1a7\",\"dweb:/ipfs/QmY4CBoCviE2LjeAJ8f4kxWBFT3w95dqEPFHRskTi3S99e\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x07010d871b04ca5fe82844bea1dab5778c933ac0381a671ec2f84b331668e85f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5552927e83b91573b526a0fad2aef3a8f9b2859d1c1d6d1e37c3b56a4a8496b\",\"dweb:/ipfs/Qmaku3hwmDHqUMnX2M3E1CuQmrusfM9eALZeJ82Tj4m7gc\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x5dffaaf6e0ece56b03c76eb5d57e758485fc2cca0c46913a2ee2135a5c518493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2aca8141f40390bbd21022d61fac04651cb3ff91dc7702c2654d36d79b188c\",\"dweb:/ipfs/Qmf6xXSP2yasVTD9RaG1rgnY85bPCAtNnBsXxzA1bvHgJa\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155.sol\":{\"keccak256\":\"0x0544b91ef9251d192bed56c9bd8efda1e76afed257bbe2d1edb58b0e9b54f88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b723de51e74c9384b68925d3ee9b9d7c8b1d90608d41646dc8c599016519cac7\",\"dweb:/ipfs/QmaJSk1Lbegt4JQePdrD7u4TzzLFeGJoLro9WayaJhwcBB\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155MintableBurnable.sol\":{\"keccak256\":\"0xbdf620d554179746b31195b372a4e68feca1f2f0b23e316833671eeade4c0656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee92aa2f2ccd2d3a6710b9835a4c6022b3071386f300cd783999522627fc45f\",\"dweb:/ipfs/QmR5bQfiV15VNCpL6iGF7tPRpUWVMJqrZwu44K9HxwhoQW\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x6080604052600160075534801561001557600080fd5b50600061002061006f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610073565b3390565b611f95806100826000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a7fa3c7f1161008c578063d0a43afd11610066578063d0a43afd146101c0578063d77379f1146101d3578063d98d0c7e146101db578063f2fde38b146101e3576100ea565b8063a7fa3c7f14610192578063be22f546146101a5578063cd30a976146101ad576100ea565b806381927714116100c85780638192771414610142578063843fe5f0146101555780638da5cb5b1461016a57806396344eaf14610172576100ea565b806312ed9d29146100ef57806369c5408614610118578063715018a614610138575b600080fd5b6101026100fd366004611a1f565b6101f6565b60405161010f9190611e82565b60405180910390f35b61012b610126366004611a1f565b61024e565b60405161010f9190611c2d565b6101406102f7565b005b610140610150366004611b5c565b6103c3565b61015d610547565b60405161010f9190611b8b565b61015d610556565b610185610180366004611b2c565b610565565b60405161010f9190611e58565b6101406101a0366004611b2c565b6105af565b61015d610b87565b6101406101bb366004611b2c565b610b96565b6101406101ce366004611a1f565b610e4f565b61015d6112d3565b61015d6112e2565b6101406101f1366004611a1f565b6112f1565b60006001600160a01b0382166102275760405162461bcd60e51b815260040161021e90611cf9565b60405180910390fd5b6001600160a01b038216600090815260056020526040902061024890611413565b92915050565b6060600061025b836101f6565b905060608167ffffffffffffffff8111801561027657600080fd5b506040519080825280602002602001820160405280156102a0578160200160208202803683370190505b50905060005b828110156102ef576001600160a01b03851660009081526005602052604090206102d0908261141e565b8282815181106102dc57fe5b60209081029190910101526001016102a6565b509392505050565b6102ff611431565b6000546001600160a01b03908116911614610361576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600254600480546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000936001600160a01b03908116936323b872dd9361041793889390911691899101611b9f565b602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611a57565b9050806104885760405162461bcd60e51b815260040161021e90611d56565b816001600160a01b03166323b872dd61049f611431565b30866040518463ffffffff1660e01b81526004016104bf93929190611b9f565b602060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190611a57565b9050806105305760405162461bcd60e51b815260040161021e90611dfb565b61054261053b611431565b8484611435565b505050565b6004546001600160a01b031681565b6000546001600160a01b031690565b61056d6119f5565b50600090815260066020908152604091829020825160608101845281548152600182015492810192909252600201546001600160a01b03169181019190915290565b6000818152600660205260409020546276a7000142116105e15760405162461bcd60e51b815260040161021e90611d8d565b60008181526006602090815260408083206002015481517fd12e56b400000000000000000000000000000000000000000000000000000000815291516001600160a01b039091169263d12e56b49260048082019391829003018186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190611a3b565b905061068c611431565b6001600160a01b0316816001600160a01b0316632d8a746e846040518263ffffffff1660e01b81526004016106c19190611e82565b60206040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190611a3b565b6001600160a01b0316146107375760405162461bcd60e51b815260040161021e90611cc2565b61073f6119f5565b506000828152600660209081526040808320815160608101835281548152600182015493810193909352600201546001600160a01b0390811691830191909152600354600454929392908216916323b872dd911661079b611431565b6004805460008a81526006602052604090819020805460019091015491517ff6b15fe60000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363f6b15fe6936107f9939101611ec1565b602060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b9190611b44565b6040518463ffffffff1660e01b815260040161086993929190611b9f565b602060405180830381600087803b15801561088357600080fd5b505af1158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bb9190611a57565b9050806108da5760405162461bcd60e51b815260040161021e90611dc4565b60025460048054604080860151602087015191517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03958616956323b872dd9561093295909116939101611b9f565b602060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190611a57565b9050806109a35760405162461bcd60e51b815260040161021e90611d56565b81604001516001600160a01b031663a9059cbb6109be611431565b84602001516040518363ffffffff1660e01b81526004016109e0929190611bc3565b602060405180830381600087803b1580156109fa57600080fd5b505af1158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190611a57565b905080610a515760405162461bcd60e51b815260040161021e90611dfb565b826001600160a01b031663f5298aca610a68611431565b8660016040518463ffffffff1660e01b8152600401610a8993929190611bdc565b600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b50505050610aea8460056000610acb611431565b6001600160a01b0316815260208101919091526040016000209061182f565b50600084815260066020526040908190206002015490517f86ef8fcef996b7ddf091f470e8f3ab619ca323d0aa2329e3d0f7c00d0d7f8c0191610b389187916001600160a01b031690611e8b565b60405180910390a15050506000908152600660205260408120818155600181019190915560020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6002546001600160a01b031681565b60008181526006602090815260408083206002015481517fd12e56b400000000000000000000000000000000000000000000000000000000815291516001600160a01b039091169263d12e56b49260048082019391829003018186803b158015610bff57600080fd5b505afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c379190611a3b565b9050610c41611431565b6001600160a01b0316816001600160a01b0316632d8a746e846040518263ffffffff1660e01b8152600401610c769190611e82565b60206040518083038186803b158015610c8e57600080fd5b505afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190611a3b565b6001600160a01b031614610cec5760405162461bcd60e51b815260040161021e90611cc2565b6003546004546000916001600160a01b03908116916323b872dd9116610d10611431565b6004805460008981526006602052604090819020805460019091015491517ff6b15fe60000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363f6b15fe693610d6e939101611ec1565b602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc09190611b44565b6040518463ffffffff1660e01b8152600401610dde93929190611b9f565b602060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e309190611a57565b9050806105425760405162461bcd60e51b815260040161021e90611dc4565b610e57611431565b6000546001600160a01b03908116911614610eb9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fa09190810190611a77565b6040518263ffffffff1660e01b8152600401610fbc9190611c71565b60206040518083038186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190611a3b565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b03166335817773826001600160a01b03166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561107a57600080fd5b505afa15801561108e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110d49190810190611a77565b6040518263ffffffff1660e01b81526004016110f09190611c71565b60206040518083038186803b15801561110857600080fd5b505afa15801561111c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111409190611a3b565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600154604080517fc0ed452f00000000000000000000000000000000000000000000000000000000815290519190921691633581777391839163c0ed452f916004808301926000929190829003018186803b1580156111d257600080fd5b505afa1580156111e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261122c9190810190611a77565b6040518263ffffffff1660e01b81526004016112489190611c71565b60206040518083038186803b15801561126057600080fd5b505afa158015611274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112989190611a3b565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b6003546001600160a01b031681565b6001546001600160a01b031681565b6112f9611431565b6000546001600160a01b0390811691161461135b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166113a05760405162461bcd60e51b8152600401808060200182810382526026815260200180611f3a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006102488261183b565b600061142a838361183f565b9392505050565b3390565b6000816001600160a01b031663d12e56b46040518163ffffffff1660e01b815260040160206040518083038186803b15801561147057600080fd5b505afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a89190611a3b565b90506000816001600160a01b031663f5b100ea866040518263ffffffff1660e01b81526004016114d89190611b8b565b60206040518083038186803b1580156114f057600080fd5b505afa158015611504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115289190611b44565b90508360005b828110156116d2576040517f1dcb46f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b03861690631dcb46f690611580908b908690600401611bc3565b60206040518083038186803b15801561159857600080fd5b505afa1580156115ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d09190611b44565b6000818152600660205260409081902060019081015491517ff5298aca00000000000000000000000000000000000000000000000000000000815295909101949192506001600160a01b0387169163f5298aca91611634918c918691600401611bdc565b600060405180830381600087803b15801561164e57600080fd5b505af1158015611662573d6000803e3d6000fd5b5050506001600160a01b038916600090815260056020526040902061168891508261182f565b50600090815260066020526040812081815560018082019290925560020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550161152e565b506007546040517f731133e90000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163731133e99161171e918a91600190600401611bfd565b600060405180830381600087803b15801561173857600080fd5b505af115801561174c573d6000803e3d6000fd5b50506040805160608101825242815260208082018681526001600160a01b038a81168486019081526007805460009081526006865287812096518755935160018701559051600290950180547fffffffffffffffffffffffff000000000000000000000000000000000000000016958316959095179094559254928c1681526005909152919091206117e0935091506118a3565b507f36200d06a5134b8842f6a7aee4c9a2a2e4834bf38af1eb011719654f03449d16600754858860405161181693929190611ea2565b60405180910390a1505060078054600101905550505050565b600061142a83836118af565b5490565b815460009082106118815760405162461bcd60e51b8152600401808060200182810382526022815260200180611f186022913960400191505060405180910390fd5b82600001828154811061189057fe5b9060005260206000200154905092915050565b600061142a8383611993565b600081815260018301602052604081205480156119895783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808301919081019060009087908390811061190057fe5b906000526020600020015490508087600001848154811061191d57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061194d57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610248565b6000915050610248565b600061199f83836119dd565b6119d557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610248565b506000610248565b60009081526001919091016020526040902054151590565b6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b600060208284031215611a30578081fd5b813561142a81611eff565b600060208284031215611a4c578081fd5b815161142a81611eff565b600060208284031215611a68578081fd5b8151801515811461142a578182fd5b600060208284031215611a88578081fd5b815167ffffffffffffffff80821115611a9f578283fd5b818401915084601f830112611ab2578283fd5b815181811115611abe57fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715611afa57fe5b604052818152838201602001871015611b11578485fd5b611b22826020830160208701611ecf565b9695505050505050565b600060208284031215611b3d578081fd5b5035919050565b600060208284031215611b55578081fd5b5051919050565b60008060408385031215611b6e578081fd5b823591506020830135611b8081611eff565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039390931683526020830191909152604082015260806060820181905260009082015260a00190565b6020808252825182820181905260009190848201906040850190845b81811015611c6557835183529284019291840191600101611c49565b50909695505050505050565b6000602082528251806020840152611c90816040850160208701611ecf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526016908201527f4e6f7420616e204e465420746f6b656e206f776e657200000000000000000000604082015260600190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f4661696c656420746f207472616e736665722044414920746f6b656e73000000604082015260600190565b6020808252601c908201527f46756e647320617265206c6f636b656420666f722033206d6f6e746800000000604082015260600190565b6020808252601d908201527f4661696c656420746f207472616e7366657220424d4920746f6b656e73000000604082015260600190565b60208082526021908201527f4661696c656420746f207472616e7366657220626d694441497820746f6b656e60408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b81518152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b918252602082015260400190565b60005b83811015611eea578181015183820152602001611ed2565b83811115611ef9576000848401525b50505050565b6001600160a01b0381168114611f1457600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220958ced808483aeb4ad6f1a5e423d5a3619218eff713d5ae46dba7daf0e13317364736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a7fa3c7f1161008c578063d0a43afd11610066578063d0a43afd146101c0578063d77379f1146101d3578063d98d0c7e146101db578063f2fde38b146101e3576100ea565b8063a7fa3c7f14610192578063be22f546146101a5578063cd30a976146101ad576100ea565b806381927714116100c85780638192771414610142578063843fe5f0146101555780638da5cb5b1461016a57806396344eaf14610172576100ea565b806312ed9d29146100ef57806369c5408614610118578063715018a614610138575b600080fd5b6101026100fd366004611a1f565b6101f6565b60405161010f9190611e82565b60405180910390f35b61012b610126366004611a1f565b61024e565b60405161010f9190611c2d565b6101406102f7565b005b610140610150366004611b5c565b6103c3565b61015d610547565b60405161010f9190611b8b565b61015d610556565b610185610180366004611b2c565b610565565b60405161010f9190611e58565b6101406101a0366004611b2c565b6105af565b61015d610b87565b6101406101bb366004611b2c565b610b96565b6101406101ce366004611a1f565b610e4f565b61015d6112d3565b61015d6112e2565b6101406101f1366004611a1f565b6112f1565b60006001600160a01b0382166102275760405162461bcd60e51b815260040161021e90611cf9565b60405180910390fd5b6001600160a01b038216600090815260056020526040902061024890611413565b92915050565b6060600061025b836101f6565b905060608167ffffffffffffffff8111801561027657600080fd5b506040519080825280602002602001820160405280156102a0578160200160208202803683370190505b50905060005b828110156102ef576001600160a01b03851660009081526005602052604090206102d0908261141e565b8282815181106102dc57fe5b60209081029190910101526001016102a6565b509392505050565b6102ff611431565b6000546001600160a01b03908116911614610361576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600254600480546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000936001600160a01b03908116936323b872dd9361041793889390911691899101611b9f565b602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611a57565b9050806104885760405162461bcd60e51b815260040161021e90611d56565b816001600160a01b03166323b872dd61049f611431565b30866040518463ffffffff1660e01b81526004016104bf93929190611b9f565b602060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190611a57565b9050806105305760405162461bcd60e51b815260040161021e90611dfb565b61054261053b611431565b8484611435565b505050565b6004546001600160a01b031681565b6000546001600160a01b031690565b61056d6119f5565b50600090815260066020908152604091829020825160608101845281548152600182015492810192909252600201546001600160a01b03169181019190915290565b6000818152600660205260409020546276a7000142116105e15760405162461bcd60e51b815260040161021e90611d8d565b60008181526006602090815260408083206002015481517fd12e56b400000000000000000000000000000000000000000000000000000000815291516001600160a01b039091169263d12e56b49260048082019391829003018186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190611a3b565b905061068c611431565b6001600160a01b0316816001600160a01b0316632d8a746e846040518263ffffffff1660e01b81526004016106c19190611e82565b60206040518083038186803b1580156106d957600080fd5b505afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190611a3b565b6001600160a01b0316146107375760405162461bcd60e51b815260040161021e90611cc2565b61073f6119f5565b506000828152600660209081526040808320815160608101835281548152600182015493810193909352600201546001600160a01b0390811691830191909152600354600454929392908216916323b872dd911661079b611431565b6004805460008a81526006602052604090819020805460019091015491517ff6b15fe60000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363f6b15fe6936107f9939101611ec1565b602060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b9190611b44565b6040518463ffffffff1660e01b815260040161086993929190611b9f565b602060405180830381600087803b15801561088357600080fd5b505af1158015610897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bb9190611a57565b9050806108da5760405162461bcd60e51b815260040161021e90611dc4565b60025460048054604080860151602087015191517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03958616956323b872dd9561093295909116939101611b9f565b602060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190611a57565b9050806109a35760405162461bcd60e51b815260040161021e90611d56565b81604001516001600160a01b031663a9059cbb6109be611431565b84602001516040518363ffffffff1660e01b81526004016109e0929190611bc3565b602060405180830381600087803b1580156109fa57600080fd5b505af1158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190611a57565b905080610a515760405162461bcd60e51b815260040161021e90611dfb565b826001600160a01b031663f5298aca610a68611431565b8660016040518463ffffffff1660e01b8152600401610a8993929190611bdc565b600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b50505050610aea8460056000610acb611431565b6001600160a01b0316815260208101919091526040016000209061182f565b50600084815260066020526040908190206002015490517f86ef8fcef996b7ddf091f470e8f3ab619ca323d0aa2329e3d0f7c00d0d7f8c0191610b389187916001600160a01b031690611e8b565b60405180910390a15050506000908152600660205260408120818155600181019190915560020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6002546001600160a01b031681565b60008181526006602090815260408083206002015481517fd12e56b400000000000000000000000000000000000000000000000000000000815291516001600160a01b039091169263d12e56b49260048082019391829003018186803b158015610bff57600080fd5b505afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c379190611a3b565b9050610c41611431565b6001600160a01b0316816001600160a01b0316632d8a746e846040518263ffffffff1660e01b8152600401610c769190611e82565b60206040518083038186803b158015610c8e57600080fd5b505afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190611a3b565b6001600160a01b031614610cec5760405162461bcd60e51b815260040161021e90611cc2565b6003546004546000916001600160a01b03908116916323b872dd9116610d10611431565b6004805460008981526006602052604090819020805460019091015491517ff6b15fe60000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363f6b15fe693610d6e939101611ec1565b602060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc09190611b44565b6040518463ffffffff1660e01b8152600401610dde93929190611b9f565b602060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e309190611a57565b9050806105425760405162461bcd60e51b815260040161021e90611dc4565b610e57611431565b6000546001600160a01b03908116911614610eb9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b158015610f4657600080fd5b505afa158015610f5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fa09190810190611a77565b6040518263ffffffff1660e01b8152600401610fbc9190611c71565b60206040518083038186803b158015610fd457600080fd5b505afa158015610fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100c9190611a3b565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b03166335817773826001600160a01b03166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561107a57600080fd5b505afa15801561108e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110d49190810190611a77565b6040518263ffffffff1660e01b81526004016110f09190611c71565b60206040518083038186803b15801561110857600080fd5b505afa15801561111c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111409190611a3b565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600154604080517fc0ed452f00000000000000000000000000000000000000000000000000000000815290519190921691633581777391839163c0ed452f916004808301926000929190829003018186803b1580156111d257600080fd5b505afa1580156111e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261122c9190810190611a77565b6040518263ffffffff1660e01b81526004016112489190611c71565b60206040518083038186803b15801561126057600080fd5b505afa158015611274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112989190611a3b565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b6003546001600160a01b031681565b6001546001600160a01b031681565b6112f9611431565b6000546001600160a01b0390811691161461135b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166113a05760405162461bcd60e51b8152600401808060200182810382526026815260200180611f3a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006102488261183b565b600061142a838361183f565b9392505050565b3390565b6000816001600160a01b031663d12e56b46040518163ffffffff1660e01b815260040160206040518083038186803b15801561147057600080fd5b505afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a89190611a3b565b90506000816001600160a01b031663f5b100ea866040518263ffffffff1660e01b81526004016114d89190611b8b565b60206040518083038186803b1580156114f057600080fd5b505afa158015611504573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115289190611b44565b90508360005b828110156116d2576040517f1dcb46f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b03861690631dcb46f690611580908b908690600401611bc3565b60206040518083038186803b15801561159857600080fd5b505afa1580156115ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d09190611b44565b6000818152600660205260409081902060019081015491517ff5298aca00000000000000000000000000000000000000000000000000000000815295909101949192506001600160a01b0387169163f5298aca91611634918c918691600401611bdc565b600060405180830381600087803b15801561164e57600080fd5b505af1158015611662573d6000803e3d6000fd5b5050506001600160a01b038916600090815260056020526040902061168891508261182f565b50600090815260066020526040812081815560018082019290925560020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550161152e565b506007546040517f731133e90000000000000000000000000000000000000000000000000000000081526001600160a01b0385169163731133e99161171e918a91600190600401611bfd565b600060405180830381600087803b15801561173857600080fd5b505af115801561174c573d6000803e3d6000fd5b50506040805160608101825242815260208082018681526001600160a01b038a81168486019081526007805460009081526006865287812096518755935160018701559051600290950180547fffffffffffffffffffffffff000000000000000000000000000000000000000016958316959095179094559254928c1681526005909152919091206117e0935091506118a3565b507f36200d06a5134b8842f6a7aee4c9a2a2e4834bf38af1eb011719654f03449d16600754858860405161181693929190611ea2565b60405180910390a1505060078054600101905550505050565b600061142a83836118af565b5490565b815460009082106118815760405162461bcd60e51b8152600401808060200182810382526022815260200180611f186022913960400191505060405180910390fd5b82600001828154811061189057fe5b9060005260206000200154905092915050565b600061142a8383611993565b600081815260018301602052604081205480156119895783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808301919081019060009087908390811061190057fe5b906000526020600020015490508087600001848154811061191d57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061194d57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610248565b6000915050610248565b600061199f83836119dd565b6119d557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610248565b506000610248565b60009081526001919091016020526040902054151590565b6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b600060208284031215611a30578081fd5b813561142a81611eff565b600060208284031215611a4c578081fd5b815161142a81611eff565b600060208284031215611a68578081fd5b8151801515811461142a578182fd5b600060208284031215611a88578081fd5b815167ffffffffffffffff80821115611a9f578283fd5b818401915084601f830112611ab2578283fd5b815181811115611abe57fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715611afa57fe5b604052818152838201602001871015611b11578485fd5b611b22826020830160208701611ecf565b9695505050505050565b600060208284031215611b3d578081fd5b5035919050565b600060208284031215611b55578081fd5b5051919050565b60008060408385031215611b6e578081fd5b823591506020830135611b8081611eff565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039390931683526020830191909152604082015260806060820181905260009082015260a00190565b6020808252825182820181905260009190848201906040850190845b81811015611c6557835183529284019291840191600101611c49565b50909695505050505050565b6000602082528251806020840152611c90816040850160208701611ecf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526016908201527f4e6f7420616e204e465420746f6b656e206f776e657200000000000000000000604082015260600190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f4661696c656420746f207472616e736665722044414920746f6b656e73000000604082015260600190565b6020808252601c908201527f46756e647320617265206c6f636b656420666f722033206d6f6e746800000000604082015260600190565b6020808252601d908201527f4661696c656420746f207472616e7366657220424d4920746f6b656e73000000604082015260600190565b60208082526021908201527f4661696c656420746f207472616e7366657220626d694441497820746f6b656e60408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b81518152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b918252602082015260400190565b60005b83811015611eea578181015183820152602001611ed2565b83811115611ef9576000848401525b50505050565b6001600160a01b0381168114611f1457600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220958ced808483aeb4ad6f1a5e423d5a3619218eff713d5ae46dba7daf0e13317364736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12227:38",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:38",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:38"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:38"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:38",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:38",
                "type": ""
              }
            ],
            "src": "14:259:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:38"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:38"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:38",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:38",
                "type": ""
              }
            ],
            "src": "278:263:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:38"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:38"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:38"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:38"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:38"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:38"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:38"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:38"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:38",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:38",
                "type": ""
              }
            ],
            "src": "546:297:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:189:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "954:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1025:36:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1038:12:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:23:38"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1029:5:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1097:5:38"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1070:26:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:33:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1070:33:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:15:38",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1122:5:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1307",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:38",
                "type": ""
              }
            ],
            "src": "848:285:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1251:182:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1297:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1306:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1314:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1299:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1299:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1299:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1272:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1293:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1264:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "1261:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1332:29:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1351:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1345:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:16:38"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1336:5:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1397:5:38"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1370:26:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:33:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1370:33:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1412:15:38",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1422:5:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC1155MintableBurnable_$4968_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1217:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1228:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1240:6:38",
                "type": ""
              }
            ],
            "src": "1138:295:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1529:868:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1575:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1584:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1592:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1577:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1577:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1577:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1550:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1559:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1546:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1546:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1571:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1542:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "1539:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1610:30:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1630:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1624:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:16:38"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1614:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1649:28:38",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1659:18:38",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1653:2:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1704:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1713:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1721:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1706:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1706:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1706:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1692:6:38"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1700:2:38"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1689:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1689:14:38"
                  },
                  "nodeType": "YulIf",
                  "src": "1686:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1739:32:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1753:9:38"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1764:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1749:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1749:22:38"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1743:2:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1819:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1828:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1836:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1821:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1821:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1821:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1798:2:38"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1802:4:38",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1794:3:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1794:13:38"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1809:7:38"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:27:38"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1783:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1783:35:38"
                  },
                  "nodeType": "YulIf",
                  "src": "1780:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1854:23:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1874:2:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1868:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1868:9:38"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1858:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1904:13:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1906:7:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1906:9:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1906:9:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1892:6:38"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1900:2:38"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1889:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1889:14:38"
                  },
                  "nodeType": "YulIf",
                  "src": "1886:2:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1926:23:38",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1946:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1940:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:9:38"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1930:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1958:130:38",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1984:6:38"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2000:6:38"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2008:4:38",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1996:3:38"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1996:17:38"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2015:66:38",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1992:3:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1992:90:38"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1980:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:103:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2085:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1976:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:112:38"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1962:10:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2147:13:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2149:7:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2149:9:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2149:9:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2106:10:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2118:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2103:2:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:18:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2126:10:38"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2138:6:38"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2123:2:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2123:22:38"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2100:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:46:38"
                  },
                  "nodeType": "YulIf",
                  "src": "2097:2:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2176:2:38",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2180:10:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2169:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2169:22:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2169:22:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2207:6:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2215:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2200:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2200:22:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2200:22:38"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2272:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2281:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2289:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2274:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2274:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2274:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2245:2:38"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2249:6:38"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2241:3:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:15:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2258:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2237:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2237:24:38"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2263:7:38"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2234:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2234:37:38"
                  },
                  "nodeType": "YulIf",
                  "src": "2231:2:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2333:2:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2337:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2329:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:11:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2346:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2354:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:15:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2359:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2307:21:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:59:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2307:59:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2375:16:38",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2385:6:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1495:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1506:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1518:6:38",
                "type": ""
              }
            ],
            "src": "1438:959:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2472:120:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2518:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2527:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2535:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2520:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2520:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2520:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2493:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2502:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2489:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2489:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2514:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2485:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2485:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "2482:2:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2553:33:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2576:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2563:12:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2563:23:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2553:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2438:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2449:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2461:6:38",
                "type": ""
              }
            ],
            "src": "2402:190:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2678:113:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2724:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2733:6:38"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2741:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2726:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2726:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2726:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2699:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2708:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2695:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2695:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2720:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2691:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "2688:2:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2759:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2775:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2769:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:16:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2759:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2644:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2655:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2667:6:38",
                "type": ""
              }
            ],
            "src": "2597:194:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2902:240:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2948:26:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2957:6:38"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2965:6:38"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2950:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2950:22:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2950:22:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2923:7:38"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2932:9:38"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2919:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2919:23:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2944:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2915:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2915:32:38"
                  },
                  "nodeType": "YulIf",
                  "src": "2912:2:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2983:33:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3006:9:38"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2993:12:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:23:38"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2983:6:38"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3025:45:38",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3055:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3066:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3051:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3051:18:38"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3038:12:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3038:32:38"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3029:5:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3106:5:38"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3079:26:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3079:33:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3079:33:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3121:15:38",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3131:5:38"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3121:6:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_PolicyBook_$2254",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2860:9:38",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2871:7:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2883:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2891:6:38",
                "type": ""
              }
            ],
            "src": "2796:346:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3248:125:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3258:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3270:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3281:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3266:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3258:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3300:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3315:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3323:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3311:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3311:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3293:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3293:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3293:74:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3217:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3228:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3239:4:38",
                "type": ""
              }
            ],
            "src": "3147:226:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3543:241:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3553:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3565:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3576:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3561:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3561:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3553:4:38"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3588:52:38",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3598:42:38",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3592:2:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3656:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3671:6:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3679:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3667:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3667:15:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3649:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3703:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3714:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3699:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3699:18:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3723:6:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3731:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3719:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3719:15:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3692:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3692:43:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3692:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3755:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3766:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3751:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3751:18:38"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3771:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3744:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3744:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3744:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3496:9:38",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3507:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3515:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3523:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3534:4:38",
                "type": ""
              }
            ],
            "src": "3378:406:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3926:168:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3936:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3948:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3959:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3944:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3944:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3936:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3978:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3993:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4001:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3989:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3989:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3971:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3971:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3971:74:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4065:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4076:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4061:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4061:18:38"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4081:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4054:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4054:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4054:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3887:9:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3898:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3906:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3917:4:38",
                "type": ""
              }
            ],
            "src": "3789:305:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4272:211:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4282:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4294:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4305:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4290:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4290:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4282:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4324:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4339:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4347:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4335:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4335:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4317:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4317:74:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4411:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4422:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4407:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4407:18:38"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4427:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4400:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4400:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4400:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4454:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4465:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4450:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4450:18:38"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4470:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4443:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4443:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4443:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4225:9:38",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4236:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4244:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4252:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4263:4:38",
                "type": ""
              }
            ],
            "src": "4099:384:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4653:241:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4663:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4675:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4686:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4671:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4663:4:38"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4698:52:38",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4708:42:38",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4702:2:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4766:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4781:6:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4789:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4777:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4777:15:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4759:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4759:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4759:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4813:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4824:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4809:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4809:18:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4833:6:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4841:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4829:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4829:15:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4802:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4802:43:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4802:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4865:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4876:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4861:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4861:18:38"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4881:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4854:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4854:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4854:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4606:9:38",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4617:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4625:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4633:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4644:4:38",
                "type": ""
              }
            ],
            "src": "4488:406:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5028:168:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5038:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5050:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5061:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5046:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5046:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5038:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5080:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5095:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5103:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5091:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5091:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5073:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5073:74:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5167:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5178:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5163:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5163:18:38"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5183:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5156:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5156:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4989:9:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5000:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5008:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5019:4:38",
                "type": ""
              }
            ],
            "src": "4899:297:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5366:211:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5376:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5388:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5399:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5384:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5384:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5376:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5418:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5433:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5441:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5429:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5429:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5411:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5411:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5411:74:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5505:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5516:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5501:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5501:18:38"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5521:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5494:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5494:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5494:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5548:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5559:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5544:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5544:18:38"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5564:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5537:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5537:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5537:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5319:9:38",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5330:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5338:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5346:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5357:4:38",
                "type": ""
              }
            ],
            "src": "5201:376:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5847:294:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5864:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5879:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5887:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5875:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5875:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5857:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5857:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5857:74:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5951:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5962:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5947:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5947:18:38"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5967:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5940:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5940:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5994:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6005:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5990:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:18:38"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6010:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5983:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5983:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5983:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6037:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6048:2:38",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6033:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6033:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6053:3:38",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6026:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6026:31:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6026:31:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6077:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6088:3:38",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6073:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6073:19:38"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6094:4:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6066:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:33:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6066:33:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6108:27:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6120:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6131:3:38",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6116:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6116:19:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6108:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5800:9:38",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5811:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5819:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5827:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5838:4:38",
                "type": ""
              }
            ],
            "src": "5582:559:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6297:484:38",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6307:12:38",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6317:2:38",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6311:2:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6328:32:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6346:9:38"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6357:2:38"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6342:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6342:18:38"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6332:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6376:9:38"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6387:2:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6369:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6369:21:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6399:17:38",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6410:6:38"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6403:3:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6425:27:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6445:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6439:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6439:13:38"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6429:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6468:6:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6476:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6461:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6461:22:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6461:22:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6492:25:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6503:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6514:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6499:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6499:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6492:3:38"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6526:29:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6544:6:38"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6552:2:38"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6540:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6540:15:38"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6530:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6564:13:38",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "6573:4:38"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6568:1:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6635:120:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6656:3:38"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6667:6:38"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6661:5:38"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6661:13:38"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6649:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6649:26:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6649:26:38"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6688:19:38",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6699:3:38"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6704:2:38"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6695:3:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6695:12:38"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6688:3:38"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6720:25:38",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6734:6:38"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6742:2:38"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6730:3:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6730:15:38"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6720:6:38"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6597:1:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6600:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6594:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6594:13:38"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6608:18:38",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6610:14:38",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6619:1:38"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6622:1:38",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6615:3:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6615:9:38"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6610:1:38"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6590:3:38",
                    "statements": []
                  },
                  "src": "6586:169:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6764:11:38",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6772:3:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6764:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6266:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6277:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6288:4:38",
                "type": ""
              }
            ],
            "src": "6146:635:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6913:125:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6923:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6935:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6946:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6931:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6931:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6923:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6965:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6980:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6988:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6976:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6976:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6958:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6958:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6958:74:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1307__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6882:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6893:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6904:4:38",
                "type": ""
              }
            ],
            "src": "6786:252:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7171:125:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7181:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7193:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7204:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7189:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7189:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7181:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7223:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7238:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7246:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7234:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7234:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7216:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7216:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7216:74:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DefiYieldGenerator_$1438__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7140:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7151:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7162:4:38",
                "type": ""
              }
            ],
            "src": "7043:253:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7417:125:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7427:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7439:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7450:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7435:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7427:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7469:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7484:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7492:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7480:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7480:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7462:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7462:74:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7462:74:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$6480__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7386:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7397:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7408:4:38",
                "type": ""
              }
            ],
            "src": "7301:241:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7668:321:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7685:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7696:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7678:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7678:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7678:21:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7708:27:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7728:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7722:5:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7722:13:38"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7712:6:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7755:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7766:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7751:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7751:18:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7771:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7744:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7744:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7744:34:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7813:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7821:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7809:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7809:15:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7830:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7841:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7826:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7826:18:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7846:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7787:21:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7787:66:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7787:66:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7862:121:38",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7878:9:38"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7897:6:38"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7905:2:38",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7893:3:38"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7893:15:38"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7910:66:38",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7889:3:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7889:88:38"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7874:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7874:104:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7980:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7870:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7870:113:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7862:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7637:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7648:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7659:4:38",
                "type": ""
              }
            ],
            "src": "7547:442:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8168:172:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8185:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8196:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8178:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8178:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8178:21:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8219:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8230:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8215:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8215:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8235:2:38",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8208:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8208:30:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8208:30:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8258:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8269:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8254:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8254:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8274:24:38",
                        "type": "",
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8247:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8247:52:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8247:52:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8308:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8320:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8331:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8316:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8316:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8308:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8145:9:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8159:4:38",
                "type": ""
              }
            ],
            "src": "7994:346:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8519:233:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8536:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8547:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8529:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8529:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8529:21:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8570:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8581:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8566:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8566:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8586:2:38",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8559:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8559:30:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8559:30:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8609:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8620:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8605:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8605:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8625:34:38",
                        "type": "",
                        "value": "ERC1155: balance query for the z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8598:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8598:62:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8598:62:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8680:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8691:2:38",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8676:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8676:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8696:13:38",
                        "type": "",
                        "value": "ero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8669:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8669:41:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8669:41:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8719:27:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8731:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8742:3:38",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8727:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8727:19:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8719:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8496:9:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8510:4:38",
                "type": ""
              }
            ],
            "src": "8345:407:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8931:179:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8948:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8959:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8941:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8941:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8941:21:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8982:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8993:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8978:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8978:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8998:2:38",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8971:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8971:30:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8971:30:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9021:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9032:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9017:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9017:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9037:31:38",
                        "type": "",
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9010:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9010:59:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9010:59:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9078:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9090:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9101:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9086:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9086:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9078:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8908:9:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8922:4:38",
                "type": ""
              }
            ],
            "src": "8757:353:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9289:178:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9306:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9317:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9299:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9299:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9299:21:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9340:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9351:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9336:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9336:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9356:2:38",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9329:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9329:30:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9329:30:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9379:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9390:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9375:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9375:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9395:30:38",
                        "type": "",
                        "value": "Funds are locked for 3 month"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9368:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9368:58:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9368:58:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9435:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9447:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9458:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9443:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9443:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9435:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9266:9:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9280:4:38",
                "type": ""
              }
            ],
            "src": "9115:352:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9646:179:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9663:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9674:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9656:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9656:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9656:21:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9697:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9708:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9693:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9693:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9713:2:38",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9686:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9686:30:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9686:30:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9736:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9747:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9732:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9732:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9752:31:38",
                        "type": "",
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9725:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9725:59:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9725:59:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9793:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9805:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9816:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9801:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9801:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9793:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9623:9:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9637:4:38",
                "type": ""
              }
            ],
            "src": "9472:353:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10004:223:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10021:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10032:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10014:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10014:21:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10014:21:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10055:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10066:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10051:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10051:18:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10071:2:38",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10044:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10044:30:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10044:30:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10094:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10105:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10090:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10090:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10110:34:38",
                        "type": "",
                        "value": "Failed to transfer bmiDAIx token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10083:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10083:62:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10083:62:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10165:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10176:2:38",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10161:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10161:18:38"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10181:3:38",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10154:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10154:31:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10154:31:38"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10194:27:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10206:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10217:3:38",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10202:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10202:19:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10194:4:38"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9981:9:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9995:4:38",
                "type": ""
              }
            ],
            "src": "9830:397:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10387:258:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10397:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10409:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10420:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10405:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10405:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10397:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10439:9:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10456:6:38"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10450:5:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10450:13:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10432:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10432:32:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10432:32:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10484:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10495:4:38",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10480:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10480:20:38"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10512:6:38"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10520:4:38",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10508:3:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10508:17:38"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10502:5:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10502:24:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10473:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10473:54:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10473:54:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10547:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10558:4:38",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10543:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10543:20:38"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10579:6:38"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10587:4:38",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10575:3:38"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10575:17:38"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "10569:5:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10569:24:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10595:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10565:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10565:73:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10536:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10536:103:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10536:103:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$18_memory_ptr__to_t_struct$_StakingInfo_$18_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10356:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10367:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10378:4:38",
                "type": ""
              }
            ],
            "src": "10232:413:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10751:76:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10761:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10773:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10784:2:38",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10769:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10769:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10761:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10803:9:38"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10814:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10796:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10796:25:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10796:25:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10720:9:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10731:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10742:4:38",
                "type": ""
              }
            ],
            "src": "10650:177:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10969:168:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10979:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10991:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11002:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10987:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10987:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10979:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11021:9:38"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11032:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11014:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11014:25:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11014:25:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11059:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11070:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11055:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11055:18:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11079:6:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11087:42:38",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11075:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11075:55:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11048:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11048:83:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11048:83:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10930:9:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10941:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10949:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10960:4:38",
                "type": ""
              }
            ],
            "src": "10832:305:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11307:241:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11317:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11329:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11340:2:38",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11325:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11325:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11317:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11359:9:38"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11370:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11352:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11352:25:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11352:25:38"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11386:52:38",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11396:42:38",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11390:2:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11458:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11469:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11454:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11454:18:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11478:6:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11486:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11474:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11474:15:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11447:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11447:43:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11447:43:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11510:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11521:2:38",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11506:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11506:18:38"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "11530:6:38"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11538:2:38"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11526:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11526:15:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11499:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11499:43:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11499:43:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11260:9:38",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11271:6:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11279:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11287:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11298:4:38",
                "type": ""
              }
            ],
            "src": "11142:406:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11682:119:38",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11692:26:38",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11704:9:38"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11715:2:38",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11700:3:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11700:18:38"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11692:4:38"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11734:9:38"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11745:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11727:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11727:25:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11727:25:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11772:9:38"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11783:2:38",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11768:3:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11768:18:38"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11788:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11761:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11761:34:38"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11761:34:38"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11643:9:38",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11654:6:38",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11662:6:38",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11673:4:38",
                "type": ""
              }
            ],
            "src": "11553:248:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11859:205:38",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11869:10:38",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11878:1:38",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11873:1:38",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11938:63:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11963:3:38"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11968:1:38"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11959:3:38"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11959:11:38"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11982:3:38"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11987:1:38"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11978:3:38"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11978:11:38"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11972:5:38"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11972:18:38"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11952:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11952:39:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11952:39:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11899:1:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11902:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11896:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11896:13:38"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11910:19:38",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11912:15:38",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11921:1:38"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11924:2:38",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11917:3:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11917:10:38"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11912:1:38"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11892:3:38",
                    "statements": []
                  },
                  "src": "11888:113:38"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12027:31:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12040:3:38"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12045:6:38"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12036:3:38"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12036:16:38"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12054:1:38",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12029:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12029:27:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12029:27:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12016:1:38"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12019:6:38"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12013:2:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12013:13:38"
                  },
                  "nodeType": "YulIf",
                  "src": "12010:2:38"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11837:3:38",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11842:3:38",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11847:6:38",
                "type": ""
              }
            ],
            "src": "11806:258:38"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12116:109:38",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12203:16:38",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12212:1:38",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12215:1:38",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12205:6:38"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12205:12:38"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12205:12:38"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12139:5:38"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12150:5:38"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12157:42:38",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12146:3:38"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12146:54:38"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12136:2:38"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12136:65:38"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12129:6:38"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12129:73:38"
                  },
                  "nodeType": "YulIf",
                  "src": "12126:2:38"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12105:5:38",
                "type": ""
              }
            ],
            "src": "12069:156:38"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1307(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ERC1155MintableBurnable_$4968_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_2)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_contract$_PolicyBook_$2254(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), tail)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1307__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_DefiYieldGenerator_$1438__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$6480__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not an NFT token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Failed to transfer DAI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Funds are locked for 3 month\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Failed to transfer BMI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Failed to transfer bmiDAIx token\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$18_memory_ptr__to_t_struct$_StakingInfo_$18_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 38,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "387:5820:0:-:0;;;1014:1;978:37;;387:5820;;;;;;;;;-1:-1:-1;882:17:24;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:24;-1:-1:-1;;;;;924:18:24;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:24;957:43;;924:6;;957:43;848:159;387:5820:0;;598:104:22;685:10;598:104;:::o;387:5820:0:-;;;;;;;",
  "deployedSourceMap": "387:5820:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5635:209;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5850:355;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1706:145:24:-;;;:::i;:::-;;2853:566:0;;;;;;:::i;:::-;;:::i;775:44::-;;;:::i;:::-;;;;;;;:::i;1083:77:24:-;;;:::i;5498:131:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4002:1483::-;;;;;;:::i;:::-;;:::i;719:22::-;;;:::i;3425:571::-;;;;;;:::i;:::-;;:::i;1338:442::-;;;;;;:::i;:::-;;:::i;747:22::-;;;:::i;670:42::-;;;:::i;2000:240:24:-;;;;;;:::i;:::-;;:::i;5635:209:0:-;5696:7;-1:-1:-1;;;;;5723:19:0;;5715:75;;;;-1:-1:-1;;;5715:75:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5808:20:0;;;;;;:13;:20;;;;;:29;;:27;:29::i;:::-;5801:36;5635:209;-1:-1:-1;;5635:209:0:o;5850:355::-;5919:16;5947:12;5962:22;5978:5;5962:15;:22::i;:::-;5947:37;;6003:23;6043:4;6029:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6029:19:0;;6003:45;;6064:9;6059:106;6083:4;6079:1;:8;6059:106;;;-1:-1:-1;;;;;6128:20:0;;;;;;:13;:20;;;;;:26;;6152:1;6128:23;:26::i;:::-;6116:6;6123:1;6116:9;;;;;;;;;;;;;;;;;:38;6089:3;;6059:106;;;-1:-1:-1;6182:6:0;5850:355;-1:-1:-1;;;5850:355:0:o;1706:145:24:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:24;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;;::::1;::::0;;1706:145::o;2853:566:0:-;3006:8;;3058:18;;;3006:81;;;;;2991:12;;-1:-1:-1;;;;;3006:8:0;;;;:21;;:81;;3036:11;;3058:18;;;;3079:7;;3006:81;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2991:96;;3113:7;3105:49;;;;-1:-1:-1;;;3105:49:0;;;;;;;:::i;:::-;3224:11;-1:-1:-1;;;;;3224:24:0;;3249:12;:10;:12::i;:::-;3271:4;3278:7;3224:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3214:72;;3312:7;3304:53;;;;-1:-1:-1;;;3304:53:0;;;;;;;:::i;:::-;3368:44;3377:12;:10;:12::i;:::-;3391:7;3400:11;3368:8;:44::i;:::-;2853:566;;;:::o;775:44::-;;;-1:-1:-1;;;;;775:44:0;;:::o;1083:77:24:-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:24;1083:77;:::o;5498:131:0:-;5564:18;;:::i;:::-;-1:-1:-1;5601:21:0;;;;:12;:21;;;;;;;;;5594:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5594:28:0;;;;;;;;;5498:131::o;4002:1483::-;4098:21;;;;:12;:21;;;;;:38;648:11;4098:52;4080:15;:70;4071:112;;;;-1:-1:-1;;;4071:112:0;;;;;;;:::i;:::-;4202:37;4242:21;;;:12;:21;;;;;;;;:32;;;:48;;;;;;;-1:-1:-1;;;;;4242:32:0;;;;:46;;:48;;;;;;;;;;;:32;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4202:88;;4347:12;:10;:12::i;:::-;-1:-1:-1;;;;;4310:49:0;:13;-1:-1:-1;;;;;4310:24:0;;4335:7;4310:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4310:49:0;;4301:85;;;;-1:-1:-1;;;4301:85:0;;;;;;;:::i;:::-;4404:30;;:::i;:::-;-1:-1:-1;4437:21:0;;;;:12;:21;;;;;;;;4404:54;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4404:54:0;;;;;;;;;;4543:8;;4573:18;;4404:54;;4437:21;4543:8;;;;:21;;4573:18;4594:12;:10;:12::i;:::-;4608:18;;;;4637:21;;;:12;:21;;;;;;;:38;;4608:18;4677:37;;;;4608:107;;;;;-1:-1:-1;;;;;4608:18:0;;;;:28;;:107;;4677:37;4608:107;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4543:173;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4528:188;;4734:7;4726:49;;;;-1:-1:-1;;;4726:49:0;;;;;;;:::i;:::-;4854:8;;4884:18;;;4913:22;;;;;4938:27;;;;4854:112;;;;;-1:-1:-1;;;;;4854:8:0;;;;:21;;:112;;4884:18;;;;4938:27;4854:112;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4844:122;;4984:7;4976:49;;;;-1:-1:-1;;;4976:49:0;;;;;;;:::i;:::-;5102:11;:22;;;-1:-1:-1;;;;;5102:31:0;;5134:12;:10;:12::i;:::-;5148:11;:27;;;5102:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5092:84;;5194:7;5186:53;;;;-1:-1:-1;;;5186:53:0;;;;;;;:::i;:::-;5250:13;-1:-1:-1;;;;;5250:18:0;;5269:12;:10;:12::i;:::-;5283:7;5292:1;5250:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5304:43;5339:7;5304:13;:27;5318:12;:10;:12::i;:::-;-1:-1:-1;;;;;5304:27:0;;;;;;;;;;;;-1:-1:-1;5304:27:0;;:34;:43::i;:::-;-1:-1:-1;5397:21:0;;;;:12;:21;;;;;;;:32;;;5363:68;;;;;;5380:7;;-1:-1:-1;;;;;5397:32:0;;5363:68;:::i;:::-;;;;;;;;-1:-1:-1;;;5449:21:0;;;;:12;:21;;;;;5442:28;;;;;;;;;;;;;;;;;;4002:1483::o;719:22::-;;;-1:-1:-1;;;;;719:22:0;;:::o;3425:571::-;3488:37;3528:21;;;:12;:21;;;;;;;;:32;;;:48;;;;;;;-1:-1:-1;;;;;3528:32:0;;;;:46;;:48;;;;;;;;;;;:32;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3488:88;;3633:12;:10;:12::i;:::-;-1:-1:-1;;;;;3596:49:0;:13;-1:-1:-1;;;;;3596:24:0;;3621:7;3596:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3596:49:0;;3587:85;;;;-1:-1:-1;;;3587:85:0;;;;;;;:::i;:::-;3757:8;;3787:18;;3742:12;;-1:-1:-1;;;;;3757:8:0;;;;:21;;3787:18;3808:12;:10;:12::i;:::-;3822:18;;;;3851:21;;;:12;:21;;;;;;;:38;;3822:18;3891:37;;;;3822:107;;;;;-1:-1:-1;;;;;3822:18:0;;;;:28;;:107;;3891:37;3822:107;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3757:173;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3742:188;;3948:7;3940:49;;;;-1:-1:-1;;;3940:49:0;;;;;;;:::i;1338:442::-;1297:12:24;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1427:17:0::1;:38:::0;;;::::1;-1:-1:-1::0;;;;;1427:38:0;::::1;::::0;;::::1;::::0;;;1525:31:::1;::::0;;;;;;;1494:30:::1;::::0;1427:38;;1525:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;1525:31:0;;;;;;;;1427:38;1525:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1494:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1476:8;;:82;;;;;-1:-1:-1::0;;;;;1476:82:0::1;;;;;-1:-1:-1::0;;;;;1476:82:0::1;;;;;;1586:18;-1:-1:-1::0;;;;;1586:30:0::1;;1617:18;-1:-1:-1::0;;;;;1617:29:0::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1586:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1568:8;:82:::0;;;::::1;-1:-1:-1::0;;;;;1568:82:0;;::::1;;::::0;;-1:-1:-1;1700:17:0;1730:41:::1;::::0;;;;;;;1700:17;;;::::1;::::0;:29:::1;::::0;:17;;1730:39:::1;::::0;:41:::1;::::0;;::::1;::::0;-1:-1:-1;;1730:41:0;;;;;;;1700:17;1730:41;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1700:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1660:18;:113:::0;;;::::1;-1:-1:-1::0;;;;;1660:113:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1338:442:0:o;747:22::-;;;-1:-1:-1;;;;;747:22:0;;:::o;670:42::-;;;-1:-1:-1;;;;;670:42:0;;:::o;2000:240:24:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:24;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:24::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:24;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;;::::1;-1:-1:-1::0;;;;;2216:17:24;;;::::1;::::0;;;::::1;::::0;;2000:240::o;8770:112:37:-;8830:7;8856:19;8864:3;8856:7;:19::i;9214:135::-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;:::-;9311:31;9214:135;-1:-1:-1;;;9214:135:37:o;598:104:22:-;685:10;598:104;:::o;1786:1057:0:-;1931:37;1971:11;-1:-1:-1;;;;;1971:25:0;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1931:67;;2009:21;2033:13;-1:-1:-1;;;;;2033:26:0;;2060:7;2033:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2009:59;-1:-1:-1;2100:7:0;2078:19;2118:390;2142:13;2138:1;:17;2118:390;;;2194:48;;;;;2176:15;;-1:-1:-1;;;;;2194:36:0;;;;;:48;;2231:7;;2240:1;;2194:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2296:21;;;;:12;:21;;;;;;;:37;;;;;2364:39;;;;;2281:52;;;;;2176:66;;-1:-1:-1;;;;;;2364:18:0;;;;;:39;;2383:7;;2176:66;;2364:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2417:22:0;;;;;;:13;:22;;;;;:38;;-1:-1:-1;2447:7:0;2417:29;:38::i;:::-;-1:-1:-1;2476:21:0;;;;:12;:21;;;;;2469:28;;;;;;;;;;;;;;;;;;;2157:3;2118:390;;;-1:-1:-1;2546:17:0;;2518:53;;;;;-1:-1:-1;;;;;2518:18:0;;;;;:53;;2537:7;;2565:1;;2518:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2615:54:0;;;;;;;;2627:15;2615:54;;;;;;;;;-1:-1:-1;;;;;2615:54:0;;;;;;;;;2594:17;;;-1:-1:-1;2581:31:0;;;:12;:31;;;;;:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2706:17;;2679:22;;;;;:13;:22;;;;;;;:45;;-1:-1:-1;2679:22:0;-1:-1:-1;2679:26:0;:45::i;:::-;;2740:66;2757:17;;2784:11;2798:7;2740:66;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;2817:17:0;:19;;;;;;-1:-1:-1;;;;1786:1057:0:o;8329:135:37:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;4013:107::-;4095:18;;4013:107::o;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:37;;;;-1:-1:-1;;;4538:73:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;2830:14;;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:37;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:37;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:259:38:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;1438:959;;1571:2;1559:9;1550:7;1546:23;1542:32;1539:2;;;1592:6;1584;1577:22;1539:2;1630:9;1624:16;1659:18;1700:2;1692:6;1689:14;1686:2;;;1721:6;1713;1706:22;1686:2;1764:6;1753:9;1749:22;1739:32;;1809:7;1802:4;1798:2;1794:13;1790:27;1780:2;;1836:6;1828;1821:22;1780:2;1874;1868:9;1900:2;1892:6;1889:14;1886:2;;;1906:9;1886:2;1946;1940:9;2085:2;2015:66;2008:4;2000:6;1996:17;1992:90;1984:6;1980:103;1976:112;2138:6;2126:10;2123:22;2118:2;2106:10;2103:18;2100:46;2097:2;;;2149:9;2097:2;2176;2169:22;2200;;;2241:15;;;2258:2;2237:24;2234:37;-1:-1:-1;2231:2:38;;;2289:6;2281;2274:22;2231:2;2307:59;2359:6;2354:2;2346:6;2342:15;2337:2;2333;2329:11;2307:59;:::i;:::-;2385:6;1529:868;-1:-1:-1;;;;;;1529:868:38:o;2402:190::-;;2514:2;2502:9;2493:7;2489:23;2485:32;2482:2;;;2535:6;2527;2520:22;2482:2;-1:-1:-1;2563:23:38;;2472:120;-1:-1:-1;2472:120:38:o;2597:194::-;;2720:2;2708:9;2699:7;2695:23;2691:32;2688:2;;;2741:6;2733;2726:22;2688:2;-1:-1:-1;2769:16:38;;2678:113;-1:-1:-1;2678:113:38:o;2796:346::-;;;2944:2;2932:9;2923:7;2919:23;2915:32;2912:2;;;2965:6;2957;2950:22;2912:2;3006:9;2993:23;2983:33;;3066:2;3055:9;3051:18;3038:32;3079:33;3106:5;3079:33;:::i;:::-;3131:5;3121:15;;;2902:240;;;;;:::o;3147:226::-;-1:-1:-1;;;;;3311:55:38;;;;3293:74;;3281:2;3266:18;;3248:125::o;3378:406::-;-1:-1:-1;;;;;3667:15:38;;;3649:34;;3719:15;;;;3714:2;3699:18;;3692:43;3766:2;3751:18;;3744:34;;;;3576:2;3561:18;;3543:241::o;3789:305::-;-1:-1:-1;;;;;3989:55:38;;;;3971:74;;4076:2;4061:18;;4054:34;3959:2;3944:18;;3926:168::o;4099:384::-;-1:-1:-1;;;;;4335:55:38;;;;4317:74;;4422:2;4407:18;;4400:34;;;;4465:2;4450:18;;4443:34;4305:2;4290:18;;4272:211::o;5582:559::-;-1:-1:-1;;;;;5875:55:38;;;;5857:74;;5962:2;5947:18;;5940:34;;;;6005:2;5990:18;;5983:34;6053:3;6048:2;6033:18;;6026:31;;;5582:559;6073:19;;;6066:33;6131:3;6116:19;;5847:294::o;6146:635::-;6317:2;6369:21;;;6439:13;;6342:18;;;6461:22;;;6146:635;;6317:2;6540:15;;;;6514:2;6499:18;;;6146:635;6586:169;6600:6;6597:1;6594:13;6586:169;;;6661:13;;6649:26;;6730:15;;;;6695:12;;;;6622:1;6615:9;6586:169;;;-1:-1:-1;6772:3:38;;6297:484;-1:-1:-1;;;;;;6297:484:38:o;7547:442::-;;7696:2;7685:9;7678:21;7728:6;7722:13;7771:6;7766:2;7755:9;7751:18;7744:34;7787:66;7846:6;7841:2;7830:9;7826:18;7821:2;7813:6;7809:15;7787:66;:::i;:::-;7905:2;7893:15;7910:66;7889:88;7874:104;;;;7980:2;7870:113;;7668:321;-1:-1:-1;;7668:321:38:o;7994:346::-;8196:2;8178:21;;;8235:2;8215:18;;;8208:30;8274:24;8269:2;8254:18;;8247:52;8331:2;8316:18;;8168:172::o;8345:407::-;8547:2;8529:21;;;8586:2;8566:18;;;8559:30;8625:34;8620:2;8605:18;;8598:62;8696:13;8691:2;8676:18;;8669:41;8742:3;8727:19;;8519:233::o;8757:353::-;8959:2;8941:21;;;8998:2;8978:18;;;8971:30;9037:31;9032:2;9017:18;;9010:59;9101:2;9086:18;;8931:179::o;9115:352::-;9317:2;9299:21;;;9356:2;9336:18;;;9329:30;9395;9390:2;9375:18;;9368:58;9458:2;9443:18;;9289:178::o;9472:353::-;9674:2;9656:21;;;9713:2;9693:18;;;9686:30;9752:31;9747:2;9732:18;;9725:59;9816:2;9801:18;;9646:179::o;9830:397::-;10032:2;10014:21;;;10071:2;10051:18;;;10044:30;10110:34;10105:2;10090:18;;10083:62;10181:3;10176:2;10161:18;;10154:31;10217:3;10202:19;;10004:223::o;10232:413::-;10450:13;;10432:32;;10520:4;10508:17;;;10502:24;10480:20;;;10473:54;10587:4;10575:17;;;10569:24;-1:-1:-1;;;;;10565:73:38;10543:20;;;10536:103;;;;10420:2;10405:18;;10387:258::o;10650:177::-;10796:25;;;10784:2;10769:18;;10751:76::o;10832:305::-;11014:25;;;-1:-1:-1;;;;;11075:55:38;11070:2;11055:18;;11048:83;11002:2;10987:18;;10969:168::o;11142:406::-;11352:25;;;-1:-1:-1;;;;;11474:15:38;;;11469:2;11454:18;;11447:43;11526:15;11521:2;11506:18;;11499:43;11340:2;11325:18;;11307:241::o;11553:248::-;11727:25;;;11783:2;11768:18;;11761:34;11715:2;11700:18;;11682:119::o;11806:258::-;11878:1;11888:113;11902:6;11899:1;11896:13;11888:113;;;11978:11;;;11972:18;11959:11;;;11952:39;11924:2;11917:10;11888:113;;;12019:6;12016:1;12013:13;12010:2;;;12054:1;12045:6;12040:3;12036:16;12029:27;12010:2;;11859:205;;;:::o;12069:156::-;-1:-1:-1;;;;;12150:5:38;12146:54;12139:5;12136:65;12126:2;;12215:1;12212;12205:12;12126:2;12116:109;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./interfaces/IPolicyBook.sol\";\n\nimport \"./tokens/ERC1155MintableBurnable.sol\";\nimport \"./PolicyBook.sol\";\nimport \"./ContractsRegistry.sol\";\nimport \"./DefiYieldGenerator.sol\";\n\ncontract BMIDAIStaking is Ownable {\n    struct StakingInfo {\n        uint256 stakingStartTime;\n        uint256 stakedDaiAmount;\n        PolicyBook policyBook;\n    }\n\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    uint256 constant private THREE_MONTH = 3 * 30 days;\n    \n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    DefiYieldGenerator public defiYieldGenerator;\n    \n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n    mapping(uint256 => StakingInfo) private _stakersPool; // NFT => INFO\n    \n    uint256 private _currentNFTMintID = 1;\n\n    event StakingNFTMinted(uint256 id, address policyBookAddress, address to);\n    event StakingNFTBurned(uint256 id, address policyBookAddress);\n\n    modifier onlyDefiYieldGenerator() {\n        require (_msgSender() == address(defiYieldGenerator), \"Only generator is allowed to increase profit\");\n        _;\n    }\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n\n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        defiYieldGenerator = DefiYieldGenerator(contractsRegistry.getContract(contractsRegistry.getYieldGeneratorName()));\n    }\n\n    function _mintNFT(\n        address _staker,        \n        uint256 _amount,\n        PolicyBook _policyBook\n    ) private {             \n        ERC1155MintableBurnable stakingTokens = _policyBook.stakingTokens();\n\n        uint256 stakerBalance = stakingTokens.balanceOfNFT(_staker);\n        uint256 totalAmount = _amount;\n\n        for (uint256 i = 0; i < stakerBalance; i++) {\n            uint256 tokenID = stakingTokens.tokenOfOwnerByIndexNFT(_staker, i);            \n            \n            totalAmount += _stakersPool[tokenID].stakedDaiAmount;\n                \n            stakingTokens.burn(_staker, tokenID, 1);\n            _holderTokens[_staker].remove(tokenID);\n            delete _stakersPool[tokenID];\n        }\n\n        stakingTokens.mint(_staker, _currentNFTMintID, 1, \"\");\n        _stakersPool[_currentNFTMintID] = StakingInfo(block.timestamp, totalAmount, _policyBook);\n        _holderTokens[_staker].add(_currentNFTMintID);\n\n        emit StakingNFTMinted(_currentNFTMintID, address(_policyBook), _staker);\n\n        _currentNFTMintID++;\n    }    \n\n    function stakeDAIx(uint256 _amount, PolicyBook _policyBook) external {\n        // transfer DAI from PolicyBook to yield generator\n        bool success = daiToken.transferFrom(address(_policyBook), address(defiYieldGenerator), _amount);        \n        require(success, \"Failed to transfer DAI tokens\");\n\n        // transfer bmiDAIx from user to staking\n        success = _policyBook.transferFrom(_msgSender(), address(this), _amount);        \n        require(success, \"Failed to transfer bmiDAIx tokens\");\n\n        _mintNFT(_msgSender(), _amount, _policyBook);\n    }\n\n    function withdrawBMIProfit(uint256 tokenID) external {\n        ERC1155MintableBurnable stakingTokens = _stakersPool[tokenID].policyBook.stakingTokens();\n\n        require (stakingTokens.ownerOfNFT(tokenID) == _msgSender(), \"Not an NFT token owner\");\n\n        // transfer bmi profit from YieldGenerator to user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), defiYieldGenerator.getProfit(_stakersPool[tokenID].stakingStartTime, _stakersPool[tokenID].stakedDaiAmount));\n        require(success, \"Failed to transfer BMI tokens\");\n    }\n\n    function withdrawFundsWithProfit(uint256 tokenID) external {\n        require (block.timestamp > _stakersPool[tokenID].stakingStartTime + THREE_MONTH, \"Funds are locked for 3 month\");\n        \n        ERC1155MintableBurnable stakingTokens = _stakersPool[tokenID].policyBook.stakingTokens();\n\n        require (stakingTokens.ownerOfNFT(tokenID) == _msgSender(), \"Not an NFT token owner\");\n       \n        StakingInfo memory stakingInfo = _stakersPool[tokenID];\n\n        // transfer bmi profit from YieldGenerator to user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), defiYieldGenerator.getProfit(_stakersPool[tokenID].stakingStartTime, _stakersPool[tokenID].stakedDaiAmount));\n        require(success, \"Failed to transfer BMI tokens\");\n\n        // transfer DAI from YieldGenerator to PolicyBook\n        success = daiToken.transferFrom(address(defiYieldGenerator), address(stakingInfo.policyBook), stakingInfo.stakedDaiAmount);\n        require(success, \"Failed to transfer DAI tokens\");   \n\n        // transfer bmiDAIx from staking to the user\n        success = stakingInfo.policyBook.transfer(_msgSender(), stakingInfo.stakedDaiAmount);\n        require(success, \"Failed to transfer bmiDAIx tokens\");\n\n        stakingTokens.burn(_msgSender(), tokenID, 1);\n        _holderTokens[_msgSender()].remove(tokenID);\n\n        emit StakingNFTBurned(tokenID, address(_stakersPool[tokenID].policyBook));\n\n        delete _stakersPool[tokenID];        \n    }       \n\n    function stakingInfoByToken(uint256 tokenID) public view returns (StakingInfo memory) {\n        return _stakersPool[tokenID];\n    }\n\n    function howManyStakings(address owner) public view returns (uint256) {\n        require(owner != address(0), \"ERC1155: balance query for the zero address\");\n\n        return _holderTokens[owner].length();\n    }\n\n    function getStakingTokensByOwner(address owner) public view returns (uint256[] memory) {\n        uint256 size = howManyStakings(owner);\n        \n        uint256[] memory tokens = new uint256[](size);\n\n        for (uint256 i = 0; i < size; i++)\n        {\n            tokens[i] = _holderTokens[owner].at(i);\n        }\n\n        return tokens;          \n    }\n}\n",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        5274
      ],
      "Address": [
        6937
      ],
      "BMIDAIStaking": [
        571
      ],
      "Context": [
        4991
      ],
      "ContractsRegistry": [
        1307
      ],
      "DefiYieldGenerator": [
        1438
      ],
      "ERC1155": [
        4867
      ],
      "ERC1155MintableBurnable": [
        4968
      ],
      "ERC165": [
        5440
      ],
      "ERC20": [
        6402
      ],
      "EnumerableMap": [
        7392
      ],
      "EnumerableSet": [
        7872
      ],
      "IERC1155": [
        5843
      ],
      "IERC1155MetadataURI": [
        5858
      ],
      "IERC1155Receiver": [
        5899
      ],
      "IERC165": [
        5452
      ],
      "IERC20": [
        6480
      ],
      "IPolicyBook": [
        3061
      ],
      "IPolicyBookFabric": [
        3110
      ],
      "Math": [
        5525
      ],
      "Ownable": [
        5383
      ],
      "PolicyBook": [
        2254
      ],
      "SafeMath": [
        5721
      ]
    },
    "id": 572,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 7873,
        "src": "91:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 5384,
        "src": "149:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
        "file": "./interfaces/IPolicyBook.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 3062,
        "src": "203:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155MintableBurnable.sol",
        "file": "./tokens/ERC1155MintableBurnable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 4969,
        "src": "243:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "./PolicyBook.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 2255,
        "src": "290:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 1308,
        "src": "317:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
        "file": "./DefiYieldGenerator.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 572,
        "sourceUnit": 1439,
        "src": "351:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5383,
              "src": "413:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5383",
                "typeString": "contract Ownable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "413:7:0"
          }
        ],
        "contractDependencies": [
          4991,
          5383
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 571,
        "linearizedBaseContracts": [
          571,
          5383,
          4991
        ],
        "name": "BMIDAIStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BMIDAIStaking.StakingInfo",
            "id": 18,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "stakingStartTime",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "456:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "456:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "stakedDaiAmount",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "490:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "490:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "policyBook",
                "nodeType": "VariableDeclaration",
                "scope": 18,
                "src": "523:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PolicyBook_$2254",
                  "typeString": "contract PolicyBook"
                },
                "typeName": {
                  "id": 16,
                  "name": "PolicyBook",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2254,
                  "src": "523:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2254",
                    "typeString": "contract PolicyBook"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 571,
            "src": "427:124:0",
            "visibility": "public"
          },
          {
            "id": 21,
            "libraryName": {
              "id": 19,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7872,
              "src": "563:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$7872",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "557:46:0",
            "typeName": {
              "id": 20,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7777,
              "src": "581:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$7777_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "constant": true,
            "id": 26,
            "mutability": "constant",
            "name": "THREE_MONTH",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "609:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              },
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "33",
                "id": 23,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "648:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 24,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "652:7:0",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2592000_by_1",
                  "typeString": "int_const 2592000"
                },
                "value": "30"
              },
              "src": "648:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 28,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "670:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 27,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1307,
              "src": "670:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 30,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "719:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6480",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 29,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6480,
              "src": "719:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6480",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 32,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "747:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6480",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 31,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6480,
              "src": "747:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6480",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "843fe5f0",
            "id": 34,
            "mutability": "mutable",
            "name": "defiYieldGenerator",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "775:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
              "typeString": "contract DefiYieldGenerator"
            },
            "typeName": {
              "id": 33,
              "name": "DefiYieldGenerator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "775:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                "typeString": "contract DefiYieldGenerator"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "830:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 37,
              "keyType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "839:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "830:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "id": 36,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7777,
                "src": "850:21:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$7777_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "_stakersPool",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "900:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 39,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "908:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "900:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
              },
              "valueType": {
                "id": 40,
                "name": "StakingInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 18,
                "src": "919:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$18_storage_ptr",
                  "typeString": "struct BMIDAIStaking.StakingInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "_currentNFTMintID",
            "nodeType": "VariableDeclaration",
            "scope": 571,
            "src": "978:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "978:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1014:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "StakingNFTMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1045:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1057:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "1084:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:51:0"
            },
            "src": "1022:74:0"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "StakingNFTBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1124:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1136:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:39:0"
            },
            "src": "1101:62:0"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1203:129:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 62,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "1222:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1222:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 66,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1246:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1238:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1238:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1238:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1222:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6372656173652070726f666974",
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1267:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                          "typeString": "literal_string \"Only generator is allowed to increase profit\""
                        },
                        "value": "Only generator is allowed to increase profit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                          "typeString": "literal_string \"Only generator is allowed to increase profit\""
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1213:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1213:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "1213:101:0"
                },
                {
                  "id": 72,
                  "nodeType": "PlaceholderStatement",
                  "src": "1324:1:0"
                }
              ]
            },
            "id": 74,
            "name": "onlyDefiYieldGenerator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:0"
            },
            "src": "1169:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1417:363:0",
              "statements": [
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1427:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "1447:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "1427:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:38:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1476:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6480",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 89,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "1525:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1117,
                                "src": "1525:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1525:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 87,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "1494:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1190,
                            "src": "1494:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1494:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6480,
                        "src": "1487:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6480_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1487:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6480",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1476:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6480",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:82:0"
                },
                {
                  "expression": {
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1568:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6480",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 100,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "1617:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1125,
                                "src": "1617:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1617:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 98,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "1586:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1190,
                            "src": "1586:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1586:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 97,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6480,
                        "src": "1579:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6480_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1579:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6480",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1568:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6480",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:82:0"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "defiYieldGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1660:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 111,
                                  "name": "contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "1730:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getYieldGeneratorName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1157,
                                "src": "1730:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1730:41:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 109,
                              "name": "contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1700:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1190,
                            "src": "1700:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1700:72:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 108,
                        "name": "DefiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "1681:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DefiYieldGenerator_$1438_$",
                          "typeString": "type(contract DefiYieldGenerator)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1681:92:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "src": "1660:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                      "typeString": "contract DefiYieldGenerator"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:113:0"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 79,
                "modifierName": {
                  "id": 78,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5332,
                  "src": "1407:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1407:9:0"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1360:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1307,
                    "src": "1360:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1307",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:38:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1417:0:0"
            },
            "scope": 571,
            "src": "1338:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "1908:935:0",
              "statements": [
                {
                  "assignments": [
                    129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "stakingTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "1931:37:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                        "typeString": "contract ERC1155MintableBurnable"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "ERC1155MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4968,
                        "src": "1931:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                          "typeString": "contract ERC1155MintableBurnable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 133,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 130,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1971:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2254",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakingTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1505,
                      "src": "1971:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC1155MintableBurnable_$4968_$",
                        "typeString": "function () view external returns (contract ERC1155MintableBurnable)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1971:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                      "typeString": "contract ERC1155MintableBurnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1931:67:0"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "stakerBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2009:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2009:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2060:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 136,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2033:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                          "typeString": "contract ERC1155MintableBurnable"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOfNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3654,
                      "src": "2033:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2009:59:0"
                },
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "2078:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2078:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "id": 143,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 123,
                    "src": "2100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2078:29:0"
                },
                {
                  "body": {
                    "id": 190,
                    "nodeType": "Block",
                    "src": "2162:346:0",
                    "statements": [
                      {
                        "assignments": [
                          156
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 156,
                            "mutability": "mutable",
                            "name": "tokenID",
                            "nodeType": "VariableDeclaration",
                            "scope": 190,
                            "src": "2176:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 155,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2176:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 162,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 159,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2231:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 160,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "2240:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 157,
                              "name": "stakingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "2194:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                                "typeString": "contract ERC1155MintableBurnable"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenOfOwnerByIndexNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3685,
                            "src": "2194:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2194:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2176:66:0"
                      },
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 163,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "2281:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 164,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "2296:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 166,
                              "indexExpression": {
                                "id": 165,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "2309:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2296:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "2296:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2281:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "2281:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 173,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "2383:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 174,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "2392:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2401:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 170,
                              "name": "stakingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "2364:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                                "typeString": "contract ERC1155MintableBurnable"
                              }
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4947,
                            "src": "2364:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2364:39:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "2364:39:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 182,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "2447:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 178,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "2417:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 180,
                              "indexExpression": {
                                "id": 179,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "2431:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2417:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$7777_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7817,
                            "src": "2417:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$7777_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$7777_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2417:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 184,
                        "nodeType": "ExpressionStatement",
                        "src": "2417:38:0"
                      },
                      {
                        "expression": {
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2469:28:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 185,
                              "name": "_stakersPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "2476:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                              }
                            },
                            "id": 187,
                            "indexExpression": {
                              "id": 186,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "2489:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2476:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                              "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "2469:28:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 149,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2138:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 150,
                      "name": "stakerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "2142:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2138:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 191,
                  "initializationExpression": {
                    "assignments": [
                      146
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "2123:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2123:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 148,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2135:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2123:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2157:3:0",
                      "subExpression": {
                        "id": 152,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "2157:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 154,
                    "nodeType": "ExpressionStatement",
                    "src": "2157:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2118:390:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 195,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2537:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 196,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2546:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2565:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2568:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 192,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2518:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                          "typeString": "contract ERC1155MintableBurnable"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4906,
                      "src": "2518:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:53:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 201,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2581:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                          "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 203,
                      "indexExpression": {
                        "id": 202,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2594:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2581:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                        "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 205,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2627:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2627:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 207,
                          "name": "totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "2644:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 208,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 125,
                          "src": "2657:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2254",
                            "typeString": "contract PolicyBook"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_PolicyBook_$2254",
                            "typeString": "contract PolicyBook"
                          }
                        ],
                        "id": 204,
                        "name": "StakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2615:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingInfo_$18_storage_ptr_$",
                          "typeString": "type(struct BMIDAIStaking.StakingInfo storage pointer)"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2615:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                        "typeString": "struct BMIDAIStaking.StakingInfo memory"
                      }
                    },
                    "src": "2581:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2706:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 212,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "2679:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 214,
                        "indexExpression": {
                          "id": 213,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "2693:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2679:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$7777_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7797,
                      "src": "2679:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$7777_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$7777_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:45:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 220,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2757:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 223,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "2784:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2254",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2254",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2776:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 221,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2776:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2776:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 225,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "2798:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 219,
                      "name": "StakingNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2740:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2740:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "2735:71:0"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2817:19:0",
                    "subExpression": {
                      "id": 228,
                      "name": "_currentNFTMintID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2817:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:19:0"
                }
              ]
            },
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "1813:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "1846:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "1871:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2254",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2254,
                    "src": "1871:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$2254",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1803:96:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1908:0:0"
            },
            "scope": 571,
            "src": "1786:1057:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "2922:497:0",
              "statements": [
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "2991:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2991:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 253,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 245,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "3036:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2254",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2254",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3028:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 243,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3028:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3028:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 249,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3058:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3050:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3050:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3050:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 251,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3079:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 241,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3006:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6480",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6461,
                      "src": "3006:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2991:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 255,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "3113:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3122:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        },
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3105:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3105:49:0"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 259,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "3214:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 262,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "3249:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3249:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 266,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3271:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BMIDAIStaking_$571",
                                "typeString": "contract BMIDAIStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BMIDAIStaking_$571",
                                "typeString": "contract BMIDAIStaking"
                              }
                            ],
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3263:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 264,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3263:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3263:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 268,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "3278:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 260,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 236,
                          "src": "3224:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2254",
                            "typeString": "contract PolicyBook"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6100,
                        "src": "3224:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3224:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3214:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3214:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 240,
                        "src": "3312:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3321:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3304:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3304:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3304:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 278,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4979,
                          "src": "3377:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3377:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 280,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3391:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 281,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "3400:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2254",
                          "typeString": "contract PolicyBook"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_PolicyBook_$2254",
                          "typeString": "contract PolicyBook"
                        }
                      ],
                      "id": 277,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "3368:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_PolicyBook_$2254_$returns$__$",
                        "typeString": "function (address,uint256,contract PolicyBook)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "3368:44:0"
                }
              ]
            },
            "functionSelector": "81927714",
            "id": 285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeDAIx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2872:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2872:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "2889:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2254",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2254,
                    "src": "2889:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$2254",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2871:41:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2922:0:0"
            },
            "scope": 571,
            "src": "2853:566:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "3478:518:0",
              "statements": [
                {
                  "assignments": [
                    291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 291,
                      "mutability": "mutable",
                      "name": "stakingTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "3488:37:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                        "typeString": "contract ERC1155MintableBurnable"
                      },
                      "typeName": {
                        "id": 290,
                        "name": "ERC1155MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4968,
                        "src": "3488:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                          "typeString": "contract ERC1155MintableBurnable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 298,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "3528:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "3541:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3528:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyBook",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "3528:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2254",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakingTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1505,
                      "src": "3528:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC1155MintableBurnable_$4968_$",
                        "typeString": "function () view external returns (contract ERC1155MintableBurnable)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                      "typeString": "contract ERC1155MintableBurnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3488:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 302,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 287,
                              "src": "3621:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 300,
                              "name": "stakingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "3596:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                                "typeString": "contract ERC1155MintableBurnable"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOfNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3668,
                            "src": "3596:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3596:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 304,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "3633:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3633:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3596:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3647:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        },
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3587:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3587:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "3587:85:0"
                },
                {
                  "assignments": [
                    311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 311,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "3742:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3742:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 332,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 316,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3787:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3779:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3779:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3779:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 318,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4979,
                          "src": "3808:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3808:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 322,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3851:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 324,
                              "indexExpression": {
                                "id": 323,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3864:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3851:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "3851:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 326,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3891:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 328,
                              "indexExpression": {
                                "id": 327,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 287,
                                "src": "3904:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3891:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "3891:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 320,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "3822:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getProfit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1437,
                          "src": "3822:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) external returns (uint256)"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3822:107:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 312,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "3757:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6480",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6461,
                      "src": "3757:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3757:173:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3742:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 334,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3948:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3957:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        },
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3940:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "3940:49:0"
                }
              ]
            },
            "functionSelector": "cd30a976",
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBMIProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "3452:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3451:17:0"
            },
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3478:0:0"
            },
            "scope": 571,
            "src": "3425:571:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "4061:1424:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 345,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4080:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4080:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 347,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "4098:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 349,
                              "indexExpression": {
                                "id": 348,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "4111:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4098:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4098:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 351,
                            "name": "THREE_MONTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "4139:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4098:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4080:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e647320617265206c6f636b656420666f722033206d6f6e7468",
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4152:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                          "typeString": "literal_string \"Funds are locked for 3 month\""
                        },
                        "value": "Funds are locked for 3 month"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                          "typeString": "literal_string \"Funds are locked for 3 month\""
                        }
                      ],
                      "id": 344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4071:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:112:0"
                },
                {
                  "assignments": [
                    358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "stakingTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4202:37:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                        "typeString": "contract ERC1155MintableBurnable"
                      },
                      "typeName": {
                        "id": 357,
                        "name": "ERC1155MintableBurnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4968,
                        "src": "4202:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                          "typeString": "contract ERC1155MintableBurnable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 359,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "4242:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "id": 360,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 341,
                            "src": "4255:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4242:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 362,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyBook",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "4242:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2254",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakingTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1505,
                      "src": "4242:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC1155MintableBurnable_$4968_$",
                        "typeString": "function () view external returns (contract ERC1155MintableBurnable)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4242:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                      "typeString": "contract ERC1155MintableBurnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4202:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 369,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "4335:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 367,
                              "name": "stakingTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "4310:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                                "typeString": "contract ERC1155MintableBurnable"
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOfNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3668,
                            "src": "4310:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4310:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 371,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "4347:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4347:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4310:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4361:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        },
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        }
                      ],
                      "id": 366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4301:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4301:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "4301:85:0"
                },
                {
                  "assignments": [
                    378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "stakingInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4404:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                        "typeString": "struct BMIDAIStaking.StakingInfo"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "StakingInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18,
                        "src": "4404:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$18_storage_ptr",
                          "typeString": "struct BMIDAIStaking.StakingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "baseExpression": {
                      "id": 379,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "4437:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                        "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 381,
                    "indexExpression": {
                      "id": 380,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "4450:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4437:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4404:54:0"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4528:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4528:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 389,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4573:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4565:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 387,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4565:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4565:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 391,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4979,
                          "src": "4594:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4594:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 395,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "4637:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 397,
                              "indexExpression": {
                                "id": 396,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "4650:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4637:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4637:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 399,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "4677:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 401,
                              "indexExpression": {
                                "id": 400,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "4690:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4677:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "4677:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 393,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4608:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getProfit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1437,
                          "src": "4608:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) external returns (uint256)"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4608:107:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 385,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4543:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6480",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6461,
                      "src": "4543:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4543:173:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4528:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 407,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4734:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4743:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        },
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4726:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4726:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "4726:49:0"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 411,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "4844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 416,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "4884:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4876:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4876:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4876:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 420,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 378,
                                "src": "4913:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                                  "typeString": "struct BMIDAIStaking.StakingInfo memory"
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17,
                              "src": "4913:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                "typeString": "contract PolicyBook"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                "typeString": "contract PolicyBook"
                              }
                            ],
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4905:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 418,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4905:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4905:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 423,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "4938:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "4938:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 412,
                          "name": "daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "4854:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6480",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6461,
                        "src": "4854:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4854:112:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4844:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 429,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "4984:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4993:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        },
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4976:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4976:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "4976:49:0"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 433,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "5092:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 437,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "5134:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5134:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 439,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5148:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "5148:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 434,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "5102:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "policyBook",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "5102:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2254",
                            "typeString": "contract PolicyBook"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6023,
                        "src": "5102:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5102:74:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5092:84:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "5092:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 445,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "5194:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5203:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5186:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5186:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "5186:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 452,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4979,
                          "src": "5269:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5269:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 454,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5283:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 449,
                        "name": "stakingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "5250:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC1155MintableBurnable_$4968",
                          "typeString": "contract ERC1155MintableBurnable"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4947,
                      "src": "5250:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5250:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 457,
                  "nodeType": "ExpressionStatement",
                  "src": "5250:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 463,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5339:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 458,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5304:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 461,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 459,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4979,
                            "src": "5318:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5318:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5304:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$7777_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7817,
                      "src": "5304:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$7777_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$7777_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5304:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "5304:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 467,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5380:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 470,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "5397:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 472,
                              "indexExpression": {
                                "id": 471,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "5410:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5397:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "policyBook",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "5397:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2254",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2254",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5389:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5389:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5389:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 466,
                      "name": "StakingNFTBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "5363:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5363:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 476,
                  "nodeType": "EmitStatement",
                  "src": "5358:73:0"
                },
                {
                  "expression": {
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5442:28:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 477,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "5449:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                          "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 479,
                      "indexExpression": {
                        "id": 478,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "5462:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5449:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                        "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "5442:28:0"
                }
              ]
            },
            "functionSelector": "a7fa3c7f",
            "id": 483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFundsWithProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "4035:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4035:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4034:17:0"
            },
            "returnParameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4061:0:0"
            },
            "scope": 571,
            "src": "4002:1483:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 494,
              "nodeType": "Block",
              "src": "5584:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 490,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "5601:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$18_storage_$",
                        "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 492,
                    "indexExpression": {
                      "id": 491,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "5614:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5601:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$18_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 489,
                  "id": 493,
                  "nodeType": "Return",
                  "src": "5594:28:0"
                }
              ]
            },
            "functionSelector": "96344eaf",
            "id": 495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakingInfoByToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5526:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:17:0"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 495,
                  "src": "5564:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$18_memory_ptr",
                    "typeString": "struct BMIDAIStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "StakingInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18,
                    "src": "5564:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$18_storage_ptr",
                      "typeString": "struct BMIDAIStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5563:20:0"
            },
            "scope": 571,
            "src": "5498:131:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 518,
              "nodeType": "Block",
              "src": "5705:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 503,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "5723:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5740:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5732:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 504,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5732:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5732:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5723:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5744:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5715:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5715:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "5715:75:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 512,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5808:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 514,
                        "indexExpression": {
                          "id": 513,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 497,
                          "src": "5822:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5808:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$7777_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7851,
                      "src": "5808:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$7777_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$7777_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5808:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 501,
                  "id": 517,
                  "nodeType": "Return",
                  "src": "5801:36:0"
                }
              ]
            },
            "functionSelector": "12ed9d29",
            "id": 519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "howManyStakings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 497,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5660:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5660:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5659:15:0"
            },
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 519,
                  "src": "5696:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5696:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5695:9:0"
            },
            "scope": 571,
            "src": "5635:209:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 569,
              "nodeType": "Block",
              "src": "5937:268:0",
              "statements": [
                {
                  "assignments": [
                    528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 569,
                      "src": "5947:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5947:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 532,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 530,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "5978:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 529,
                      "name": "howManyStakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "5962:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5962:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5947:37:0"
                },
                {
                  "assignments": [
                    537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 569,
                      "src": "6003:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6003:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 536,
                        "nodeType": "ArrayTypeName",
                        "src": "6003:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 543,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 541,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "6043:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6029:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6033:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 539,
                        "nodeType": "ArrayTypeName",
                        "src": "6033:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6029:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6003:45:0"
                },
                {
                  "body": {
                    "id": 565,
                    "nodeType": "Block",
                    "src": "6102:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 554,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "6116:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 556,
                            "indexExpression": {
                              "id": 555,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 545,
                              "src": "6123:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6116:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 561,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "6152:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 557,
                                  "name": "_holderTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38,
                                  "src": "6128:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$7777_storage_$",
                                    "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                  }
                                },
                                "id": 559,
                                "indexExpression": {
                                  "id": 558,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 521,
                                  "src": "6142:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6128:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UintSet_$7777_storage",
                                  "typeString": "struct EnumerableSet.UintSet storage ref"
                                }
                              },
                              "id": 560,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "at",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7871,
                              "src": "6128:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$7777_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$7777_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                              }
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6128:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6116:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 564,
                        "nodeType": "ExpressionStatement",
                        "src": "6116:38:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 548,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "6079:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 549,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "6083:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 566,
                  "initializationExpression": {
                    "assignments": [
                      545
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 566,
                        "src": "6064:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6064:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 547,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6076:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6064:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6089:3:0",
                      "subExpression": {
                        "id": 551,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "6089:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 553,
                    "nodeType": "ExpressionStatement",
                    "src": "6089:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6059:106:0"
                },
                {
                  "expression": {
                    "id": 567,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 537,
                    "src": "6182:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 526,
                  "id": 568,
                  "nodeType": "Return",
                  "src": "6175:13:0"
                }
              ]
            },
            "functionSelector": "69c54086",
            "id": 570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingTokensByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5883:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5882:15:0"
            },
            "returnParameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 570,
                  "src": "5919:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 523,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5919:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 524,
                    "nodeType": "ArrayTypeName",
                    "src": "5919:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5918:18:0"
            },
            "scope": 571,
            "src": "5850:355:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 572,
        "src": "387:5820:0"
      }
    ],
    "src": "32:6176:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
      "exportedSymbols": {
        "AccessControl": [
          5274
        ],
        "Address": [
          6937
        ],
        "BMIDAIStaking": [
          571
        ],
        "Context": [
          4991
        ],
        "ContractsRegistry": [
          1307
        ],
        "DefiYieldGenerator": [
          1438
        ],
        "ERC1155": [
          4867
        ],
        "ERC1155MintableBurnable": [
          4968
        ],
        "ERC165": [
          5440
        ],
        "ERC20": [
          6402
        ],
        "EnumerableMap": [
          7392
        ],
        "EnumerableSet": [
          7872
        ],
        "IERC1155": [
          5843
        ],
        "IERC1155MetadataURI": [
          5858
        ],
        "IERC1155Receiver": [
          5899
        ],
        "IERC165": [
          5452
        ],
        "IERC20": [
          6480
        ],
        "IPolicyBook": [
          3061
        ],
        "IPolicyBookFabric": [
          3110
        ],
        "Math": [
          5525
        ],
        "Ownable": [
          5383
        ],
        "PolicyBook": [
          2254
        ],
        "SafeMath": [
          5721
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 7873,
          "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
          "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "91:57:0"
      },
      {
        "attributes": {
          "SourceUnit": 5384,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "149:52:0"
      },
      {
        "attributes": {
          "SourceUnit": 3062,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
          "file": "./interfaces/IPolicyBook.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5,
        "name": "ImportDirective",
        "src": "203:38:0"
      },
      {
        "attributes": {
          "SourceUnit": 4969,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155MintableBurnable.sol",
          "file": "./tokens/ERC1155MintableBurnable.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6,
        "name": "ImportDirective",
        "src": "243:46:0"
      },
      {
        "attributes": {
          "SourceUnit": 2255,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
          "file": "./PolicyBook.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7,
        "name": "ImportDirective",
        "src": "290:26:0"
      },
      {
        "attributes": {
          "SourceUnit": 1308,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8,
        "name": "ImportDirective",
        "src": "317:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1439,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
          "file": "./DefiYieldGenerator.sol",
          "scope": 572,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 9,
        "name": "ImportDirective",
        "src": "351:34:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4991,
            5383
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            571,
            5383,
            4991
          ],
          "name": "BMIDAIStaking",
          "scope": 572
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5383,
                  "type": "contract Ownable"
                },
                "id": 10,
                "name": "UserDefinedTypeName",
                "src": "413:7:0"
              }
            ],
            "id": 11,
            "name": "InheritanceSpecifier",
            "src": "413:7:0"
          },
          {
            "attributes": {
              "canonicalName": "BMIDAIStaking.StakingInfo",
              "name": "StakingInfo",
              "scope": 571,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakingStartTime",
                  "scope": 18,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "456:7:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "456:24:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakedDaiAmount",
                  "scope": 18,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "490:7:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "490:23:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "policyBook",
                  "scope": 18,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "contract PolicyBook",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "PolicyBook",
                      "referencedDeclaration": 2254,
                      "type": "contract PolicyBook"
                    },
                    "id": 16,
                    "name": "UserDefinedTypeName",
                    "src": "523:10:0"
                  }
                ],
                "id": 17,
                "name": "VariableDeclaration",
                "src": "523:21:0"
              }
            ],
            "id": 18,
            "name": "StructDefinition",
            "src": "427:124:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "EnumerableSet",
                  "referencedDeclaration": 7872,
                  "type": "library EnumerableSet"
                },
                "id": 19,
                "name": "UserDefinedTypeName",
                "src": "563:13:0"
              },
              {
                "attributes": {
                  "name": "EnumerableSet.UintSet",
                  "referencedDeclaration": 7777,
                  "type": "struct EnumerableSet.UintSet"
                },
                "id": 20,
                "name": "UserDefinedTypeName",
                "src": "581:21:0"
              }
            ],
            "id": 21,
            "name": "UsingForDirective",
            "src": "557:46:0"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "THREE_MONTH",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 22,
                "name": "ElementaryTypeName",
                "src": "609:7:0"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_7776000_by_1",
                    "typeString": "int_const 7776000"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "int_const 7776000"
                },
                "children": [
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 23,
                    "name": "Literal",
                    "src": "648:1:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3330",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": "days",
                      "token": "number",
                      "type": "int_const 2592000",
                      "value": "30"
                    },
                    "id": 24,
                    "name": "Literal",
                    "src": "652:7:0"
                  }
                ],
                "id": 25,
                "name": "BinaryOperation",
                "src": "648:11:0"
              }
            ],
            "id": 26,
            "name": "VariableDeclaration",
            "src": "609:50:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1307,
                  "type": "contract ContractsRegistry"
                },
                "id": 27,
                "name": "UserDefinedTypeName",
                "src": "670:17:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "670:42:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6480,
                  "type": "contract IERC20"
                },
                "id": 29,
                "name": "UserDefinedTypeName",
                "src": "719:6:0"
              }
            ],
            "id": 30,
            "name": "VariableDeclaration",
            "src": "719:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6480,
                  "type": "contract IERC20"
                },
                "id": 31,
                "name": "UserDefinedTypeName",
                "src": "747:6:0"
              }
            ],
            "id": 32,
            "name": "VariableDeclaration",
            "src": "747:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "843fe5f0",
              "mutability": "mutable",
              "name": "defiYieldGenerator",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DefiYieldGenerator",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "DefiYieldGenerator",
                  "referencedDeclaration": 1438,
                  "type": "contract DefiYieldGenerator"
                },
                "id": 33,
                "name": "UserDefinedTypeName",
                "src": "775:18:0"
              }
            ],
            "id": 34,
            "name": "VariableDeclaration",
            "src": "775:44:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_holderTokens",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct EnumerableSet.UintSet)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct EnumerableSet.UintSet)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 35,
                    "name": "ElementaryTypeName",
                    "src": "839:7:0"
                  },
                  {
                    "attributes": {
                      "name": "EnumerableSet.UintSet",
                      "referencedDeclaration": 7777,
                      "type": "struct EnumerableSet.UintSet"
                    },
                    "id": 36,
                    "name": "UserDefinedTypeName",
                    "src": "850:21:0"
                  }
                ],
                "id": 37,
                "name": "Mapping",
                "src": "830:42:0"
              }
            ],
            "id": 38,
            "name": "VariableDeclaration",
            "src": "830:64:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_stakersPool",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 39,
                    "name": "ElementaryTypeName",
                    "src": "908:7:0"
                  },
                  {
                    "attributes": {
                      "name": "StakingInfo",
                      "referencedDeclaration": 18,
                      "type": "struct BMIDAIStaking.StakingInfo"
                    },
                    "id": 40,
                    "name": "UserDefinedTypeName",
                    "src": "919:11:0"
                  }
                ],
                "id": 41,
                "name": "Mapping",
                "src": "900:31:0"
              }
            ],
            "id": 42,
            "name": "VariableDeclaration",
            "src": "900:52:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_currentNFTMintID",
              "scope": 571,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 43,
                "name": "ElementaryTypeName",
                "src": "978:7:0"
              },
              {
                "attributes": {
                  "hexvalue": "31",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 1",
                  "value": "1"
                },
                "id": 44,
                "name": "Literal",
                "src": "1014:1:0"
              }
            ],
            "id": 45,
            "name": "VariableDeclaration",
            "src": "978:37:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingNFTMinted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 46,
                        "name": "ElementaryTypeName",
                        "src": "1045:7:0"
                      }
                    ],
                    "id": 47,
                    "name": "VariableDeclaration",
                    "src": "1045:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 48,
                        "name": "ElementaryTypeName",
                        "src": "1057:7:0"
                      }
                    ],
                    "id": 49,
                    "name": "VariableDeclaration",
                    "src": "1057:25:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 50,
                        "name": "ElementaryTypeName",
                        "src": "1084:7:0"
                      }
                    ],
                    "id": 51,
                    "name": "VariableDeclaration",
                    "src": "1084:10:0"
                  }
                ],
                "id": 52,
                "name": "ParameterList",
                "src": "1044:51:0"
              }
            ],
            "id": 53,
            "name": "EventDefinition",
            "src": "1022:74:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingNFTBurned"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 59,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 54,
                        "name": "ElementaryTypeName",
                        "src": "1124:7:0"
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
                    "src": "1124:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 59,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 56,
                        "name": "ElementaryTypeName",
                        "src": "1136:7:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "1136:25:0"
                  }
                ],
                "id": 58,
                "name": "ParameterList",
                "src": "1123:39:0"
              }
            ],
            "id": 59,
            "name": "EventDefinition",
            "src": "1101:62:0"
          },
          {
            "attributes": {
              "name": "onlyDefiYieldGenerator",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 60,
                "name": "ParameterList",
                "src": "1200:2:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                                  "typeString": "literal_string \"Only generator is allowed to increase profit\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 61,
                            "name": "Identifier",
                            "src": "1213:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4979,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 62,
                                    "name": "Identifier",
                                    "src": "1222:10:0"
                                  }
                                ],
                                "id": 63,
                                "name": "FunctionCall",
                                "src": "1222:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 64,
                                        "name": "ElementaryTypeName",
                                        "src": "1238:7:0"
                                      }
                                    ],
                                    "id": 65,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1238:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 66,
                                    "name": "Identifier",
                                    "src": "1246:18:0"
                                  }
                                ],
                                "id": 67,
                                "name": "FunctionCall",
                                "src": "1238:27:0"
                              }
                            ],
                            "id": 68,
                            "name": "BinaryOperation",
                            "src": "1222:43:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6372656173652070726f666974",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only generator is allowed to increase profit\"",
                              "value": "Only generator is allowed to increase profit"
                            },
                            "id": 69,
                            "name": "Literal",
                            "src": "1267:46:0"
                          }
                        ],
                        "id": 70,
                        "name": "FunctionCall",
                        "src": "1213:101:0"
                      }
                    ],
                    "id": 71,
                    "name": "ExpressionStatement",
                    "src": "1213:101:0"
                  },
                  {
                    "id": 72,
                    "name": "PlaceholderStatement",
                    "src": "1324:1:0"
                  }
                ],
                "id": 73,
                "name": "Block",
                "src": "1203:129:0"
              }
            ],
            "id": 74,
            "name": "ModifierDefinition",
            "src": "1169:163:0"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 571,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 119,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1307,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 75,
                        "name": "UserDefinedTypeName",
                        "src": "1360:17:0"
                      }
                    ],
                    "id": 76,
                    "name": "VariableDeclaration",
                    "src": "1360:36:0"
                  }
                ],
                "id": 77,
                "name": "ParameterList",
                "src": "1359:38:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 80,
                "name": "ParameterList",
                "src": "1417:0:0"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5332,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 78,
                    "name": "Identifier",
                    "src": "1407:9:0"
                  }
                ],
                "id": 79,
                "name": "ModifierInvocation",
                "src": "1407:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 81,
                            "name": "Identifier",
                            "src": "1427:17:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 76,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 82,
                            "name": "Identifier",
                            "src": "1447:18:0"
                          }
                        ],
                        "id": 83,
                        "name": "Assignment",
                        "src": "1427:38:0"
                      }
                    ],
                    "id": 84,
                    "name": "ExpressionStatement",
                    "src": "1427:38:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 30,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 85,
                            "name": "Identifier",
                            "src": "1476:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6480,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 86,
                                "name": "Identifier",
                                "src": "1487:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1190,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 76,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 87,
                                        "name": "Identifier",
                                        "src": "1494:18:0"
                                      }
                                    ],
                                    "id": 88,
                                    "name": "MemberAccess",
                                    "src": "1494:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1117,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 76,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 89,
                                            "name": "Identifier",
                                            "src": "1525:18:0"
                                          }
                                        ],
                                        "id": 90,
                                        "name": "MemberAccess",
                                        "src": "1525:29:0"
                                      }
                                    ],
                                    "id": 91,
                                    "name": "FunctionCall",
                                    "src": "1525:31:0"
                                  }
                                ],
                                "id": 92,
                                "name": "FunctionCall",
                                "src": "1494:63:0"
                              }
                            ],
                            "id": 93,
                            "name": "FunctionCall",
                            "src": "1487:71:0"
                          }
                        ],
                        "id": 94,
                        "name": "Assignment",
                        "src": "1476:82:0"
                      }
                    ],
                    "id": 95,
                    "name": "ExpressionStatement",
                    "src": "1476:82:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 32,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 96,
                            "name": "Identifier",
                            "src": "1568:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6480,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 97,
                                "name": "Identifier",
                                "src": "1579:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1190,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 76,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 98,
                                        "name": "Identifier",
                                        "src": "1586:18:0"
                                      }
                                    ],
                                    "id": 99,
                                    "name": "MemberAccess",
                                    "src": "1586:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1125,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 76,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 100,
                                            "name": "Identifier",
                                            "src": "1617:18:0"
                                          }
                                        ],
                                        "id": 101,
                                        "name": "MemberAccess",
                                        "src": "1617:29:0"
                                      }
                                    ],
                                    "id": 102,
                                    "name": "FunctionCall",
                                    "src": "1617:31:0"
                                  }
                                ],
                                "id": 103,
                                "name": "FunctionCall",
                                "src": "1586:63:0"
                              }
                            ],
                            "id": 104,
                            "name": "FunctionCall",
                            "src": "1579:71:0"
                          }
                        ],
                        "id": 105,
                        "name": "Assignment",
                        "src": "1568:82:0"
                      }
                    ],
                    "id": 106,
                    "name": "ExpressionStatement",
                    "src": "1568:82:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DefiYieldGenerator"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 34,
                              "type": "contract DefiYieldGenerator",
                              "value": "defiYieldGenerator"
                            },
                            "id": 107,
                            "name": "Identifier",
                            "src": "1660:18:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract DefiYieldGenerator",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1438,
                                  "type": "type(contract DefiYieldGenerator)",
                                  "value": "DefiYieldGenerator"
                                },
                                "id": 108,
                                "name": "Identifier",
                                "src": "1681:18:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1190,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 28,
                                          "type": "contract ContractsRegistry",
                                          "value": "contractsRegistry"
                                        },
                                        "id": 109,
                                        "name": "Identifier",
                                        "src": "1700:17:0"
                                      }
                                    ],
                                    "id": 110,
                                    "name": "MemberAccess",
                                    "src": "1700:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getYieldGeneratorName",
                                          "referencedDeclaration": 1157,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 28,
                                              "type": "contract ContractsRegistry",
                                              "value": "contractsRegistry"
                                            },
                                            "id": 111,
                                            "name": "Identifier",
                                            "src": "1730:17:0"
                                          }
                                        ],
                                        "id": 112,
                                        "name": "MemberAccess",
                                        "src": "1730:39:0"
                                      }
                                    ],
                                    "id": 113,
                                    "name": "FunctionCall",
                                    "src": "1730:41:0"
                                  }
                                ],
                                "id": 114,
                                "name": "FunctionCall",
                                "src": "1700:72:0"
                              }
                            ],
                            "id": 115,
                            "name": "FunctionCall",
                            "src": "1681:92:0"
                          }
                        ],
                        "id": 116,
                        "name": "Assignment",
                        "src": "1660:113:0"
                      }
                    ],
                    "id": 117,
                    "name": "ExpressionStatement",
                    "src": "1660:113:0"
                  }
                ],
                "id": 118,
                "name": "Block",
                "src": "1417:363:0"
              }
            ],
            "id": 119,
            "name": "FunctionDefinition",
            "src": "1338:442:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_mintNFT",
              "scope": 571,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_staker",
                      "scope": 232,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 120,
                        "name": "ElementaryTypeName",
                        "src": "1813:7:0"
                      }
                    ],
                    "id": 121,
                    "name": "VariableDeclaration",
                    "src": "1813:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 232,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 122,
                        "name": "ElementaryTypeName",
                        "src": "1846:7:0"
                      }
                    ],
                    "id": 123,
                    "name": "VariableDeclaration",
                    "src": "1846:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 232,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 2254,
                          "type": "contract PolicyBook"
                        },
                        "id": 124,
                        "name": "UserDefinedTypeName",
                        "src": "1871:10:0"
                      }
                    ],
                    "id": 125,
                    "name": "VariableDeclaration",
                    "src": "1871:22:0"
                  }
                ],
                "id": 126,
                "name": "ParameterList",
                "src": "1803:96:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 127,
                "name": "ParameterList",
                "src": "1908:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        129
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingTokens",
                          "scope": 231,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract ERC1155MintableBurnable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ERC1155MintableBurnable",
                              "referencedDeclaration": 4968,
                              "type": "contract ERC1155MintableBurnable"
                            },
                            "id": 128,
                            "name": "UserDefinedTypeName",
                            "src": "1931:23:0"
                          }
                        ],
                        "id": 129,
                        "name": "VariableDeclaration",
                        "src": "1931:37:0"
                      },
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract ERC1155MintableBurnable",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakingTokens",
                              "referencedDeclaration": 1505,
                              "type": "function () view external returns (contract ERC1155MintableBurnable)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 125,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 130,
                                "name": "Identifier",
                                "src": "1971:11:0"
                              }
                            ],
                            "id": 131,
                            "name": "MemberAccess",
                            "src": "1971:25:0"
                          }
                        ],
                        "id": 132,
                        "name": "FunctionCall",
                        "src": "1971:27:0"
                      }
                    ],
                    "id": 133,
                    "name": "VariableDeclarationStatement",
                    "src": "1931:67:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        135
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakerBalance",
                          "scope": 231,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 134,
                            "name": "ElementaryTypeName",
                            "src": "2009:7:0"
                          }
                        ],
                        "id": 135,
                        "name": "VariableDeclaration",
                        "src": "2009:21:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOfNFT",
                              "referencedDeclaration": 3654,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 129,
                                  "type": "contract ERC1155MintableBurnable",
                                  "value": "stakingTokens"
                                },
                                "id": 136,
                                "name": "Identifier",
                                "src": "2033:13:0"
                              }
                            ],
                            "id": 137,
                            "name": "MemberAccess",
                            "src": "2033:26:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 121,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "2060:7:0"
                          }
                        ],
                        "id": 139,
                        "name": "FunctionCall",
                        "src": "2033:35:0"
                      }
                    ],
                    "id": 140,
                    "name": "VariableDeclarationStatement",
                    "src": "2009:59:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        142
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "totalAmount",
                          "scope": 231,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 141,
                            "name": "ElementaryTypeName",
                            "src": "2078:7:0"
                          }
                        ],
                        "id": 142,
                        "name": "VariableDeclaration",
                        "src": "2078:19:0"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 123,
                          "type": "uint256",
                          "value": "_amount"
                        },
                        "id": 143,
                        "name": "Identifier",
                        "src": "2100:7:0"
                      }
                    ],
                    "id": 144,
                    "name": "VariableDeclarationStatement",
                    "src": "2078:29:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            146
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 191,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 145,
                                "name": "ElementaryTypeName",
                                "src": "2123:7:0"
                              }
                            ],
                            "id": 146,
                            "name": "VariableDeclaration",
                            "src": "2123:9:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 147,
                            "name": "Literal",
                            "src": "2135:1:0"
                          }
                        ],
                        "id": 148,
                        "name": "VariableDeclarationStatement",
                        "src": "2123:13:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 146,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 149,
                            "name": "Identifier",
                            "src": "2138:1:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 135,
                              "type": "uint256",
                              "value": "stakerBalance"
                            },
                            "id": 150,
                            "name": "Identifier",
                            "src": "2142:13:0"
                          }
                        ],
                        "id": 151,
                        "name": "BinaryOperation",
                        "src": "2138:17:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 146,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 152,
                                "name": "Identifier",
                                "src": "2157:1:0"
                              }
                            ],
                            "id": 153,
                            "name": "UnaryOperation",
                            "src": "2157:3:0"
                          }
                        ],
                        "id": 154,
                        "name": "ExpressionStatement",
                        "src": "2157:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                156
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "tokenID",
                                  "scope": 190,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 155,
                                    "name": "ElementaryTypeName",
                                    "src": "2176:7:0"
                                  }
                                ],
                                "id": 156,
                                "name": "VariableDeclaration",
                                "src": "2176:15:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "tokenOfOwnerByIndexNFT",
                                      "referencedDeclaration": 3685,
                                      "type": "function (address,uint256) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 129,
                                          "type": "contract ERC1155MintableBurnable",
                                          "value": "stakingTokens"
                                        },
                                        "id": 157,
                                        "name": "Identifier",
                                        "src": "2194:13:0"
                                      }
                                    ],
                                    "id": 158,
                                    "name": "MemberAccess",
                                    "src": "2194:36:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 121,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 159,
                                    "name": "Identifier",
                                    "src": "2231:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 146,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 160,
                                    "name": "Identifier",
                                    "src": "2240:1:0"
                                  }
                                ],
                                "id": 161,
                                "name": "FunctionCall",
                                "src": "2194:48:0"
                              }
                            ],
                            "id": 162,
                            "name": "VariableDeclarationStatement",
                            "src": "2176:66:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 142,
                                      "type": "uint256",
                                      "value": "totalAmount"
                                    },
                                    "id": 163,
                                    "name": "Identifier",
                                    "src": "2281:11:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakedDaiAmount",
                                      "referencedDeclaration": 15,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 42,
                                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 164,
                                            "name": "Identifier",
                                            "src": "2296:12:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 156,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 165,
                                            "name": "Identifier",
                                            "src": "2309:7:0"
                                          }
                                        ],
                                        "id": 166,
                                        "name": "IndexAccess",
                                        "src": "2296:21:0"
                                      }
                                    ],
                                    "id": 167,
                                    "name": "MemberAccess",
                                    "src": "2296:37:0"
                                  }
                                ],
                                "id": 168,
                                "name": "Assignment",
                                "src": "2281:52:0"
                              }
                            ],
                            "id": 169,
                            "name": "ExpressionStatement",
                            "src": "2281:52:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "burn",
                                      "referencedDeclaration": 4947,
                                      "type": "function (address,uint256,uint256) external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 129,
                                          "type": "contract ERC1155MintableBurnable",
                                          "value": "stakingTokens"
                                        },
                                        "id": 170,
                                        "name": "Identifier",
                                        "src": "2364:13:0"
                                      }
                                    ],
                                    "id": 172,
                                    "name": "MemberAccess",
                                    "src": "2364:18:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 121,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 173,
                                    "name": "Identifier",
                                    "src": "2383:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 156,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 174,
                                    "name": "Identifier",
                                    "src": "2392:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 175,
                                    "name": "Literal",
                                    "src": "2401:1:0"
                                  }
                                ],
                                "id": 176,
                                "name": "FunctionCall",
                                "src": "2364:39:0"
                              }
                            ],
                            "id": 177,
                            "name": "ExpressionStatement",
                            "src": "2364:39:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "remove",
                                      "referencedDeclaration": 7817,
                                      "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.UintSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 38,
                                              "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                              "value": "_holderTokens"
                                            },
                                            "id": 178,
                                            "name": "Identifier",
                                            "src": "2417:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 121,
                                              "type": "address",
                                              "value": "_staker"
                                            },
                                            "id": 179,
                                            "name": "Identifier",
                                            "src": "2431:7:0"
                                          }
                                        ],
                                        "id": 180,
                                        "name": "IndexAccess",
                                        "src": "2417:22:0"
                                      }
                                    ],
                                    "id": 181,
                                    "name": "MemberAccess",
                                    "src": "2417:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 156,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 182,
                                    "name": "Identifier",
                                    "src": "2447:7:0"
                                  }
                                ],
                                "id": 183,
                                "name": "FunctionCall",
                                "src": "2417:38:0"
                              }
                            ],
                            "id": 184,
                            "name": "ExpressionStatement",
                            "src": "2417:38:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 185,
                                        "name": "Identifier",
                                        "src": "2476:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 156,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 186,
                                        "name": "Identifier",
                                        "src": "2489:7:0"
                                      }
                                    ],
                                    "id": 187,
                                    "name": "IndexAccess",
                                    "src": "2476:21:0"
                                  }
                                ],
                                "id": 188,
                                "name": "UnaryOperation",
                                "src": "2469:28:0"
                              }
                            ],
                            "id": 189,
                            "name": "ExpressionStatement",
                            "src": "2469:28:0"
                          }
                        ],
                        "id": 190,
                        "name": "Block",
                        "src": "2162:346:0"
                      }
                    ],
                    "id": 191,
                    "name": "ForStatement",
                    "src": "2118:390:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 4906,
                              "type": "function (address,uint256,uint256,bytes memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 129,
                                  "type": "contract ERC1155MintableBurnable",
                                  "value": "stakingTokens"
                                },
                                "id": 192,
                                "name": "Identifier",
                                "src": "2518:13:0"
                              }
                            ],
                            "id": 194,
                            "name": "MemberAccess",
                            "src": "2518:18:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 121,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 195,
                            "name": "Identifier",
                            "src": "2537:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 45,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 196,
                            "name": "Identifier",
                            "src": "2546:17:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 197,
                            "name": "Literal",
                            "src": "2565:1:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 198,
                            "name": "Literal",
                            "src": "2568:2:0"
                          }
                        ],
                        "id": 199,
                        "name": "FunctionCall",
                        "src": "2518:53:0"
                      }
                    ],
                    "id": 200,
                    "name": "ExpressionStatement",
                    "src": "2518:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 42,
                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 201,
                                "name": "Identifier",
                                "src": "2581:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 45,
                                  "type": "uint256",
                                  "value": "_currentNFTMintID"
                                },
                                "id": 202,
                                "name": "Identifier",
                                "src": "2594:17:0"
                              }
                            ],
                            "id": 203,
                            "name": "IndexAccess",
                            "src": "2581:31:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct BMIDAIStaking.StakingInfo memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 18,
                                  "type": "type(struct BMIDAIStaking.StakingInfo storage pointer)",
                                  "value": "StakingInfo"
                                },
                                "id": 204,
                                "name": "Identifier",
                                "src": "2615:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 205,
                                    "name": "Identifier",
                                    "src": "2627:5:0"
                                  }
                                ],
                                "id": 206,
                                "name": "MemberAccess",
                                "src": "2627:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 142,
                                  "type": "uint256",
                                  "value": "totalAmount"
                                },
                                "id": 207,
                                "name": "Identifier",
                                "src": "2644:11:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 125,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 208,
                                "name": "Identifier",
                                "src": "2657:11:0"
                              }
                            ],
                            "id": 209,
                            "name": "FunctionCall",
                            "src": "2615:54:0"
                          }
                        ],
                        "id": 210,
                        "name": "Assignment",
                        "src": "2581:88:0"
                      }
                    ],
                    "id": 211,
                    "name": "ExpressionStatement",
                    "src": "2581:88:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 7797,
                              "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 212,
                                    "name": "Identifier",
                                    "src": "2679:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 121,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 213,
                                    "name": "Identifier",
                                    "src": "2693:7:0"
                                  }
                                ],
                                "id": 214,
                                "name": "IndexAccess",
                                "src": "2679:22:0"
                              }
                            ],
                            "id": 215,
                            "name": "MemberAccess",
                            "src": "2679:26:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 45,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 216,
                            "name": "Identifier",
                            "src": "2706:17:0"
                          }
                        ],
                        "id": 217,
                        "name": "FunctionCall",
                        "src": "2679:45:0"
                      }
                    ],
                    "id": 218,
                    "name": "ExpressionStatement",
                    "src": "2679:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 53,
                              "type": "function (uint256,address,address)",
                              "value": "StakingNFTMinted"
                            },
                            "id": 219,
                            "name": "Identifier",
                            "src": "2740:16:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 45,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 220,
                            "name": "Identifier",
                            "src": "2757:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 221,
                                    "name": "ElementaryTypeName",
                                    "src": "2776:7:0"
                                  }
                                ],
                                "id": 222,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2776:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 125,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 223,
                                "name": "Identifier",
                                "src": "2784:11:0"
                              }
                            ],
                            "id": 224,
                            "name": "FunctionCall",
                            "src": "2776:20:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 121,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 225,
                            "name": "Identifier",
                            "src": "2798:7:0"
                          }
                        ],
                        "id": 226,
                        "name": "FunctionCall",
                        "src": "2740:66:0"
                      }
                    ],
                    "id": 227,
                    "name": "EmitStatement",
                    "src": "2735:71:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 45,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 228,
                            "name": "Identifier",
                            "src": "2817:17:0"
                          }
                        ],
                        "id": 229,
                        "name": "UnaryOperation",
                        "src": "2817:19:0"
                      }
                    ],
                    "id": 230,
                    "name": "ExpressionStatement",
                    "src": "2817:19:0"
                  }
                ],
                "id": 231,
                "name": "Block",
                "src": "1908:935:0"
              }
            ],
            "id": 232,
            "name": "FunctionDefinition",
            "src": "1786:1057:0"
          },
          {
            "attributes": {
              "functionSelector": "81927714",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeDAIx",
              "scope": 571,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 285,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 233,
                        "name": "ElementaryTypeName",
                        "src": "2872:7:0"
                      }
                    ],
                    "id": 234,
                    "name": "VariableDeclaration",
                    "src": "2872:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 285,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 2254,
                          "type": "contract PolicyBook"
                        },
                        "id": 235,
                        "name": "UserDefinedTypeName",
                        "src": "2889:10:0"
                      }
                    ],
                    "id": 236,
                    "name": "VariableDeclaration",
                    "src": "2889:22:0"
                  }
                ],
                "id": 237,
                "name": "ParameterList",
                "src": "2871:41:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 238,
                "name": "ParameterList",
                "src": "2922:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        240
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 284,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 239,
                            "name": "ElementaryTypeName",
                            "src": "2991:4:0"
                          }
                        ],
                        "id": 240,
                        "name": "VariableDeclaration",
                        "src": "2991:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6461,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 241,
                                "name": "Identifier",
                                "src": "3006:8:0"
                              }
                            ],
                            "id": 242,
                            "name": "MemberAccess",
                            "src": "3006:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 243,
                                    "name": "ElementaryTypeName",
                                    "src": "3028:7:0"
                                  }
                                ],
                                "id": 244,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3028:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 236,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 245,
                                "name": "Identifier",
                                "src": "3036:11:0"
                              }
                            ],
                            "id": 246,
                            "name": "FunctionCall",
                            "src": "3028:20:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 247,
                                    "name": "ElementaryTypeName",
                                    "src": "3050:7:0"
                                  }
                                ],
                                "id": 248,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3050:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 249,
                                "name": "Identifier",
                                "src": "3058:18:0"
                              }
                            ],
                            "id": 250,
                            "name": "FunctionCall",
                            "src": "3050:27:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 234,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 251,
                            "name": "Identifier",
                            "src": "3079:7:0"
                          }
                        ],
                        "id": 252,
                        "name": "FunctionCall",
                        "src": "3006:81:0"
                      }
                    ],
                    "id": 253,
                    "name": "VariableDeclarationStatement",
                    "src": "2991:96:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                                  "typeString": "literal_string \"Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 254,
                            "name": "Identifier",
                            "src": "3105:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 240,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 255,
                            "name": "Identifier",
                            "src": "3113:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer DAI tokens\"",
                              "value": "Failed to transfer DAI tokens"
                            },
                            "id": 256,
                            "name": "Literal",
                            "src": "3122:31:0"
                          }
                        ],
                        "id": 257,
                        "name": "FunctionCall",
                        "src": "3105:49:0"
                      }
                    ],
                    "id": 258,
                    "name": "ExpressionStatement",
                    "src": "3105:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 240,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 259,
                            "name": "Identifier",
                            "src": "3214:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 6100,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 236,
                                      "type": "contract PolicyBook",
                                      "value": "_policyBook"
                                    },
                                    "id": 260,
                                    "name": "Identifier",
                                    "src": "3224:11:0"
                                  }
                                ],
                                "id": 261,
                                "name": "MemberAccess",
                                "src": "3224:24:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4979,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 262,
                                    "name": "Identifier",
                                    "src": "3249:10:0"
                                  }
                                ],
                                "id": 263,
                                "name": "FunctionCall",
                                "src": "3249:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BMIDAIStaking_$571",
                                          "typeString": "contract BMIDAIStaking"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 264,
                                        "name": "ElementaryTypeName",
                                        "src": "3263:7:0"
                                      }
                                    ],
                                    "id": 265,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3263:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -28,
                                      "type": "contract BMIDAIStaking",
                                      "value": "this"
                                    },
                                    "id": 266,
                                    "name": "Identifier",
                                    "src": "3271:4:0"
                                  }
                                ],
                                "id": 267,
                                "name": "FunctionCall",
                                "src": "3263:13:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 234,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 268,
                                "name": "Identifier",
                                "src": "3278:7:0"
                              }
                            ],
                            "id": 269,
                            "name": "FunctionCall",
                            "src": "3224:62:0"
                          }
                        ],
                        "id": 270,
                        "name": "Assignment",
                        "src": "3214:72:0"
                      }
                    ],
                    "id": 271,
                    "name": "ExpressionStatement",
                    "src": "3214:72:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                                  "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 272,
                            "name": "Identifier",
                            "src": "3304:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 240,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 273,
                            "name": "Identifier",
                            "src": "3312:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer bmiDAIx tokens\"",
                              "value": "Failed to transfer bmiDAIx tokens"
                            },
                            "id": 274,
                            "name": "Literal",
                            "src": "3321:35:0"
                          }
                        ],
                        "id": 275,
                        "name": "FunctionCall",
                        "src": "3304:53:0"
                      }
                    ],
                    "id": 276,
                    "name": "ExpressionStatement",
                    "src": "3304:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                  "typeString": "contract PolicyBook"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 232,
                              "type": "function (address,uint256,contract PolicyBook)",
                              "value": "_mintNFT"
                            },
                            "id": 277,
                            "name": "Identifier",
                            "src": "3368:8:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4979,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 278,
                                "name": "Identifier",
                                "src": "3377:10:0"
                              }
                            ],
                            "id": 279,
                            "name": "FunctionCall",
                            "src": "3377:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 234,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 280,
                            "name": "Identifier",
                            "src": "3391:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 236,
                              "type": "contract PolicyBook",
                              "value": "_policyBook"
                            },
                            "id": 281,
                            "name": "Identifier",
                            "src": "3400:11:0"
                          }
                        ],
                        "id": 282,
                        "name": "FunctionCall",
                        "src": "3368:44:0"
                      }
                    ],
                    "id": 283,
                    "name": "ExpressionStatement",
                    "src": "3368:44:0"
                  }
                ],
                "id": 284,
                "name": "Block",
                "src": "2922:497:0"
              }
            ],
            "id": 285,
            "name": "FunctionDefinition",
            "src": "2853:566:0"
          },
          {
            "attributes": {
              "functionSelector": "cd30a976",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawBMIProfit",
              "scope": 571,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 339,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 286,
                        "name": "ElementaryTypeName",
                        "src": "3452:7:0"
                      }
                    ],
                    "id": 287,
                    "name": "VariableDeclaration",
                    "src": "3452:15:0"
                  }
                ],
                "id": 288,
                "name": "ParameterList",
                "src": "3451:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 289,
                "name": "ParameterList",
                "src": "3478:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        291
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingTokens",
                          "scope": 338,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract ERC1155MintableBurnable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ERC1155MintableBurnable",
                              "referencedDeclaration": 4968,
                              "type": "contract ERC1155MintableBurnable"
                            },
                            "id": 290,
                            "name": "UserDefinedTypeName",
                            "src": "3488:23:0"
                          }
                        ],
                        "id": 291,
                        "name": "VariableDeclaration",
                        "src": "3488:37:0"
                      },
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract ERC1155MintableBurnable",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakingTokens",
                              "referencedDeclaration": 1505,
                              "type": "function () view external returns (contract ERC1155MintableBurnable)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 17,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 292,
                                        "name": "Identifier",
                                        "src": "3528:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 287,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 293,
                                        "name": "Identifier",
                                        "src": "3541:7:0"
                                      }
                                    ],
                                    "id": 294,
                                    "name": "IndexAccess",
                                    "src": "3528:21:0"
                                  }
                                ],
                                "id": 295,
                                "name": "MemberAccess",
                                "src": "3528:32:0"
                              }
                            ],
                            "id": 296,
                            "name": "MemberAccess",
                            "src": "3528:46:0"
                          }
                        ],
                        "id": 297,
                        "name": "FunctionCall",
                        "src": "3528:48:0"
                      }
                    ],
                    "id": 298,
                    "name": "VariableDeclarationStatement",
                    "src": "3488:88:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                                  "typeString": "literal_string \"Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 299,
                            "name": "Identifier",
                            "src": "3587:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ownerOfNFT",
                                      "referencedDeclaration": 3668,
                                      "type": "function (uint256) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 291,
                                          "type": "contract ERC1155MintableBurnable",
                                          "value": "stakingTokens"
                                        },
                                        "id": 300,
                                        "name": "Identifier",
                                        "src": "3596:13:0"
                                      }
                                    ],
                                    "id": 301,
                                    "name": "MemberAccess",
                                    "src": "3596:24:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 287,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 302,
                                    "name": "Identifier",
                                    "src": "3621:7:0"
                                  }
                                ],
                                "id": 303,
                                "name": "FunctionCall",
                                "src": "3596:33:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4979,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 304,
                                    "name": "Identifier",
                                    "src": "3633:10:0"
                                  }
                                ],
                                "id": 305,
                                "name": "FunctionCall",
                                "src": "3633:12:0"
                              }
                            ],
                            "id": 306,
                            "name": "BinaryOperation",
                            "src": "3596:49:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not an NFT token owner\"",
                              "value": "Not an NFT token owner"
                            },
                            "id": 307,
                            "name": "Literal",
                            "src": "3647:24:0"
                          }
                        ],
                        "id": 308,
                        "name": "FunctionCall",
                        "src": "3587:85:0"
                      }
                    ],
                    "id": 309,
                    "name": "ExpressionStatement",
                    "src": "3587:85:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        311
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 338,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 310,
                            "name": "ElementaryTypeName",
                            "src": "3742:4:0"
                          }
                        ],
                        "id": 311,
                        "name": "VariableDeclaration",
                        "src": "3742:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6461,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 312,
                                "name": "Identifier",
                                "src": "3757:8:0"
                              }
                            ],
                            "id": 313,
                            "name": "MemberAccess",
                            "src": "3757:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 314,
                                    "name": "ElementaryTypeName",
                                    "src": "3779:7:0"
                                  }
                                ],
                                "id": 315,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3779:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 316,
                                "name": "Identifier",
                                "src": "3787:18:0"
                              }
                            ],
                            "id": 317,
                            "name": "FunctionCall",
                            "src": "3779:27:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4979,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 318,
                                "name": "Identifier",
                                "src": "3808:10:0"
                              }
                            ],
                            "id": 319,
                            "name": "FunctionCall",
                            "src": "3808:12:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getProfit",
                                  "referencedDeclaration": 1437,
                                  "type": "function (uint256,uint256) external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 320,
                                    "name": "Identifier",
                                    "src": "3822:18:0"
                                  }
                                ],
                                "id": 321,
                                "name": "MemberAccess",
                                "src": "3822:28:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 322,
                                        "name": "Identifier",
                                        "src": "3851:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 287,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 323,
                                        "name": "Identifier",
                                        "src": "3864:7:0"
                                      }
                                    ],
                                    "id": 324,
                                    "name": "IndexAccess",
                                    "src": "3851:21:0"
                                  }
                                ],
                                "id": 325,
                                "name": "MemberAccess",
                                "src": "3851:38:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 15,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 326,
                                        "name": "Identifier",
                                        "src": "3891:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 287,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 327,
                                        "name": "Identifier",
                                        "src": "3904:7:0"
                                      }
                                    ],
                                    "id": 328,
                                    "name": "IndexAccess",
                                    "src": "3891:21:0"
                                  }
                                ],
                                "id": 329,
                                "name": "MemberAccess",
                                "src": "3891:37:0"
                              }
                            ],
                            "id": 330,
                            "name": "FunctionCall",
                            "src": "3822:107:0"
                          }
                        ],
                        "id": 331,
                        "name": "FunctionCall",
                        "src": "3757:173:0"
                      }
                    ],
                    "id": 332,
                    "name": "VariableDeclarationStatement",
                    "src": "3742:188:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                                  "typeString": "literal_string \"Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 333,
                            "name": "Identifier",
                            "src": "3940:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 311,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 334,
                            "name": "Identifier",
                            "src": "3948:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer BMI tokens\"",
                              "value": "Failed to transfer BMI tokens"
                            },
                            "id": 335,
                            "name": "Literal",
                            "src": "3957:31:0"
                          }
                        ],
                        "id": 336,
                        "name": "FunctionCall",
                        "src": "3940:49:0"
                      }
                    ],
                    "id": 337,
                    "name": "ExpressionStatement",
                    "src": "3940:49:0"
                  }
                ],
                "id": 338,
                "name": "Block",
                "src": "3478:518:0"
              }
            ],
            "id": 339,
            "name": "FunctionDefinition",
            "src": "3425:571:0"
          },
          {
            "attributes": {
              "functionSelector": "a7fa3c7f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFundsWithProfit",
              "scope": 571,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 483,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 340,
                        "name": "ElementaryTypeName",
                        "src": "4035:7:0"
                      }
                    ],
                    "id": 341,
                    "name": "VariableDeclaration",
                    "src": "4035:15:0"
                  }
                ],
                "id": 342,
                "name": "ParameterList",
                "src": "4034:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 343,
                "name": "ParameterList",
                "src": "4061:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                                  "typeString": "literal_string \"Funds are locked for 3 month\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 344,
                            "name": "Identifier",
                            "src": "4071:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 345,
                                    "name": "Identifier",
                                    "src": "4080:5:0"
                                  }
                                ],
                                "id": 346,
                                "name": "MemberAccess",
                                "src": "4080:15:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakingStartTime",
                                      "referencedDeclaration": 13,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 42,
                                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 347,
                                            "name": "Identifier",
                                            "src": "4098:12:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 341,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 348,
                                            "name": "Identifier",
                                            "src": "4111:7:0"
                                          }
                                        ],
                                        "id": 349,
                                        "name": "IndexAccess",
                                        "src": "4098:21:0"
                                      }
                                    ],
                                    "id": 350,
                                    "name": "MemberAccess",
                                    "src": "4098:38:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 26,
                                      "type": "uint256",
                                      "value": "THREE_MONTH"
                                    },
                                    "id": 351,
                                    "name": "Identifier",
                                    "src": "4139:11:0"
                                  }
                                ],
                                "id": 352,
                                "name": "BinaryOperation",
                                "src": "4098:52:0"
                              }
                            ],
                            "id": 353,
                            "name": "BinaryOperation",
                            "src": "4080:70:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "46756e647320617265206c6f636b656420666f722033206d6f6e7468",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Funds are locked for 3 month\"",
                              "value": "Funds are locked for 3 month"
                            },
                            "id": 354,
                            "name": "Literal",
                            "src": "4152:30:0"
                          }
                        ],
                        "id": 355,
                        "name": "FunctionCall",
                        "src": "4071:112:0"
                      }
                    ],
                    "id": 356,
                    "name": "ExpressionStatement",
                    "src": "4071:112:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        358
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingTokens",
                          "scope": 482,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract ERC1155MintableBurnable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ERC1155MintableBurnable",
                              "referencedDeclaration": 4968,
                              "type": "contract ERC1155MintableBurnable"
                            },
                            "id": 357,
                            "name": "UserDefinedTypeName",
                            "src": "4202:23:0"
                          }
                        ],
                        "id": 358,
                        "name": "VariableDeclaration",
                        "src": "4202:37:0"
                      },
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract ERC1155MintableBurnable",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakingTokens",
                              "referencedDeclaration": 1505,
                              "type": "function () view external returns (contract ERC1155MintableBurnable)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 17,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 359,
                                        "name": "Identifier",
                                        "src": "4242:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 341,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 360,
                                        "name": "Identifier",
                                        "src": "4255:7:0"
                                      }
                                    ],
                                    "id": 361,
                                    "name": "IndexAccess",
                                    "src": "4242:21:0"
                                  }
                                ],
                                "id": 362,
                                "name": "MemberAccess",
                                "src": "4242:32:0"
                              }
                            ],
                            "id": 363,
                            "name": "MemberAccess",
                            "src": "4242:46:0"
                          }
                        ],
                        "id": 364,
                        "name": "FunctionCall",
                        "src": "4242:48:0"
                      }
                    ],
                    "id": 365,
                    "name": "VariableDeclarationStatement",
                    "src": "4202:88:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                                  "typeString": "literal_string \"Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 366,
                            "name": "Identifier",
                            "src": "4301:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ownerOfNFT",
                                      "referencedDeclaration": 3668,
                                      "type": "function (uint256) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 358,
                                          "type": "contract ERC1155MintableBurnable",
                                          "value": "stakingTokens"
                                        },
                                        "id": 367,
                                        "name": "Identifier",
                                        "src": "4310:13:0"
                                      }
                                    ],
                                    "id": 368,
                                    "name": "MemberAccess",
                                    "src": "4310:24:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 341,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 369,
                                    "name": "Identifier",
                                    "src": "4335:7:0"
                                  }
                                ],
                                "id": 370,
                                "name": "FunctionCall",
                                "src": "4310:33:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4979,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 371,
                                    "name": "Identifier",
                                    "src": "4347:10:0"
                                  }
                                ],
                                "id": 372,
                                "name": "FunctionCall",
                                "src": "4347:12:0"
                              }
                            ],
                            "id": 373,
                            "name": "BinaryOperation",
                            "src": "4310:49:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not an NFT token owner\"",
                              "value": "Not an NFT token owner"
                            },
                            "id": 374,
                            "name": "Literal",
                            "src": "4361:24:0"
                          }
                        ],
                        "id": 375,
                        "name": "FunctionCall",
                        "src": "4301:85:0"
                      }
                    ],
                    "id": 376,
                    "name": "ExpressionStatement",
                    "src": "4301:85:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        378
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingInfo",
                          "scope": 482,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct BMIDAIStaking.StakingInfo",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "StakingInfo",
                              "referencedDeclaration": 18,
                              "type": "struct BMIDAIStaking.StakingInfo"
                            },
                            "id": 377,
                            "name": "UserDefinedTypeName",
                            "src": "4404:11:0"
                          }
                        ],
                        "id": 378,
                        "name": "VariableDeclaration",
                        "src": "4404:30:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42,
                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 379,
                            "name": "Identifier",
                            "src": "4437:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 341,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 380,
                            "name": "Identifier",
                            "src": "4450:7:0"
                          }
                        ],
                        "id": 381,
                        "name": "IndexAccess",
                        "src": "4437:21:0"
                      }
                    ],
                    "id": 382,
                    "name": "VariableDeclarationStatement",
                    "src": "4404:54:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        384
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 482,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 383,
                            "name": "ElementaryTypeName",
                            "src": "4528:4:0"
                          }
                        ],
                        "id": 384,
                        "name": "VariableDeclaration",
                        "src": "4528:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6461,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 385,
                                "name": "Identifier",
                                "src": "4543:8:0"
                              }
                            ],
                            "id": 386,
                            "name": "MemberAccess",
                            "src": "4543:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 387,
                                    "name": "ElementaryTypeName",
                                    "src": "4565:7:0"
                                  }
                                ],
                                "id": 388,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4565:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 389,
                                "name": "Identifier",
                                "src": "4573:18:0"
                              }
                            ],
                            "id": 390,
                            "name": "FunctionCall",
                            "src": "4565:27:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4979,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 391,
                                "name": "Identifier",
                                "src": "4594:10:0"
                              }
                            ],
                            "id": 392,
                            "name": "FunctionCall",
                            "src": "4594:12:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getProfit",
                                  "referencedDeclaration": 1437,
                                  "type": "function (uint256,uint256) external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 393,
                                    "name": "Identifier",
                                    "src": "4608:18:0"
                                  }
                                ],
                                "id": 394,
                                "name": "MemberAccess",
                                "src": "4608:28:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 395,
                                        "name": "Identifier",
                                        "src": "4637:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 341,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 396,
                                        "name": "Identifier",
                                        "src": "4650:7:0"
                                      }
                                    ],
                                    "id": 397,
                                    "name": "IndexAccess",
                                    "src": "4637:21:0"
                                  }
                                ],
                                "id": 398,
                                "name": "MemberAccess",
                                "src": "4637:38:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 15,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 399,
                                        "name": "Identifier",
                                        "src": "4677:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 341,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 400,
                                        "name": "Identifier",
                                        "src": "4690:7:0"
                                      }
                                    ],
                                    "id": 401,
                                    "name": "IndexAccess",
                                    "src": "4677:21:0"
                                  }
                                ],
                                "id": 402,
                                "name": "MemberAccess",
                                "src": "4677:37:0"
                              }
                            ],
                            "id": 403,
                            "name": "FunctionCall",
                            "src": "4608:107:0"
                          }
                        ],
                        "id": 404,
                        "name": "FunctionCall",
                        "src": "4543:173:0"
                      }
                    ],
                    "id": 405,
                    "name": "VariableDeclarationStatement",
                    "src": "4528:188:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                                  "typeString": "literal_string \"Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 406,
                            "name": "Identifier",
                            "src": "4726:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 407,
                            "name": "Identifier",
                            "src": "4734:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer BMI tokens\"",
                              "value": "Failed to transfer BMI tokens"
                            },
                            "id": 408,
                            "name": "Literal",
                            "src": "4743:31:0"
                          }
                        ],
                        "id": 409,
                        "name": "FunctionCall",
                        "src": "4726:49:0"
                      }
                    ],
                    "id": 410,
                    "name": "ExpressionStatement",
                    "src": "4726:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 411,
                            "name": "Identifier",
                            "src": "4844:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 6461,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 30,
                                      "type": "contract IERC20",
                                      "value": "daiToken"
                                    },
                                    "id": 412,
                                    "name": "Identifier",
                                    "src": "4854:8:0"
                                  }
                                ],
                                "id": 413,
                                "name": "MemberAccess",
                                "src": "4854:21:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1438",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 414,
                                        "name": "ElementaryTypeName",
                                        "src": "4876:7:0"
                                      }
                                    ],
                                    "id": 415,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4876:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 34,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 416,
                                    "name": "Identifier",
                                    "src": "4884:18:0"
                                  }
                                ],
                                "id": 417,
                                "name": "FunctionCall",
                                "src": "4876:27:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                          "typeString": "contract PolicyBook"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 418,
                                        "name": "ElementaryTypeName",
                                        "src": "4905:7:0"
                                      }
                                    ],
                                    "id": 419,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4905:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBook",
                                      "referencedDeclaration": 17,
                                      "type": "contract PolicyBook"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 378,
                                          "type": "struct BMIDAIStaking.StakingInfo memory",
                                          "value": "stakingInfo"
                                        },
                                        "id": 420,
                                        "name": "Identifier",
                                        "src": "4913:11:0"
                                      }
                                    ],
                                    "id": 421,
                                    "name": "MemberAccess",
                                    "src": "4913:22:0"
                                  }
                                ],
                                "id": 422,
                                "name": "FunctionCall",
                                "src": "4905:31:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 15,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 378,
                                      "type": "struct BMIDAIStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 423,
                                    "name": "Identifier",
                                    "src": "4938:11:0"
                                  }
                                ],
                                "id": 424,
                                "name": "MemberAccess",
                                "src": "4938:27:0"
                              }
                            ],
                            "id": 425,
                            "name": "FunctionCall",
                            "src": "4854:112:0"
                          }
                        ],
                        "id": 426,
                        "name": "Assignment",
                        "src": "4844:122:0"
                      }
                    ],
                    "id": 427,
                    "name": "ExpressionStatement",
                    "src": "4844:122:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                                  "typeString": "literal_string \"Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 428,
                            "name": "Identifier",
                            "src": "4976:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 429,
                            "name": "Identifier",
                            "src": "4984:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer DAI tokens\"",
                              "value": "Failed to transfer DAI tokens"
                            },
                            "id": 430,
                            "name": "Literal",
                            "src": "4993:31:0"
                          }
                        ],
                        "id": 431,
                        "name": "FunctionCall",
                        "src": "4976:49:0"
                      }
                    ],
                    "id": 432,
                    "name": "ExpressionStatement",
                    "src": "4976:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 433,
                            "name": "Identifier",
                            "src": "5092:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transfer",
                                  "referencedDeclaration": 6023,
                                  "type": "function (address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBook",
                                      "referencedDeclaration": 17,
                                      "type": "contract PolicyBook"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 378,
                                          "type": "struct BMIDAIStaking.StakingInfo memory",
                                          "value": "stakingInfo"
                                        },
                                        "id": 434,
                                        "name": "Identifier",
                                        "src": "5102:11:0"
                                      }
                                    ],
                                    "id": 435,
                                    "name": "MemberAccess",
                                    "src": "5102:22:0"
                                  }
                                ],
                                "id": 436,
                                "name": "MemberAccess",
                                "src": "5102:31:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4979,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 437,
                                    "name": "Identifier",
                                    "src": "5134:10:0"
                                  }
                                ],
                                "id": 438,
                                "name": "FunctionCall",
                                "src": "5134:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 15,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 378,
                                      "type": "struct BMIDAIStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 439,
                                    "name": "Identifier",
                                    "src": "5148:11:0"
                                  }
                                ],
                                "id": 440,
                                "name": "MemberAccess",
                                "src": "5148:27:0"
                              }
                            ],
                            "id": 441,
                            "name": "FunctionCall",
                            "src": "5102:74:0"
                          }
                        ],
                        "id": 442,
                        "name": "Assignment",
                        "src": "5092:84:0"
                      }
                    ],
                    "id": 443,
                    "name": "ExpressionStatement",
                    "src": "5092:84:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                                  "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 444,
                            "name": "Identifier",
                            "src": "5186:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 384,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 445,
                            "name": "Identifier",
                            "src": "5194:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer bmiDAIx tokens\"",
                              "value": "Failed to transfer bmiDAIx tokens"
                            },
                            "id": 446,
                            "name": "Literal",
                            "src": "5203:35:0"
                          }
                        ],
                        "id": 447,
                        "name": "FunctionCall",
                        "src": "5186:53:0"
                      }
                    ],
                    "id": 448,
                    "name": "ExpressionStatement",
                    "src": "5186:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "burn",
                              "referencedDeclaration": 4947,
                              "type": "function (address,uint256,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "contract ERC1155MintableBurnable",
                                  "value": "stakingTokens"
                                },
                                "id": 449,
                                "name": "Identifier",
                                "src": "5250:13:0"
                              }
                            ],
                            "id": 451,
                            "name": "MemberAccess",
                            "src": "5250:18:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4979,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 452,
                                "name": "Identifier",
                                "src": "5269:10:0"
                              }
                            ],
                            "id": 453,
                            "name": "FunctionCall",
                            "src": "5269:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 341,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 454,
                            "name": "Identifier",
                            "src": "5283:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 455,
                            "name": "Literal",
                            "src": "5292:1:0"
                          }
                        ],
                        "id": 456,
                        "name": "FunctionCall",
                        "src": "5250:44:0"
                      }
                    ],
                    "id": 457,
                    "name": "ExpressionStatement",
                    "src": "5250:44:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "remove",
                              "referencedDeclaration": 7817,
                              "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 458,
                                    "name": "Identifier",
                                    "src": "5304:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4979,
                                          "type": "function () view returns (address payable)",
                                          "value": "_msgSender"
                                        },
                                        "id": 459,
                                        "name": "Identifier",
                                        "src": "5318:10:0"
                                      }
                                    ],
                                    "id": 460,
                                    "name": "FunctionCall",
                                    "src": "5318:12:0"
                                  }
                                ],
                                "id": 461,
                                "name": "IndexAccess",
                                "src": "5304:27:0"
                              }
                            ],
                            "id": 462,
                            "name": "MemberAccess",
                            "src": "5304:34:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 341,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 463,
                            "name": "Identifier",
                            "src": "5339:7:0"
                          }
                        ],
                        "id": 464,
                        "name": "FunctionCall",
                        "src": "5304:43:0"
                      }
                    ],
                    "id": 465,
                    "name": "ExpressionStatement",
                    "src": "5304:43:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 59,
                              "type": "function (uint256,address)",
                              "value": "StakingNFTBurned"
                            },
                            "id": 466,
                            "name": "Identifier",
                            "src": "5363:16:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 341,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 467,
                            "name": "Identifier",
                            "src": "5380:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2254",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 468,
                                    "name": "ElementaryTypeName",
                                    "src": "5389:7:0"
                                  }
                                ],
                                "id": 469,
                                "name": "ElementaryTypeNameExpression",
                                "src": "5389:7:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 17,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 42,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 470,
                                        "name": "Identifier",
                                        "src": "5397:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 341,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 471,
                                        "name": "Identifier",
                                        "src": "5410:7:0"
                                      }
                                    ],
                                    "id": 472,
                                    "name": "IndexAccess",
                                    "src": "5397:21:0"
                                  }
                                ],
                                "id": 473,
                                "name": "MemberAccess",
                                "src": "5397:32:0"
                              }
                            ],
                            "id": 474,
                            "name": "FunctionCall",
                            "src": "5389:41:0"
                          }
                        ],
                        "id": 475,
                        "name": "FunctionCall",
                        "src": "5363:68:0"
                      }
                    ],
                    "id": 476,
                    "name": "EmitStatement",
                    "src": "5358:73:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 42,
                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 477,
                                "name": "Identifier",
                                "src": "5449:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 341,
                                  "type": "uint256",
                                  "value": "tokenID"
                                },
                                "id": 478,
                                "name": "Identifier",
                                "src": "5462:7:0"
                              }
                            ],
                            "id": 479,
                            "name": "IndexAccess",
                            "src": "5449:21:0"
                          }
                        ],
                        "id": 480,
                        "name": "UnaryOperation",
                        "src": "5442:28:0"
                      }
                    ],
                    "id": 481,
                    "name": "ExpressionStatement",
                    "src": "5442:28:0"
                  }
                ],
                "id": 482,
                "name": "Block",
                "src": "4061:1424:0"
              }
            ],
            "id": 483,
            "name": "FunctionDefinition",
            "src": "4002:1483:0"
          },
          {
            "attributes": {
              "functionSelector": "96344eaf",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakingInfoByToken",
              "scope": 571,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 495,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 484,
                        "name": "ElementaryTypeName",
                        "src": "5526:7:0"
                      }
                    ],
                    "id": 485,
                    "name": "VariableDeclaration",
                    "src": "5526:15:0"
                  }
                ],
                "id": 486,
                "name": "ParameterList",
                "src": "5525:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 495,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct BMIDAIStaking.StakingInfo",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "StakingInfo",
                          "referencedDeclaration": 18,
                          "type": "struct BMIDAIStaking.StakingInfo"
                        },
                        "id": 487,
                        "name": "UserDefinedTypeName",
                        "src": "5564:11:0"
                      }
                    ],
                    "id": 488,
                    "name": "VariableDeclaration",
                    "src": "5564:18:0"
                  }
                ],
                "id": 489,
                "name": "ParameterList",
                "src": "5563:20:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 489
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42,
                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 490,
                            "name": "Identifier",
                            "src": "5601:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 485,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 491,
                            "name": "Identifier",
                            "src": "5614:7:0"
                          }
                        ],
                        "id": 492,
                        "name": "IndexAccess",
                        "src": "5601:21:0"
                      }
                    ],
                    "id": 493,
                    "name": "Return",
                    "src": "5594:28:0"
                  }
                ],
                "id": 494,
                "name": "Block",
                "src": "5584:45:0"
              }
            ],
            "id": 495,
            "name": "FunctionDefinition",
            "src": "5498:131:0"
          },
          {
            "attributes": {
              "functionSelector": "12ed9d29",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "howManyStakings",
              "scope": 571,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 519,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 496,
                        "name": "ElementaryTypeName",
                        "src": "5660:7:0"
                      }
                    ],
                    "id": 497,
                    "name": "VariableDeclaration",
                    "src": "5660:13:0"
                  }
                ],
                "id": 498,
                "name": "ParameterList",
                "src": "5659:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 519,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 499,
                        "name": "ElementaryTypeName",
                        "src": "5696:7:0"
                      }
                    ],
                    "id": 500,
                    "name": "VariableDeclaration",
                    "src": "5696:7:0"
                  }
                ],
                "id": 501,
                "name": "ParameterList",
                "src": "5695:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                                  "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 502,
                            "name": "Identifier",
                            "src": "5715:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 497,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 503,
                                "name": "Identifier",
                                "src": "5723:5:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 504,
                                        "name": "ElementaryTypeName",
                                        "src": "5732:7:0"
                                      }
                                    ],
                                    "id": 505,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5732:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 506,
                                    "name": "Literal",
                                    "src": "5740:1:0"
                                  }
                                ],
                                "id": 507,
                                "name": "FunctionCall",
                                "src": "5732:10:0"
                              }
                            ],
                            "id": 508,
                            "name": "BinaryOperation",
                            "src": "5723:19:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC1155: balance query for the zero address\"",
                              "value": "ERC1155: balance query for the zero address"
                            },
                            "id": 509,
                            "name": "Literal",
                            "src": "5744:45:0"
                          }
                        ],
                        "id": 510,
                        "name": "FunctionCall",
                        "src": "5715:75:0"
                      }
                    ],
                    "id": 511,
                    "name": "ExpressionStatement",
                    "src": "5715:75:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 501
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": 7851,
                              "type": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 38,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 512,
                                    "name": "Identifier",
                                    "src": "5808:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 497,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 513,
                                    "name": "Identifier",
                                    "src": "5822:5:0"
                                  }
                                ],
                                "id": 514,
                                "name": "IndexAccess",
                                "src": "5808:20:0"
                              }
                            ],
                            "id": 515,
                            "name": "MemberAccess",
                            "src": "5808:27:0"
                          }
                        ],
                        "id": 516,
                        "name": "FunctionCall",
                        "src": "5808:29:0"
                      }
                    ],
                    "id": 517,
                    "name": "Return",
                    "src": "5801:36:0"
                  }
                ],
                "id": 518,
                "name": "Block",
                "src": "5705:139:0"
              }
            ],
            "id": 519,
            "name": "FunctionDefinition",
            "src": "5635:209:0"
          },
          {
            "attributes": {
              "functionSelector": "69c54086",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getStakingTokensByOwner",
              "scope": 571,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 570,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 520,
                        "name": "ElementaryTypeName",
                        "src": "5883:7:0"
                      }
                    ],
                    "id": 521,
                    "name": "VariableDeclaration",
                    "src": "5883:13:0"
                  }
                ],
                "id": 522,
                "name": "ParameterList",
                "src": "5882:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 570,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 523,
                            "name": "ElementaryTypeName",
                            "src": "5919:7:0"
                          }
                        ],
                        "id": 524,
                        "name": "ArrayTypeName",
                        "src": "5919:9:0"
                      }
                    ],
                    "id": 525,
                    "name": "VariableDeclaration",
                    "src": "5919:16:0"
                  }
                ],
                "id": 526,
                "name": "ParameterList",
                "src": "5918:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        528
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "size",
                          "scope": 569,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 527,
                            "name": "ElementaryTypeName",
                            "src": "5947:7:0"
                          }
                        ],
                        "id": 528,
                        "name": "VariableDeclaration",
                        "src": "5947:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 519,
                              "type": "function (address) view returns (uint256)",
                              "value": "howManyStakings"
                            },
                            "id": 529,
                            "name": "Identifier",
                            "src": "5962:15:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 521,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 530,
                            "name": "Identifier",
                            "src": "5978:5:0"
                          }
                        ],
                        "id": 531,
                        "name": "FunctionCall",
                        "src": "5962:22:0"
                      }
                    ],
                    "id": 532,
                    "name": "VariableDeclarationStatement",
                    "src": "5947:37:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        537
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "tokens",
                          "scope": 569,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 535,
                                "name": "ElementaryTypeName",
                                "src": "6003:7:0"
                              }
                            ],
                            "id": 536,
                            "name": "ArrayTypeName",
                            "src": "6003:9:0"
                          }
                        ],
                        "id": 537,
                        "name": "VariableDeclaration",
                        "src": "6003:23:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 538,
                                    "name": "ElementaryTypeName",
                                    "src": "6033:7:0"
                                  }
                                ],
                                "id": 539,
                                "name": "ArrayTypeName",
                                "src": "6033:9:0"
                              }
                            ],
                            "id": 540,
                            "name": "NewExpression",
                            "src": "6029:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 528,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 541,
                            "name": "Identifier",
                            "src": "6043:4:0"
                          }
                        ],
                        "id": 542,
                        "name": "FunctionCall",
                        "src": "6029:19:0"
                      }
                    ],
                    "id": 543,
                    "name": "VariableDeclarationStatement",
                    "src": "6003:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            545
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 566,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 544,
                                "name": "ElementaryTypeName",
                                "src": "6064:7:0"
                              }
                            ],
                            "id": 545,
                            "name": "VariableDeclaration",
                            "src": "6064:9:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 546,
                            "name": "Literal",
                            "src": "6076:1:0"
                          }
                        ],
                        "id": 547,
                        "name": "VariableDeclarationStatement",
                        "src": "6064:13:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 545,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 548,
                            "name": "Identifier",
                            "src": "6079:1:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 528,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 549,
                            "name": "Identifier",
                            "src": "6083:4:0"
                          }
                        ],
                        "id": 550,
                        "name": "BinaryOperation",
                        "src": "6079:8:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 545,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 551,
                                "name": "Identifier",
                                "src": "6089:1:0"
                              }
                            ],
                            "id": 552,
                            "name": "UnaryOperation",
                            "src": "6089:3:0"
                          }
                        ],
                        "id": 553,
                        "name": "ExpressionStatement",
                        "src": "6089:3:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 537,
                                          "type": "uint256[] memory",
                                          "value": "tokens"
                                        },
                                        "id": 554,
                                        "name": "Identifier",
                                        "src": "6116:6:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 545,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 555,
                                        "name": "Identifier",
                                        "src": "6123:1:0"
                                      }
                                    ],
                                    "id": 556,
                                    "name": "IndexAccess",
                                    "src": "6116:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "at",
                                          "referencedDeclaration": 7871,
                                          "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct EnumerableSet.UintSet storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 38,
                                                  "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                                  "value": "_holderTokens"
                                                },
                                                "id": 557,
                                                "name": "Identifier",
                                                "src": "6128:13:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 521,
                                                  "type": "address",
                                                  "value": "owner"
                                                },
                                                "id": 558,
                                                "name": "Identifier",
                                                "src": "6142:5:0"
                                              }
                                            ],
                                            "id": 559,
                                            "name": "IndexAccess",
                                            "src": "6128:20:0"
                                          }
                                        ],
                                        "id": 560,
                                        "name": "MemberAccess",
                                        "src": "6128:23:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 545,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 561,
                                        "name": "Identifier",
                                        "src": "6152:1:0"
                                      }
                                    ],
                                    "id": 562,
                                    "name": "FunctionCall",
                                    "src": "6128:26:0"
                                  }
                                ],
                                "id": 563,
                                "name": "Assignment",
                                "src": "6116:38:0"
                              }
                            ],
                            "id": 564,
                            "name": "ExpressionStatement",
                            "src": "6116:38:0"
                          }
                        ],
                        "id": 565,
                        "name": "Block",
                        "src": "6102:63:0"
                      }
                    ],
                    "id": 566,
                    "name": "ForStatement",
                    "src": "6059:106:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 526
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 537,
                          "type": "uint256[] memory",
                          "value": "tokens"
                        },
                        "id": 567,
                        "name": "Identifier",
                        "src": "6182:6:0"
                      }
                    ],
                    "id": 568,
                    "name": "Return",
                    "src": "6175:13:0"
                  }
                ],
                "id": 569,
                "name": "Block",
                "src": "5937:268:0"
              }
            ],
            "id": 570,
            "name": "FunctionDefinition",
            "src": "5850:355:0"
          }
        ],
        "id": 571,
        "name": "ContractDefinition",
        "src": "387:5820:0"
      }
    ],
    "id": 572,
    "name": "SourceUnit",
    "src": "32:6176:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-25T18:13:51.792Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}