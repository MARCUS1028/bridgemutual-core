{
  "contractName": "BMIDAIStaking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "StakingBMIProfitWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "StakingFundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "policyBookAddress",
          "type": "address"
        }
      ],
      "name": "StakingNFTBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "policyBookAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "StakingNFTMinted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defiYieldGenerator",
      "outputs": [
        {
          "internalType": "contract DefiYieldGenerator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makeDefiYieldGeneratorApproveStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "contract PolicyBook",
          "name": "_policyBook",
          "type": "address"
        }
      ],
      "name": "stakeDAIx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawBMIProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsWithProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "stakingInfoByToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedDaiAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract PolicyBook",
              "name": "policyBook",
              "type": "address"
            }
          ],
          "internalType": "struct BMIDAIStaking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "howManyStakings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getStakingTokensByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"StakingBMIProfitWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"StakingFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"}],\"name\":\"StakingNFTBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"StakingNFTMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defiYieldGenerator\",\"outputs\":[{\"internalType\":\"contract DefiYieldGenerator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getStakingTokensByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"howManyStakings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeDefiYieldGeneratorApproveStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"_policyBook\",\"type\":\"address\"}],\"name\":\"stakeDAIx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"stakingInfoByToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedDaiAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"policyBook\",\"type\":\"address\"}],\"internalType\":\"struct BMIDAIStaking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawBMIProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsWithProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_currentNFTMintID\":{\"details\":\"cru\\u0441ial to start from 2\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol\":\"BMIDAIStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol\":{\"keccak256\":\"0x489d2e0b3e68ca3bceae0d0ef61a4c42549c4370bbaaa97754c0825a53471e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34ab775a9735cc9368d4e54f5179edce32e61a03c4daa1bed6133c8020c0147a\",\"dweb:/ipfs/QmPxTkgWeiT7hSm2UxfBvaxRMd6hjpicg9rBumtvUBbSny\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0xf099b29ee740de399ef095c4c85d7ac1caa5723dbf47805fa3ee46401fc2ae99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f7fe997f7ce94e17934a67f1fdba12310ffb06e0d9ed84f427d82bb4e173132\",\"dweb:/ipfs/QmVuqRJJHA8x3zFzE7682aNj6v4meLEo8ejioZ99CQBUEX\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0xa82b1b4f5c6468d858737781f44dd500e7b1cbc438e84ce3cdca030fce400894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e2094711f35b28fa8aecd337fe220f6404202c7cde650f64f65e1090af6ee2b\",\"dweb:/ipfs/Qma3cZuo46L6efZzocwqHphBAZUCgFA7iNbUNfqsAJgiQB\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol\":{\"keccak256\":\"0x00c317a75dc5908196958dc6575b9eeefd62cc2fcacc13987aa9c499739f9ef1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26f55c51df9195ffcd48cece61abcf1eb61b9aab58f8d13a6c3e80da3c53f2c\",\"dweb:/ipfs/QmYkxtsHyDMnr7NHPWH9Damo4XwsSGNAqqq2QRjU1ntGZE\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x51398e09dd5e93c7ad6e805d4959b495117a94d99ffe2a228484d833c6553df8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a19ef2f50feb5633095b2981b61814e7264c2e51b3376f325ba2a1986a6d8f\",\"dweb:/ipfs/QmVt7H1UykV5Fu5oaYmUeFRNhuQyPoMePCKPr9nrDLhTmV\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x5dffaaf6e0ece56b03c76eb5d57e758485fc2cca0c46913a2ee2135a5c518493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2aca8141f40390bbd21022d61fac04651cb3ff91dc7702c2654d36d79b188c\",\"dweb:/ipfs/Qmf6xXSP2yasVTD9RaG1rgnY85bPCAtNnBsXxzA1bvHgJa\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155.sol\":{\"keccak256\":\"0x95cf7569e70022fb598cf440334dd492f7b1c0048400306a2c128ae5136cc28c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52b021b3a4bb1740877f591b319304b4c4d829f7c3537c59c3369aa96bbacda5\",\"dweb:/ipfs/QmTu6MLFWBWWfWygJqy8mDcAsvhLRRarQJTdtjkwDCyysi\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155NFTMintableBurnable.sol\":{\"keccak256\":\"0x21efbfe81e8ade04c327be3d28ab7724c67d721ec7c105208521cf3d03b4508f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1174ce958d147a9f4fb0deea73a84769ded2f684a2689d39d55e72e05170696c\",\"dweb:/ipfs/QmUGWuQcPnqgCCnryt8zHTQTR9DaYCfycX8DTgirKYrkJF\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x6080604052600260075534801561001557600080fd5b50600061002061006f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610073565b3390565b612225806100826000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806396344eaf11610097578063d0a43afd11610066578063d0a43afd146101d3578063d77379f1146101e6578063d98d0c7e146101ee578063f2fde38b146101f6576100f5565b806396344eaf14610185578063a7fa3c7f146101a5578063be22f546146101b8578063cd30a976146101c0576100f5565b8063727cfca2116100d3578063727cfca21461014d5780638192771414610155578063843fe5f0146101685780638da5cb5b1461017d576100f5565b806312ed9d29146100fa57806369c5408614610123578063715018a614610143575b600080fd5b61010d610108366004611bc5565b610209565b60405161011a91906120f7565b60405180910390f35b610136610131366004611bc5565b610261565b60405161011a9190611dd3565b61014b61030a565b005b61014b6103d6565b61014b610163366004611d02565b61052a565b6101706106ae565b60405161011a9190611d31565b6101706106bd565b610198610193366004611cd2565b6106cc565b60405161011a91906120cd565b61014b6101b3366004611cd2565b610741565b610170610d54565b61014b6101ce366004611cd2565b610d63565b61014b6101e1366004611bc5565b611018565b61017061149c565b6101706114ab565b61014b610204366004611bc5565b6114ba565b60006001600160a01b03821661023a5760405162461bcd60e51b815260040161023190612013565b60405180910390fd5b6001600160a01b038216600090815260056020526040902061025b906115dc565b92915050565b6060600061026e83610209565b905060608167ffffffffffffffff8111801561028957600080fd5b506040519080825280602002602001820160405280156102b3578160200160208202803683370190505b50905060005b82811015610302576001600160a01b03851660009081526005602052604090206102e390826115e7565b8282815181106102ef57fe5b60209081029190910101526001016102b9565b509392505050565b6103126115fa565b6000546001600160a01b03908116911614610374576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6103de6115fa565b6000546001600160a01b03908116911614610440576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60048054604080517f5d3581cd00000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692635d3581cd92828201926000929082900301818387803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b505060048054604080517fa2ac7ac600000000000000000000000000000000000000000000000000000000815290516001600160a01b03909216945063a2ac7ac69350808301926000929182900301818387803b15801561051057600080fd5b505af1158015610524573d6000803e3d6000fd5b50505050565b600254600480546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000936001600160a01b03908116936323b872dd9361057e93889390911691899101611d45565b602060405180830381600087803b15801561059857600080fd5b505af11580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d09190611bfd565b9050806105ef5760405162461bcd60e51b815260040161023190611f22565b816001600160a01b03166323b872dd6106066115fa565b30866040518463ffffffff1660e01b815260040161062693929190611d45565b602060405180830381600087803b15801561064057600080fd5b505af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190611bfd565b9050806106975760405162461bcd60e51b815260040161023190611e68565b6106a96106a26115fa565b84846115fe565b505050565b6004546001600160a01b031681565b6000546001600160a01b031690565b6106d4611b9b565b6000828152600660205260409020546106ff5760405162461bcd60e51b815260040161023190611ec5565b50600090815260066020908152604091829020825160608101845281548152600182015492810192909252600201546001600160a01b03169181019190915290565b60008181526006602052604090205461076c5760405162461bcd60e51b815260040161023190611ec5565b6000818152600660205260409020546276a70001421161079e5760405162461bcd60e51b815260040161023190611f7f565b6107a66115fa565b600082815260066020526040908190206002015490517f2d8a746e0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169290911690632d8a746e906108039085906004016120f7565b60206040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190611be1565b6001600160a01b0316146108795760405162461bcd60e51b815260040161023190611fdc565b610881611b9b565b5060008181526006602081815260408084208151606081018352815480825260018301548286018190526002909301546001600160a01b0390811683860152600480548a8a529790965293517ff6b15fe60000000000000000000000000000000000000000000000000000000081529196959093169363f6b15fe69361090b939092909101612136565b602060405180830381600087803b15801561092557600080fd5b505af1158015610939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095d9190611cea565b6003546004549192506000916001600160a01b03918216916323b872dd91166109846115fa565b856040518463ffffffff1660e01b81526004016109a393929190611d45565b602060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f59190611bfd565b905080610a145760405162461bcd60e51b815260040161023190612070565b7f6f3bc53c439831dcd2b75923de17810a3f59ac0293eac66284a2012f2d586d778483610a3f6115fa565b604051610a4e93929190612144565b60405180910390a160025460048054604080870151602088015191517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03958616956323b872dd95610aae95909116939101611d45565b602060405180830381600087803b158015610ac857600080fd5b505af1158015610adc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b009190611bfd565b905080610b1f5760405162461bcd60e51b815260040161023190611f22565b82604001516001600160a01b031663a9059cbb610b3a6115fa565b85602001516040518363ffffffff1660e01b8152600401610b5c929190611d69565b602060405180830381600087803b158015610b7657600080fd5b505af1158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190611bfd565b905080610bcd5760405162461bcd60e51b815260040161023190611e68565b7f465fbde1e28a129f34bb008f5721b0f847ab2411fac9026fb49cdfc2b94b7f1384610bf76115fa565b604051610c05929190612100565b60405180910390a16000848152600660205260409020600201546001600160a01b0316631cc509fd610c356115fa565b8660016040518463ffffffff1660e01b8152600401610c5693929190611d82565b600060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b50505050610cb78460056000610c986115fa565b6001600160a01b031681526020810191909152604001600020906119d5565b50600084815260066020526040908190206002015490517f86ef8fcef996b7ddf091f470e8f3ab619ca323d0aa2329e3d0f7c00d0d7f8c0191610d059187916001600160a01b031690612100565b60405180910390a15050506000908152600660205260408120818155600181019190915560020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6002546001600160a01b031681565b600081815260066020526040902054610d8e5760405162461bcd60e51b815260040161023190611ec5565b610d966115fa565b600082815260066020526040908190206002015490517f2d8a746e0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169290911690632d8a746e90610df39085906004016120f7565b60206040518083038186803b158015610e0b57600080fd5b505afa158015610e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e439190611be1565b6001600160a01b031614610e695760405162461bcd60e51b815260040161023190611fdc565b60048054600083815260066020526040808220805460019091015491517ff6b15fe600000000000000000000000000000000000000000000000000000000815292946001600160a01b039094169363f6b15fe693610ec8939101612136565b602060405180830381600087803b158015610ee257600080fd5b505af1158015610ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1a9190611cea565b6003546004549192506000916001600160a01b03918216916323b872dd9116610f416115fa565b856040518463ffffffff1660e01b8152600401610f6093929190611d45565b602060405180830381600087803b158015610f7a57600080fd5b505af1158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb29190611bfd565b905080610fd15760405162461bcd60e51b815260040161023190612070565b7f6f3bc53c439831dcd2b75923de17810a3f59ac0293eac66284a2012f2d586d778383610ffc6115fa565b60405161100b93929190612144565b60405180910390a1505050565b6110206115fa565b6000546001600160a01b03908116911614611082576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561110f57600080fd5b505afa158015611123573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526111699190810190611c1d565b6040518263ffffffff1660e01b81526004016111859190611e17565b60206040518083038186803b15801561119d57600080fd5b505afa1580156111b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d59190611be1565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b03166335817773826001600160a01b03166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561124357600080fd5b505afa158015611257573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261129d9190810190611c1d565b6040518263ffffffff1660e01b81526004016112b99190611e17565b60206040518083038186803b1580156112d157600080fd5b505afa1580156112e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113099190611be1565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600154604080517fc0ed452f00000000000000000000000000000000000000000000000000000000815290519190921691633581777391839163c0ed452f916004808301926000929190829003018186803b15801561139b57600080fd5b505afa1580156113af573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113f59190810190611c1d565b6040518263ffffffff1660e01b81526004016114119190611e17565b60206040518083038186803b15801561142957600080fd5b505afa15801561143d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114619190611be1565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b6003546001600160a01b031681565b6001546001600160a01b031681565b6114c26115fa565b6000546001600160a01b03908116911614611524576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166115695760405162461bcd60e51b81526004018080602001828103825260268152602001806121ca6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600061025b826119e1565b60006115f383836119e5565b9392505050565b3390565b6040517ff5b100ea0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0383169063f5b100ea90611646908790600401611d31565b60206040518083038186803b15801561165e57600080fd5b505afa158015611672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116969190611cea565b90508260005b82811015611879576040517f1dcb46f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b03861690631dcb46f6906116ee908a908690600401611d69565b60206040518083038186803b15801561170657600080fd5b505afa15801561171a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173e9190611cea565b6000818152600660205260409081902060019081015491517f1cc509fd00000000000000000000000000000000000000000000000000000000815295909101949192506001600160a01b03871691631cc509fd916117a2918b918691600401611d82565b600060405180830381600087803b1580156117bc57600080fd5b505af11580156117d0573d6000803e3d6000fd5b505050507f86ef8fcef996b7ddf091f470e8f3ab619ca323d0aa2329e3d0f7c00d0d7f8c018186604051611805929190612100565b60405180910390a16001600160a01b038716600090815260056020526040902061182f90826119d5565b50600090815260066020526040812081815560018082019290925560020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690550161169c565b506007546040517f4b6411810000000000000000000000000000000000000000000000000000000081526001600160a01b03851691634b641181916118c5918991600190600401611da3565b600060405180830381600087803b1580156118df57600080fd5b505af11580156118f3573d6000803e3d6000fd5b50506040805160608101825242815260208082018681526001600160a01b038981168486019081526007805460009081526006865287812096518755935160018701559051600290950180547fffffffffffffffffffffffff000000000000000000000000000000000000000016958316959095179094559254928b16815260059091529190912061198793509150611a49565b507f36200d06a5134b8842f6a7aee4c9a2a2e4834bf38af1eb011719654f03449d1660075484876040516119bd93929190612117565b60405180910390a15050600780546001019055505050565b60006115f38383611a55565b5490565b81546000908210611a275760405162461bcd60e51b81526004018080602001828103825260228152602001806121a86022913960400191505060405180910390fd5b826000018281548110611a3657fe5b9060005260206000200154905092915050565b60006115f38383611b39565b60008181526001830160205260408120548015611b2f5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083019190810190600090879083908110611aa657fe5b9060005260206000200154905080876000018481548110611ac357fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080611af357fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061025b565b600091505061025b565b6000611b458383611b83565b611b7b5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561025b565b50600061025b565b60009081526001919091016020526040902054151590565b6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b600060208284031215611bd6578081fd5b81356115f38161218f565b600060208284031215611bf2578081fd5b81516115f38161218f565b600060208284031215611c0e578081fd5b815180151581146115f3578182fd5b600060208284031215611c2e578081fd5b815167ffffffffffffffff80821115611c45578283fd5b818401915084601f830112611c58578283fd5b815181811115611c6457fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715611ca057fe5b604052818152838201602001871015611cb7578485fd5b611cc8826020830160208701612163565b9695505050505050565b600060208284031215611ce3578081fd5b5035919050565b600060208284031215611cfb578081fd5b5051919050565b60008060408385031215611d14578081fd5b823591506020830135611d268161218f565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039390931683526020830191909152604082015260806060820181905260009082015260a00190565b6020808252825182820181905260009190848201906040850190845b81811015611e0b57835183529284019291840191600101611def565b50909695505050505050565b6000602082528251806020840152611e36816040850160208701612163565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602a908201527f5374616b696e673a204661696c656420746f207472616e7366657220626d694460408201527f41497820746f6b656e7300000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f5374616b696e673a2074686973207374616b696e6720746f6b656e20646f657360408201527f6e27742065786973740000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f5374616b696e673a204661696c656420746f207472616e73666572204441492060408201527f746f6b656e730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f5374616b696e673a2046756e647320617265206c6f636b656420666f7220332060408201527f6d6f6e7468000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f5374616b696e673a204e6f7420616e204e465420746f6b656e206f776e657200604082015260600190565b6020808252602b908201527f5374616b696e673a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f5374616b696e673a204661696c656420746f207472616e7366657220424d492060408201527f746f6b656e730000000000000000000000000000000000000000000000000000606082015260800190565b81518152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b918252602082015260400190565b92835260208301919091526001600160a01b0316604082015260600190565b60005b8381101561217e578181015183820152602001612166565b838111156105245750506000910152565b6001600160a01b03811681146121a457600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220e7a431823823be660e78edc6314ccfdd05421b5c4bc9ea0d0a3ed794d693183064736f6c63430007040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12883:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:37",
                "type": ""
              }
            ],
            "src": "14:259:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:37",
                "type": ""
              }
            ],
            "src": "278:263:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:37"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:37",
                "type": ""
              }
            ],
            "src": "546:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "954:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1025:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1038:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1029:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1097:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1070:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1070:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1122:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1324",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:37",
                "type": ""
              }
            ],
            "src": "848:285:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:868:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1275:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1284:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1292:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1277:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1277:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1250:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1259:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1271:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:30:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1324:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:16:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1314:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1349:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1359:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1353:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1389:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1386:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1464:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1449:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:22:37"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1443:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1528:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1498:2:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1502:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:13:37"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1509:7:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1480:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1554:23:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1574:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1568:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:9:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1558:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1604:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1606:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1606:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1592:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1600:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1626:23:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1640:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:9:37"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1630:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1658:130:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1684:6:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1708:4:37",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:17:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1715:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1692:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1692:90:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:103:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:112:37"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1662:10:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1849:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1806:10:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1818:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1803:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1826:10:37"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1823:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1800:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:46:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1797:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1880:10:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1869:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1869:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1907:6:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:22:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1972:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1981:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1989:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1974:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1974:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1974:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1945:2:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1949:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1941:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1941:15:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1958:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1937:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1963:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1934:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:37:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1931:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2033:2:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2037:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:11:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2046:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2054:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:15:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2059:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2007:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2075:16:37",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2085:6:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1195:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1206:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1218:6:37",
                "type": ""
              }
            ],
            "src": "1138:959:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2172:120:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2218:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2227:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2235:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2220:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2220:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2220:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2193:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2202:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2189:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2189:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2214:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2185:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2276:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2263:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2263:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2253:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2138:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2149:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2161:6:37",
                "type": ""
              }
            ],
            "src": "2102:190:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2378:113:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2424:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2433:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2441:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2426:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2426:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2426:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2399:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2395:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2395:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2420:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2391:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2388:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2475:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2469:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:16:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2459:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2344:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2355:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2367:6:37",
                "type": ""
              }
            ],
            "src": "2297:194:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2602:240:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2648:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2657:6:37"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2665:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2650:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2650:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2650:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2623:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2632:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2619:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2619:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2644:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2615:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2615:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2612:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2683:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2706:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2693:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2725:45:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2755:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2766:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2751:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2751:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2738:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:32:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2729:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2806:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2779:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2821:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2831:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2821:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_PolicyBook_$2252",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2560:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2571:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2583:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2591:6:37",
                "type": ""
              }
            ],
            "src": "2496:346:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2948:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2958:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2970:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2966:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2958:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3000:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3015:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3023:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3011:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3011:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2993:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2917:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2928:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2939:4:37",
                "type": ""
              }
            ],
            "src": "2847:226:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3243:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3253:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3265:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3261:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3261:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3253:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3288:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3298:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3292:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3356:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3371:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3379:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3367:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3367:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3349:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3349:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3403:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3399:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3399:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3423:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3431:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3419:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3419:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3455:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3466:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3451:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3451:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3471:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3444:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3444:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3444:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3196:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3207:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3215:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3223:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3234:4:37",
                "type": ""
              }
            ],
            "src": "3078:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3626:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3636:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3648:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3659:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3644:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3636:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3678:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3693:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3701:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3689:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3689:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3671:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3671:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3671:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3765:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3776:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3761:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3761:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3781:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3754:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3754:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3587:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3598:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3606:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3617:4:37",
                "type": ""
              }
            ],
            "src": "3489:305:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3972:211:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3982:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3994:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4005:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3990:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3982:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4024:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4039:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4047:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4035:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4035:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4017:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4017:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4017:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4111:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4122:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4107:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4107:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4127:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4100:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4100:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4100:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4154:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4165:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4150:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4170:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4143:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4143:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3925:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3936:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3944:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3952:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3963:4:37",
                "type": ""
              }
            ],
            "src": "3799:384:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4353:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4363:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4375:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4371:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4371:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4363:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4398:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4408:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4402:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4466:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4481:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4489:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4477:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4477:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4459:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4459:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4459:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4513:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4524:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4509:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4509:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4533:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4541:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4529:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4529:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4502:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4502:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4502:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4565:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4576:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4561:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4581:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4554:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4554:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4554:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4306:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4317:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4325:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4333:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4344:4:37",
                "type": ""
              }
            ],
            "src": "4188:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4728:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4738:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4750:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4761:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4746:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4746:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4738:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4780:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4795:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4803:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4791:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4791:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4773:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4773:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4773:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4867:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4878:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4863:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4883:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4856:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4856:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4856:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4689:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4700:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4708:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4719:4:37",
                "type": ""
              }
            ],
            "src": "4599:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:211:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5076:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5088:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5099:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5084:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5084:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5076:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5118:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5133:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5141:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5129:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5129:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5205:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5216:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5201:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5201:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5221:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5194:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5194:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5194:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5248:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5259:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5244:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5244:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5264:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5237:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5237:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5019:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5030:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5038:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5046:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5057:4:37",
                "type": ""
              }
            ],
            "src": "4901:376:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5547:294:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5564:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5579:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5587:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5575:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5575:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5557:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5557:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5651:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5662:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5647:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5647:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5667:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5640:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5640:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5640:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5694:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5705:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5710:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5683:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5683:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5683:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5737:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5748:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5733:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5733:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5753:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5726:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5726:31:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5777:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5788:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5773:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5773:19:37"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5794:4:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5766:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5766:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5766:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5808:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5820:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5831:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5816:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5816:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5808:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5500:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5511:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5519:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5527:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5538:4:37",
                "type": ""
              }
            ],
            "src": "5282:559:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5997:484:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6007:12:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6017:2:37",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6011:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6028:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6046:9:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6057:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6042:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:18:37"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6032:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6076:9:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6087:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6069:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6069:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6099:17:37",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6110:6:37"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6103:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6125:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6145:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6139:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6139:13:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6129:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6168:6:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6176:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6161:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6161:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6161:22:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6192:25:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6203:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6214:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6199:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6199:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6192:3:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6226:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6244:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6252:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6240:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6240:15:37"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6230:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6264:13:37",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "6273:4:37"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6268:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6335:120:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6356:3:37"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6367:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6361:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6361:13:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6349:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6349:26:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6349:26:37"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6388:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6399:3:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6404:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6395:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6395:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6388:3:37"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6420:25:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6434:6:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6442:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6430:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6430:15:37"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6420:6:37"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6297:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6300:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6294:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6294:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6308:18:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6310:14:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6319:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6322:1:37",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6315:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6315:9:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6310:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6290:3:37",
                    "statements": []
                  },
                  "src": "6286:169:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6464:11:37",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6472:3:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6464:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5966:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5977:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5988:4:37",
                "type": ""
              }
            ],
            "src": "5846:635:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6613:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6623:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6635:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6631:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6623:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6665:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6680:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6688:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6676:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6676:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6658:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1324__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6582:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6593:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6604:4:37",
                "type": ""
              }
            ],
            "src": "6486:252:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6871:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6881:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6893:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6904:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6889:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6881:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6923:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6938:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6946:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6934:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6934:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6916:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6916:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6916:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DefiYieldGenerator_$1457__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6840:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6851:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6862:4:37",
                "type": ""
              }
            ],
            "src": "6743:253:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7117:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7127:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7139:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7150:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7135:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7135:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7127:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7169:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7184:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7192:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7180:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7162:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7162:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7162:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$6897__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7086:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7097:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7108:4:37",
                "type": ""
              }
            ],
            "src": "7001:241:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7368:321:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7385:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7396:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7378:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7378:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7378:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7408:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7428:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7422:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7422:13:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7412:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7455:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7466:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7451:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7451:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7471:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7444:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7444:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7444:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7513:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7521:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7509:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7509:15:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7530:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7541:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7526:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7526:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7546:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7487:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7487:66:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7487:66:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7562:121:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7578:9:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7597:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7605:2:37",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7593:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7593:15:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7610:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7589:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7589:88:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7574:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7574:104:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7680:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7570:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7570:113:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7562:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7337:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7348:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7359:4:37",
                "type": ""
              }
            ],
            "src": "7247:442:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7868:232:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7885:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7896:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7878:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7878:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7919:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7930:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7915:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7915:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7935:2:37",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7908:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7908:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7958:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7969:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7954:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7954:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7974:34:37",
                        "type": "",
                        "value": "Staking: Failed to transfer bmiD"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7947:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7947:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7947:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8029:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8040:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8025:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8025:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8045:12:37",
                        "type": "",
                        "value": "AIx tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8018:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8018:40:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8018:40:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8067:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8079:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8090:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8075:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8075:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8067:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7845:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7859:4:37",
                "type": ""
              }
            ],
            "src": "7694:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8279:231:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8296:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8307:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8289:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8289:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8289:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8330:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8341:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8326:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8326:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8346:2:37",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8319:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8319:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8319:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8369:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8380:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8365:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8365:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8385:34:37",
                        "type": "",
                        "value": "Staking: this staking token does"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8358:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8358:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8358:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8440:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8451:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8436:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8436:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8456:11:37",
                        "type": "",
                        "value": "n't exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8429:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8429:39:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8429:39:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8477:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8489:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8500:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8485:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8485:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8477:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8256:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8270:4:37",
                "type": ""
              }
            ],
            "src": "8105:405:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8689:228:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8706:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8717:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8699:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8699:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8699:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8740:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8751:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8736:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8736:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8756:2:37",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8729:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8729:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8729:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8779:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8790:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8775:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8775:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8795:34:37",
                        "type": "",
                        "value": "Staking: Failed to transfer DAI "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8768:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8768:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8768:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8850:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8861:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8846:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8846:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8866:8:37",
                        "type": "",
                        "value": "tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8839:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8839:36:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8839:36:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8884:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8896:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8907:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8892:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8892:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8884:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8666:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8680:4:37",
                "type": ""
              }
            ],
            "src": "8515:402:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9096:227:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9113:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9124:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9106:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9106:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9106:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9147:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9158:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9143:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9143:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9163:2:37",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9136:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9136:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9136:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9186:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9197:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9182:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9182:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9202:34:37",
                        "type": "",
                        "value": "Staking: Funds are locked for 3 "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9175:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9175:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9175:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9257:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9268:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9253:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9253:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9273:7:37",
                        "type": "",
                        "value": "month"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9246:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9246:35:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9246:35:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9290:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9302:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9313:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9298:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9298:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9290:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0250c92a54dc2c75fa70b1b07a1eaa017e185c111ff26f0804fd3319b065dcc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9073:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9087:4:37",
                "type": ""
              }
            ],
            "src": "8922:401:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9502:181:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9519:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9530:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9512:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9512:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9512:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9553:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9564:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9549:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9549:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9569:2:37",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9542:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9542:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9542:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9592:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9603:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9588:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9588:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9608:33:37",
                        "type": "",
                        "value": "Staking: Not an NFT token owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9581:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9581:61:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9581:61:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9651:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9663:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9674:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9659:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9659:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9651:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9479:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9493:4:37",
                "type": ""
              }
            ],
            "src": "9328:355:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9862:233:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9879:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9890:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9872:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9872:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9872:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9913:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9924:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9909:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9909:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9929:2:37",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9902:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9902:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9902:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9952:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9963:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9948:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9948:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9968:34:37",
                        "type": "",
                        "value": "Staking: balance query for the z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9941:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9941:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9941:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10023:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10034:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10019:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10019:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10039:13:37",
                        "type": "",
                        "value": "ero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10012:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10012:41:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10012:41:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10062:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10074:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10085:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10070:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10070:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10062:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e2f8f63fc4c52ae3bb24c42c2db314ae940b4e1dd755d4f3e4432e5a707fcf2c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9839:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9853:4:37",
                "type": ""
              }
            ],
            "src": "9688:407:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10274:228:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10291:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10302:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10284:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10284:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10284:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10325:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10336:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10321:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10321:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10341:2:37",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10314:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10314:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10314:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10364:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10375:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10360:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10360:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10380:34:37",
                        "type": "",
                        "value": "Staking: Failed to transfer BMI "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10353:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10353:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10353:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10435:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10446:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10431:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10431:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10451:8:37",
                        "type": "",
                        "value": "tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10424:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10424:36:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10424:36:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10469:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10481:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10492:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10477:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10477:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10469:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10251:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10265:4:37",
                "type": ""
              }
            ],
            "src": "10100:402:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10662:258:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10672:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10684:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10695:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10680:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10680:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10672:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10714:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10731:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10725:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10725:13:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10707:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10707:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10707:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10759:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10770:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10755:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10755:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10787:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10795:4:37",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10783:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10783:17:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10777:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10777:24:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10748:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10748:54:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10748:54:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10822:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10833:4:37",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10818:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10818:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10854:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10862:4:37",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10850:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10850:17:37"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "10844:5:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10844:24:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10870:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10840:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10840:73:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10811:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10811:103:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10811:103:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$16_memory_ptr__to_t_struct$_StakingInfo_$16_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10631:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10642:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10653:4:37",
                "type": ""
              }
            ],
            "src": "10507:413:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11026:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11036:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11048:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11059:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11044:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11044:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11036:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11078:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11089:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11071:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11071:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11071:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10995:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11006:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11017:4:37",
                "type": ""
              }
            ],
            "src": "10925:177:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11244:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11254:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11266:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11277:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11262:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11262:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11254:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11296:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11307:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11289:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11289:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11289:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11334:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11345:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11330:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11330:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11354:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11362:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11350:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11350:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11323:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11323:83:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11323:83:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11205:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11216:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11224:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11235:4:37",
                "type": ""
              }
            ],
            "src": "11107:305:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11582:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11592:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11604:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11615:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11600:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11600:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11592:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11634:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11645:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11627:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11627:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11627:25:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11661:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11671:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11665:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11733:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11744:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11729:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11729:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11753:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11761:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11749:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11749:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11722:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11722:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11722:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11785:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11796:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11781:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11781:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "11805:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11813:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11801:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11801:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11774:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11774:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11774:43:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11535:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11546:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11554:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11562:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11573:4:37",
                "type": ""
              }
            ],
            "src": "11417:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11957:119:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11967:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11979:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11990:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11975:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11975:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11967:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12009:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12020:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12002:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12002:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12002:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12047:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12058:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12043:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12043:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12063:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12036:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12036:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12036:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11918:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11929:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11937:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11948:4:37",
                "type": ""
              }
            ],
            "src": "11828:248:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12246:211:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12256:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12268:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12279:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12264:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12264:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12256:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12298:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12309:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12291:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12291:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12291:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12336:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12347:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12332:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12332:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12352:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12325:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12325:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12325:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12379:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12390:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12375:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12375:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "12399:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12407:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12395:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12395:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12368:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12368:83:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12368:83:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12199:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12210:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12218:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12226:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12237:4:37",
                "type": ""
              }
            ],
            "src": "12081:376:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12515:205:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12525:10:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12534:1:37",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12529:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12594:63:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12619:3:37"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12624:1:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12615:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12615:11:37"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "12638:3:37"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12643:1:37"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12634:3:37"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12634:11:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12628:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12628:18:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12608:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12608:39:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12608:39:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12555:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12558:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12552:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12552:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12566:19:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12568:15:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12577:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12580:2:37",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12573:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12573:10:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "12568:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12548:3:37",
                    "statements": []
                  },
                  "src": "12544:113:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12683:31:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12696:3:37"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12701:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12692:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12692:16:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12710:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12685:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12685:27:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12685:27:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "12672:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12675:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12669:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12669:13:37"
                  },
                  "nodeType": "YulIf",
                  "src": "12666:2:37"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "12493:3:37",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "12498:3:37",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12503:6:37",
                "type": ""
              }
            ],
            "src": "12462:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12772:109:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12859:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12868:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12871:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12861:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12861:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12861:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12795:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12806:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12813:42:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12802:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12802:54:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12792:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12792:65:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12785:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12785:73:37"
                  },
                  "nodeType": "YulIf",
                  "src": "12782:2:37"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12761:5:37",
                "type": ""
              }
            ],
            "src": "12725:156:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1324(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_2)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_contract$_PolicyBook_$2252(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), tail)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1324__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_DefiYieldGenerator_$1457__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$6897__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Staking: Failed to transfer bmiD\")\n        mstore(add(headStart, 96), \"AIx tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Staking: this staking token does\")\n        mstore(add(headStart, 96), \"n't exist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Staking: Failed to transfer DAI \")\n        mstore(add(headStart, 96), \"tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b0250c92a54dc2c75fa70b1b07a1eaa017e185c111ff26f0804fd3319b065dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Staking: Funds are locked for 3 \")\n        mstore(add(headStart, 96), \"month\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Staking: Not an NFT token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e2f8f63fc4c52ae3bb24c42c2db314ae940b4e1dd755d4f3e4432e5a707fcf2c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Staking: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Staking: Failed to transfer BMI \")\n        mstore(add(headStart, 96), \"tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$16_memory_ptr__to_t_struct$_StakingInfo_$16_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_payable__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "300:6766:0:-:0;;;965:1;929:37;;300:6766;;;;;;;;;-1:-1:-1;882:17:24;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:24;-1:-1:-1;;;;;924:18:24;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:24;957:43;;924:6;;957:43;848:159;300:6766:0;;598:104:22;685:10;598:104;:::o;300:6766:0:-;;;;;;;",
  "deployedSourceMap": "300:6766:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6494:209;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6709:355;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1706:145:24:-;;;:::i;:::-;;1716:224:0;;;:::i;3002:584::-;;;;;;:::i;:::-;;:::i;688:44::-;;;:::i;:::-;;;;;;;:::i;1083:77:24:-;;;:::i;6249:239:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4381:1855::-;;;;;;:::i;:::-;;:::i;632:22::-;;;:::i;3592:783::-;;;;;;:::i;:::-;;:::i;1255:455::-;;;;;;:::i;:::-;;:::i;660:22::-;;;:::i;583:42::-;;;:::i;2000:240:24:-;;;;;;:::i;:::-;;:::i;6494:209:0:-;6555:7;-1:-1:-1;;;;;6582:19:0;;6574:75;;;;-1:-1:-1;;;6574:75:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;6667:20:0;;;;;;:13;:20;;;;;:29;;:27;:29::i;:::-;6660:36;6494:209;-1:-1:-1;;6494:209:0:o;6709:355::-;6778:16;6806:12;6821:22;6837:5;6821:15;:22::i;:::-;6806:37;;6862:23;6902:4;6888:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6888:19:0;;6862:45;;6923:9;6918:106;6942:4;6938:1;:8;6918:106;;;-1:-1:-1;;;;;6987:20:0;;;;;;:13;:20;;;;;:26;;7011:1;6987:23;:26::i;:::-;6975:6;6982:1;6975:9;;;;;;;;;;;;;;;;;:38;6948:3;;6918:106;;;-1:-1:-1;7041:6:0;6709:355;-1:-1:-1;;;6709:355:0:o;1706:145:24:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:24;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;;::::1;::::0;;1706:145::o;1716:224:0:-;1297:12:24;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:18:0::1;::::0;;:60:::1;::::0;;;;;;;-1:-1:-1;;;;;1803:18:0;;::::1;::::0;:58:::1;::::0;:60;;::::1;::::0;:18:::1;::::0;:60;;;;;;:18;;:60;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1873:18:0::1;::::0;;:60:::1;::::0;;;;;;;-1:-1:-1;;;;;1873:18:0;;::::1;::::0;-1:-1:-1;1873:58:0::1;::::0;-1:-1:-1;1873:60:0;;::::1;::::0;:18:::1;::::0;:60;;;;;;:18;;:60;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1716:224::o:0;3002:584::-;3155:8;;3207:18;;;3155:81;;;;;3140:12;;-1:-1:-1;;;;;3155:8:0;;;;:21;;:81;;3185:11;;3207:18;;;;3228:7;;3155:81;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3140:96;;3262:7;3254:58;;;;-1:-1:-1;;;3254:58:0;;;;;;;:::i;:::-;3382:11;-1:-1:-1;;;;;3382:24:0;;3407:12;:10;:12::i;:::-;3429:4;3436:7;3382:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3372:72;;3470:7;3462:62;;;;-1:-1:-1;;;3462:62:0;;;;;;;:::i;:::-;3535:44;3544:12;:10;:12::i;:::-;3558:7;3567:11;3535:8;:44::i;:::-;3002:584;;;:::o;688:44::-;;;-1:-1:-1;;;;;688:44:0;;:::o;1083:77:24:-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:24;1083:77;:::o;6249:239:0:-;6315:18;;:::i;:::-;6353:21;;;;:12;:21;;;;;:38;6345:97;;;;-1:-1:-1;;;6345:97:0;;;;;;;:::i;:::-;-1:-1:-1;6460:21:0;;;;:12;:21;;;;;;;;;6453:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6453:28:0;;;;;;;;;6249:239::o;4381:1855::-;4458:21;;;;:12;:21;;;;;:38;4450:97;;;;-1:-1:-1;;;4450:97:0;;;;;;;:::i;:::-;4584:21;;;;:12;:21;;;;;:38;561:11;4584:52;4566:15;:70;4557:134;;;;-1:-1:-1;;;4557:134:0;;;;;;;:::i;:::-;4774:12;:10;:12::i;:::-;4718:21;;;;:12;:21;;;;;;;:32;;;:52;;;;;-1:-1:-1;;;;;4718:68:0;;;;:32;;;;:43;;:52;;:21;;:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4718:68:0;;4709:126;;;;-1:-1:-1;;;4709:126:0;;;;;;;:::i;:::-;4853:30;;:::i;:::-;-1:-1:-1;4886:21:0;;;;:12;:21;;;;;;;;4853:54;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4853:54:0;;;;;;;4935:18;;;4977:21;;;;;;;4935:141;;;;;4853:54;;4886:21;4935:18;;;;:28;;:141;;4853:54;;;;4935:141;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5165:8;;5195:18;;4918:158;;-1:-1:-1;5150:12:0;;-1:-1:-1;;;;;5165:8:0;;;;:21;;5195:18;5216:12;:10;:12::i;:::-;5230:6;5165:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:87;;5255:7;5247:58;;;;-1:-1:-1;;;5247:58:0;;;;;;;:::i;:::-;5321:56;5347:7;5356:6;5364:12;:10;:12::i;:::-;5321:56;;;;;;;;:::i;:::-;;;;;;;;5456:8;;5499:18;;;5541:22;;;;;5579:27;;;;5456:160;;;;;-1:-1:-1;;;;;5456:8:0;;;;:21;;:160;;5499:18;;;;5579:27;5456:160;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5446:170;;5634:7;5626:58;;;;-1:-1:-1;;;5626:58:0;;;;;;;:::i;:::-;5761:11;:22;;;-1:-1:-1;;;;;5761:31:0;;5793:12;:10;:12::i;:::-;5807:11;:27;;;5761:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5751:84;;5853:7;5845:62;;;;-1:-1:-1;;;5845:62:0;;;;;;;:::i;:::-;5923:44;5945:7;5954:12;:10;:12::i;:::-;5923:44;;;;;;;:::i;:::-;;;;;;;;5978:21;;;;:12;:21;;;;;:32;;;-1:-1:-1;;;;;5978:32:0;:40;6019:12;:10;:12::i;:::-;6033:7;6042:1;5978:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6055:43;6090:7;6055:13;:27;6069:12;:10;:12::i;:::-;-1:-1:-1;;;;;6055:27:0;;;;;;;;;;;;-1:-1:-1;6055:27:0;;:34;:43::i;:::-;-1:-1:-1;6148:21:0;;;;:12;:21;;;;;;;:32;;;6114:68;;;;;;6131:7;;-1:-1:-1;;;;;6148:32:0;;6114:68;:::i;:::-;;;;;;;;-1:-1:-1;;;6200:21:0;;;;:12;:21;;;;;6193:28;;;;;;;;;;;;;;;;;;4381:1855::o;632:22::-;;;-1:-1:-1;;;;;632:22:0;;:::o;3592:783::-;3663:21;;;;:12;:21;;;;;:38;3655:110;;;;-1:-1:-1;;;3655:110:0;;;;;;;:::i;:::-;3840:12;:10;:12::i;:::-;3784:21;;;;:12;:21;;;;;;;:32;;;:52;;;;;-1:-1:-1;;;;;3784:68:0;;;;:32;;;;:43;;:52;;:21;;:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3784:68:0;;3775:126;;;;-1:-1:-1;;;3775:126:0;;;;;;;:::i;:::-;3929:18;;;3912:14;3971:21;;;:12;:21;;;;;;:38;;3929:18;4024:37;;;;3929:142;;;;;3912:14;;-1:-1:-1;;;;;3929:18:0;;;;:28;;:142;;4024:37;3929:142;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4156:8;;4186:18;;3912:159;;-1:-1:-1;4141:12:0;;-1:-1:-1;;;;;4156:8:0;;;;:21;;4186:18;4207:12;:10;:12::i;:::-;4221:6;4156:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4141:87;;4246:7;4238:58;;;;-1:-1:-1;;;4238:58:0;;;;;;;:::i;:::-;4312:56;4338:7;4347:6;4355:12;:10;:12::i;:::-;4312:56;;;;;;;;:::i;:::-;;;;;;;;3592:783;;;:::o;1255:455::-;1297:12:24;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1344:17:0::1;:38:::0;;;::::1;-1:-1:-1::0;;;;;1344:38:0;::::1;::::0;;::::1;::::0;;;1442:31:::1;::::0;;;;;;;1411:30:::1;::::0;1344:38;;1442:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;1442:31:0;;;;;;;;1344:38;1442:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1411:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1393:8;;:82;;;;;-1:-1:-1::0;;;;;1393:82:0::1;;;;;-1:-1:-1::0;;;;;1393:82:0::1;;;;;;1503:18;-1:-1:-1::0;;;;;1503:30:0::1;;1534:18;-1:-1:-1::0;;;;;1534:29:0::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1503:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1485:8;:82:::0;;;::::1;-1:-1:-1::0;;;;;1485:82:0;;::::1;;::::0;;-1:-1:-1;1630:17:0;1660:41:::1;::::0;;;;;;;1630:17;;;::::1;::::0;:29:::1;::::0;:17;;1660:39:::1;::::0;:41:::1;::::0;;::::1;::::0;-1:-1:-1;;1660:41:0;;;;;;;1630:17;1660:41;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1630:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:18;:126:::0;;;::::1;-1:-1:-1::0;;;;;1577:126:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1255:455:0:o;660:22::-;;;-1:-1:-1;;;;;660:22:0;;:::o;583:42::-;;;-1:-1:-1;;;;;583:42:0;;:::o;2000:240:24:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:24;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:24::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:24;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;;::::1;-1:-1:-1::0;;;;;2216:17:24;;;::::1;::::0;;;::::1;::::0;;2000:240::o;8770:112:36:-;8830:7;8856:19;8864:3;8856:7;:19::i;9214:135::-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;:::-;9311:31;9214:135;-1:-1:-1;;;9214:135:36:o;598:104:22:-;685:10;598:104;:::o;1946:1046:0:-;2115:33;;;;;2091:21;;-1:-1:-1;;;;;2115:24:0;;;;;:33;;2140:7;;2115:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2091:57;-1:-1:-1;2180:7:0;2158:19;2198:457;2222:13;2218:1;:17;2198:457;;;2274:46;;;;;2256:15;;-1:-1:-1;;;;;2274:34:0;;;;;:46;;2309:7;;2318:1;;2274:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2374:21;;;;:12;:21;;;;;;;:37;;;;;2442:40;;;;;2359:52;;;;;2256:64;;-1:-1:-1;;;;;;2442:19:0;;;;;:40;;2462:7;;2256:64;;2442:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2502:47;2519:7;2536:11;2502:47;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;2564:22:0;;;;;;:13;:22;;;;;:38;;2594:7;2564:29;:38::i;:::-;-1:-1:-1;2623:21:0;;;;:12;:21;;;;;2616:28;;;;;;;;;;;;;;;;;;;2237:3;2198:457;;;-1:-1:-1;2694:17:0;;2665:54;;;;;-1:-1:-1;;;;;2665:19:0;;;;;:54;;2685:7;;2713:1;;2665:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2764:54:0;;;;;;;;2776:15;2764:54;;;;;;;;;-1:-1:-1;;;;;2764:54:0;;;;;;;;;2743:17;;;-1:-1:-1;2730:31:0;;;:12;:31;;;;;:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2855:17;;2828:22;;;;;:13;:22;;;;;;;:45;;-1:-1:-1;2828:22:0;-1:-1:-1;2828:26:0;:45::i;:::-;;2889:66;2906:17;;2933:11;2947:7;2889:66;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;2966:17:0;:19;;;;;;-1:-1:-1;;;1946:1046:0:o;8329:135:36:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;4013:107::-;4095:18;;4013:107::o;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:36;;;;-1:-1:-1;;;4538:73:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;2830:14;;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:36;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:36;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:259:37:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;1138:959;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1330:9;1324:16;1359:18;1400:2;1392:6;1389:14;1386:2;;;1421:6;1413;1406:22;1386:2;1464:6;1453:9;1449:22;1439:32;;1509:7;1502:4;1498:2;1494:13;1490:27;1480:2;;1536:6;1528;1521:22;1480:2;1574;1568:9;1600:2;1592:6;1589:14;1586:2;;;1606:9;1586:2;1646;1640:9;1785:2;1715:66;1708:4;1700:6;1696:17;1692:90;1684:6;1680:103;1676:112;1838:6;1826:10;1823:22;1818:2;1806:10;1803:18;1800:46;1797:2;;;1849:9;1797:2;1876;1869:22;1900;;;1941:15;;;1958:2;1937:24;1934:37;-1:-1:-1;1931:2:37;;;1989:6;1981;1974:22;1931:2;2007:59;2059:6;2054:2;2046:6;2042:15;2037:2;2033;2029:11;2007:59;:::i;:::-;2085:6;1229:868;-1:-1:-1;;;;;;1229:868:37:o;2102:190::-;;2214:2;2202:9;2193:7;2189:23;2185:32;2182:2;;;2235:6;2227;2220:22;2182:2;-1:-1:-1;2263:23:37;;2172:120;-1:-1:-1;2172:120:37:o;2297:194::-;;2420:2;2408:9;2399:7;2395:23;2391:32;2388:2;;;2441:6;2433;2426:22;2388:2;-1:-1:-1;2469:16:37;;2378:113;-1:-1:-1;2378:113:37:o;2496:346::-;;;2644:2;2632:9;2623:7;2619:23;2615:32;2612:2;;;2665:6;2657;2650:22;2612:2;2706:9;2693:23;2683:33;;2766:2;2755:9;2751:18;2738:32;2779:33;2806:5;2779:33;:::i;:::-;2831:5;2821:15;;;2602:240;;;;;:::o;2847:226::-;-1:-1:-1;;;;;3011:55:37;;;;2993:74;;2981:2;2966:18;;2948:125::o;3078:406::-;-1:-1:-1;;;;;3367:15:37;;;3349:34;;3419:15;;;;3414:2;3399:18;;3392:43;3466:2;3451:18;;3444:34;;;;3276:2;3261:18;;3243:241::o;3489:305::-;-1:-1:-1;;;;;3689:55:37;;;;3671:74;;3776:2;3761:18;;3754:34;3659:2;3644:18;;3626:168::o;3799:384::-;-1:-1:-1;;;;;4035:55:37;;;;4017:74;;4122:2;4107:18;;4100:34;;;;4165:2;4150:18;;4143:34;4005:2;3990:18;;3972:211::o;5282:559::-;-1:-1:-1;;;;;5575:55:37;;;;5557:74;;5662:2;5647:18;;5640:34;;;;5705:2;5690:18;;5683:34;5753:3;5748:2;5733:18;;5726:31;;;5282:559;5773:19;;;5766:33;5831:3;5816:19;;5547:294::o;5846:635::-;6017:2;6069:21;;;6139:13;;6042:18;;;6161:22;;;5846:635;;6017:2;6240:15;;;;6214:2;6199:18;;;5846:635;6286:169;6300:6;6297:1;6294:13;6286:169;;;6361:13;;6349:26;;6430:15;;;;6395:12;;;;6322:1;6315:9;6286:169;;;-1:-1:-1;6472:3:37;;5997:484;-1:-1:-1;;;;;;5997:484:37:o;7247:442::-;;7396:2;7385:9;7378:21;7428:6;7422:13;7471:6;7466:2;7455:9;7451:18;7444:34;7487:66;7546:6;7541:2;7530:9;7526:18;7521:2;7513:6;7509:15;7487:66;:::i;:::-;7605:2;7593:15;7610:66;7589:88;7574:104;;;;7680:2;7570:113;;7368:321;-1:-1:-1;;7368:321:37:o;7694:406::-;7896:2;7878:21;;;7935:2;7915:18;;;7908:30;7974:34;7969:2;7954:18;;7947:62;8045:12;8040:2;8025:18;;8018:40;8090:3;8075:19;;7868:232::o;8105:405::-;8307:2;8289:21;;;8346:2;8326:18;;;8319:30;8385:34;8380:2;8365:18;;8358:62;8456:11;8451:2;8436:18;;8429:39;8500:3;8485:19;;8279:231::o;8515:402::-;8717:2;8699:21;;;8756:2;8736:18;;;8729:30;8795:34;8790:2;8775:18;;8768:62;8866:8;8861:2;8846:18;;8839:36;8907:3;8892:19;;8689:228::o;8922:401::-;9124:2;9106:21;;;9163:2;9143:18;;;9136:30;9202:34;9197:2;9182:18;;9175:62;9273:7;9268:2;9253:18;;9246:35;9313:3;9298:19;;9096:227::o;9328:355::-;9530:2;9512:21;;;9569:2;9549:18;;;9542:30;9608:33;9603:2;9588:18;;9581:61;9674:2;9659:18;;9502:181::o;9688:407::-;9890:2;9872:21;;;9929:2;9909:18;;;9902:30;9968:34;9963:2;9948:18;;9941:62;10039:13;10034:2;10019:18;;10012:41;10085:3;10070:19;;9862:233::o;10100:402::-;10302:2;10284:21;;;10341:2;10321:18;;;10314:30;10380:34;10375:2;10360:18;;10353:62;10451:8;10446:2;10431:18;;10424:36;10492:3;10477:19;;10274:228::o;10507:413::-;10725:13;;10707:32;;10795:4;10783:17;;;10777:24;10755:20;;;10748:54;10862:4;10850:17;;;10844:24;-1:-1:-1;;;;;10840:73:37;10818:20;;;10811:103;;;;10695:2;10680:18;;10662:258::o;10925:177::-;11071:25;;;11059:2;11044:18;;11026:76::o;11107:305::-;11289:25;;;-1:-1:-1;;;;;11350:55:37;11345:2;11330:18;;11323:83;11277:2;11262:18;;11244:168::o;11417:406::-;11627:25;;;-1:-1:-1;;;;;11749:15:37;;;11744:2;11729:18;;11722:43;11801:15;11796:2;11781:18;;11774:43;11615:2;11600:18;;11582:241::o;11828:248::-;12002:25;;;12058:2;12043:18;;12036:34;11990:2;11975:18;;11957:119::o;12081:376::-;12291:25;;;12347:2;12332:18;;12325:34;;;;-1:-1:-1;;;;;12395:55:37;12390:2;12375:18;;12368:83;12279:2;12264:18;;12246:211::o;12462:258::-;12534:1;12544:113;12558:6;12555:1;12552:13;12544:113;;;12634:11;;;12628:18;12615:11;;;12608:39;12580:2;12573:10;12544:113;;;12675:6;12672:1;12669:13;12666:2;;;-1:-1:-1;;12710:1:37;12692:16;;12685:27;12515:205::o;12725:156::-;-1:-1:-1;;;;;12806:5:37;12802:54;12795:5;12792:65;12782:2;;12871:1;12868;12861:12;12782:2;12772:109;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./PolicyBook.sol\";\nimport \"./ContractsRegistry.sol\";\nimport \"./DefiYieldGenerator.sol\";\n\ncontract BMIDAIStaking is Ownable {\n    struct StakingInfo {\n        uint256 stakingStartTime;\n        uint256 stakedDaiAmount;\n        PolicyBook policyBook;\n    }\n\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    uint256 constant private THREE_MONTH = 3 * 30 days;\n    \n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    DefiYieldGenerator public defiYieldGenerator;\n    \n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n    mapping(uint256 => StakingInfo) private _stakersPool; // NFT => INFO\n    \n    /// @dev cruсial to start from 2\n    uint256 private _currentNFTMintID = 2; \n\n    event StakingNFTMinted(uint256 id, address policyBookAddress, address to);\n    event StakingNFTBurned(uint256 id, address policyBookAddress);\n    event StakingBMIProfitWithdrawn(uint256 id, uint256 amount, address to);\n    event StakingFundsWithdrawn(uint256 id, address to);\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n\n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        defiYieldGenerator = \n            DefiYieldGenerator(contractsRegistry.getContract(contractsRegistry.getYieldGeneratorName()));\n    }\n\n    function makeDefiYieldGeneratorApproveStakingWithdrowal() external onlyOwner {\n        defiYieldGenerator.approveAllDAITokensForStakingWithdrowal();\n        defiYieldGenerator.approveAllBMITokensForStakingWithdrowal();\n    }\n\n    function _mintNFT(\n        address _staker,        \n        uint256 _amount,\n        PolicyBook _policyBook\n    ) private {             \n        uint256 stakerBalance = _policyBook.balanceOfNFT(_staker);\n        uint256 totalAmount = _amount;\n\n        for (uint256 i = 0; i < stakerBalance; i++) {\n            uint256 tokenID = _policyBook.tokenOfOwnerByIndexNFT(_staker, i);            \n            \n            totalAmount += _stakersPool[tokenID].stakedDaiAmount;\n                \n            _policyBook.burnNFT(_staker, tokenID, 1);\n\n            emit StakingNFTBurned(tokenID, address(_policyBook));\n\n            _holderTokens[_staker].remove(tokenID);\n            delete _stakersPool[tokenID];\n        }\n\n        _policyBook.mintNFT(_staker, _currentNFTMintID, 1, \"\");\n\n        _stakersPool[_currentNFTMintID] = StakingInfo(block.timestamp, totalAmount, _policyBook);\n        _holderTokens[_staker].add(_currentNFTMintID);\n\n        emit StakingNFTMinted(_currentNFTMintID, address(_policyBook), _staker);\n\n        _currentNFTMintID++;\n    }    \n\n    function stakeDAIx(uint256 _amount, PolicyBook _policyBook) external {\n        // transfer DAI from PolicyBook to yield generator\n        bool success = daiToken.transferFrom(address(_policyBook), address(defiYieldGenerator), _amount);        \n        require(success, \"Staking: Failed to transfer DAI tokens\");\n\n        // transfer bmiDAIx from user to staking\n        success = _policyBook.transferFrom(_msgSender(), address(this), _amount);        \n        require(success, \"Staking: Failed to transfer bmiDAIx tokens\");\n\n        _mintNFT(_msgSender(), _amount, _policyBook);\n    }\n\n    function withdrawBMIProfit(uint256 tokenID) external {\n        require(_stakersPool[tokenID].stakingStartTime != 0, \n            \"Staking: this staking token doesn't exist\");\n        require (_stakersPool[tokenID].policyBook.ownerOfNFT(tokenID) == _msgSender(), \n            \"Staking: Not an NFT token owner\");\n\n        uint256 profit = defiYieldGenerator.getProfit(\n            _stakersPool[tokenID].stakingStartTime, \n            _stakersPool[tokenID].stakedDaiAmount\n        );\n\n        // transfer bmi profit from YieldGenerator to user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), profit);\n        require(success, \"Staking: Failed to transfer BMI tokens\");\n\n        emit StakingBMIProfitWithdrawn(tokenID, profit, _msgSender());\n    }\n\n    function withdrawFundsWithProfit(uint256 tokenID) external {\n        require(_stakersPool[tokenID].stakingStartTime != 0, \"Staking: this staking token doesn't exist\");\n        require (block.timestamp > _stakersPool[tokenID].stakingStartTime + THREE_MONTH, \n            \"Staking: Funds are locked for 3 month\");        \n        require (_stakersPool[tokenID].policyBook.ownerOfNFT(tokenID) == _msgSender(), \n            \"Staking: Not an NFT token owner\");\n       \n        StakingInfo memory stakingInfo = _stakersPool[tokenID];\n\n        uint256 profit = defiYieldGenerator.getProfit(\n            _stakersPool[tokenID].stakingStartTime,\n            _stakersPool[tokenID].stakedDaiAmount\n        );\n\n        // transfer bmi profit from YieldGenerator to the user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), profit);\n        require(success, \"Staking: Failed to transfer BMI tokens\");\n\n        emit StakingBMIProfitWithdrawn(tokenID, profit, _msgSender());\n\n        // transfer DAI from YieldGenerator to PolicyBook\n        success = daiToken.transferFrom(\n            address(defiYieldGenerator), \n            address(stakingInfo.policyBook), \n            stakingInfo.stakedDaiAmount\n        );\n        require(success, \"Staking: Failed to transfer DAI tokens\");   \n\n        // transfer bmiDAIx from staking to the user\n        success = stakingInfo.policyBook.transfer(_msgSender(), stakingInfo.stakedDaiAmount);\n        require(success, \"Staking: Failed to transfer bmiDAIx tokens\");\n\n        emit StakingFundsWithdrawn(tokenID, _msgSender());\n\n        _stakersPool[tokenID].policyBook.burnNFT(_msgSender(), tokenID, 1);\n\n        _holderTokens[_msgSender()].remove(tokenID);\n\n        emit StakingNFTBurned(tokenID, address(_stakersPool[tokenID].policyBook));\n\n        delete _stakersPool[tokenID];        \n    }       \n\n    function stakingInfoByToken(uint256 tokenID) public view returns (StakingInfo memory) {\n        require(_stakersPool[tokenID].stakingStartTime != 0, \"Staking: this staking token doesn't exist\");\n\n        return _stakersPool[tokenID];\n    }\n\n    function howManyStakings(address owner) public view returns (uint256) {\n        require(owner != address(0), \"Staking: balance query for the zero address\");\n\n        return _holderTokens[owner].length();\n    }\n\n    function getStakingTokensByOwner(address owner) public view returns (uint256[] memory) {\n        uint256 size = howManyStakings(owner);\n        \n        uint256[] memory tokens = new uint256[](size);\n\n        for (uint256 i = 0; i < size; i++)\n        {\n            tokens[i] = _holderTokens[owner].at(i);\n        }\n\n        return tokens;          \n    }\n}\n",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        5706
      ],
      "Address": [
        7354
      ],
      "BMIDAIStaking": [
        635
      ],
      "Context": [
        5423
      ],
      "ContractsRegistry": [
        1324
      ],
      "DefiYieldGenerator": [
        1457
      ],
      "ERC1155": [
        5339
      ],
      "ERC1155NFTMintableBurnable": [
        5400
      ],
      "ERC165": [
        5872
      ],
      "EnumerableMap": [
        7809
      ],
      "EnumerableSet": [
        8289
      ],
      "IERC1155": [
        6275
      ],
      "IERC1155Receiver": [
        6316
      ],
      "IERC165": [
        5884
      ],
      "IERC20": [
        6897
      ],
      "IPolicyBook": [
        3051
      ],
      "IPolicyBookFabric": [
        3100
      ],
      "Math": [
        5957
      ],
      "Ownable": [
        5815
      ],
      "PolicyBook": [
        2252
      ],
      "SafeMath": [
        6153
      ]
    },
    "id": 636,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 636,
        "sourceUnit": 8290,
        "src": "91:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 636,
        "sourceUnit": 5816,
        "src": "149:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "./PolicyBook.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 636,
        "sourceUnit": 2253,
        "src": "203:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 636,
        "sourceUnit": 1325,
        "src": "230:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
        "file": "./DefiYieldGenerator.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 636,
        "sourceUnit": 1458,
        "src": "264:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5815,
              "src": "326:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5815",
                "typeString": "contract Ownable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "326:7:0"
          }
        ],
        "contractDependencies": [
          5423,
          5815
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 635,
        "linearizedBaseContracts": [
          635,
          5815,
          5423
        ],
        "name": "BMIDAIStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BMIDAIStaking.StakingInfo",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "stakingStartTime",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "369:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "369:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "stakedDaiAmount",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "403:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "policyBook",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "436:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PolicyBook_$2252",
                  "typeString": "contract PolicyBook"
                },
                "typeName": {
                  "id": 14,
                  "name": "PolicyBook",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2252,
                  "src": "436:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2252",
                    "typeString": "contract PolicyBook"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 635,
            "src": "340:124:0",
            "visibility": "public"
          },
          {
            "id": 19,
            "libraryName": {
              "id": 17,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8289,
              "src": "476:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$8289",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "470:46:0",
            "typeName": {
              "id": 18,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8194,
              "src": "494:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$8194_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "constant": true,
            "id": 24,
            "mutability": "constant",
            "name": "THREE_MONTH",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "522:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              },
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "33",
                "id": 21,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "561:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 22,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "565:7:0",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2592000_by_1",
                  "typeString": "int_const 2592000"
                },
                "value": "30"
              },
              "src": "561:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 26,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "583:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 25,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1324,
              "src": "583:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 28,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "632:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6897",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 27,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6897,
              "src": "632:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6897",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 30,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "660:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6897",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 29,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6897,
              "src": "660:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6897",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "843fe5f0",
            "id": 32,
            "mutability": "mutable",
            "name": "defiYieldGenerator",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "688:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
              "typeString": "contract DefiYieldGenerator"
            },
            "typeName": {
              "id": 31,
              "name": "DefiYieldGenerator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1457,
              "src": "688:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                "typeString": "contract DefiYieldGenerator"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "743:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "743:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "id": 34,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8194,
                "src": "763:21:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$8194_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "_stakersPool",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "813:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 37,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "821:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "813:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
              },
              "valueType": {
                "id": 38,
                "name": "StakingInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 16,
                "src": "832:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$16_storage_ptr",
                  "typeString": "struct BMIDAIStaking.StakingInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 41,
              "nodeType": "StructuredDocumentation",
              "src": "891:33:0",
              "text": "@dev cruсial to start from 2"
            },
            "id": 44,
            "mutability": "mutable",
            "name": "_currentNFTMintID",
            "nodeType": "VariableDeclaration",
            "scope": 635,
            "src": "929:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "929:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "965:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 52,
            "name": "StakingNFTMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "997:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "997:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1009:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1036:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "996:51:0"
            },
            "src": "974:74:0"
          },
          {
            "anonymous": false,
            "id": 58,
            "name": "StakingNFTBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1076:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1088:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:39:0"
            },
            "src": "1053:62:0"
          },
          {
            "anonymous": false,
            "id": 66,
            "name": "StakingBMIProfitWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1152:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1164:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "1180:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:40:0"
            },
            "src": "1120:72:0"
          },
          {
            "anonymous": false,
            "id": 72,
            "name": "StakingFundsWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1225:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1237:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1224:24:0"
            },
            "src": "1197:52:0"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1334:376:0",
              "statements": [
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1344:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1364:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "1344:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:38:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1393:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6897",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 87,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "1442:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1181,
                                "src": "1442:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1442:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 85,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1411:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1254,
                            "src": "1411:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1411:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 84,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6897,
                        "src": "1404:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6897_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1404:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6897",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1393:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6897",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:82:0"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1485:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6897",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 98,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "1534:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1189,
                                "src": "1534:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1534:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 96,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1503:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1254,
                            "src": "1503:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 95,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6897,
                        "src": "1496:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6897_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1496:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6897",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1485:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6897",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1485:82:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105,
                      "name": "defiYieldGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1577:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 109,
                                  "name": "contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "1660:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getYieldGeneratorName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1221,
                                "src": "1660:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1660:41:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 107,
                              "name": "contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1630:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1254,
                            "src": "1630:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1630:72:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 106,
                        "name": "DefiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1457,
                        "src": "1611:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DefiYieldGenerator_$1457_$",
                          "typeString": "type(contract DefiYieldGenerator)"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1611:92:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "src": "1577:126:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                      "typeString": "contract DefiYieldGenerator"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:126:0"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77,
                "modifierName": {
                  "id": 76,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5764,
                  "src": "1324:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1324:9:0"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1277:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1324,
                    "src": "1277:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1324",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1276:38:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:0"
            },
            "scope": 635,
            "src": "1255:455:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1793:147:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 122,
                        "name": "defiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1803:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                          "typeString": "contract DefiYieldGenerator"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveAllDAITokensForStakingWithdrowal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1422,
                      "src": "1803:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:60:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 127,
                        "name": "defiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1873:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                          "typeString": "contract DefiYieldGenerator"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approveAllBMITokensForStakingWithdrowal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1442,
                      "src": "1873:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:60:0"
                }
              ]
            },
            "functionSelector": "727cfca2",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 120,
                "modifierName": {
                  "id": 119,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5764,
                  "src": "1783:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1783:9:0"
              }
            ],
            "name": "makeDefiYieldGeneratorApproveStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1771:2:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:0:0"
            },
            "scope": 635,
            "src": "1716:224:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "2068:924:0",
              "statements": [
                {
                  "assignments": [
                    143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 143,
                      "mutability": "mutable",
                      "name": "stakerBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2091:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2091:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 146,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2140:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2115:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2252",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOfNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3645,
                      "src": "2115:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2091:57:0"
                },
                {
                  "assignments": [
                    150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2158:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2158:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 152,
                  "initialValue": {
                    "id": 151,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 137,
                    "src": "2180:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2158:29:0"
                },
                {
                  "body": {
                    "id": 206,
                    "nodeType": "Block",
                    "src": "2242:413:0",
                    "statements": [
                      {
                        "assignments": [
                          164
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 164,
                            "mutability": "mutable",
                            "name": "tokenID",
                            "nodeType": "VariableDeclaration",
                            "scope": 206,
                            "src": "2256:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 163,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2256:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 170,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 167,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "2309:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 168,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "2318:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 165,
                              "name": "_policyBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2274:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenOfOwnerByIndexNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3676,
                            "src": "2274:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2256:64:0"
                      },
                      {
                        "expression": {
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 171,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "2359:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 172,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "2374:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 174,
                              "indexExpression": {
                                "id": 173,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2387:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2374:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2374:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2359:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "2359:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 181,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "2462:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 182,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2471:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2480:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 178,
                              "name": "_policyBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2442:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5399,
                            "src": "2442:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2442:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "2442:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 187,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2519:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 190,
                                  "name": "_policyBook",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139,
                                  "src": "2536:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                    "typeString": "contract PolicyBook"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                    "typeString": "contract PolicyBook"
                                  }
                                ],
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2528:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 188,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2528:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2528:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 186,
                            "name": "StakingNFTBurned",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2502:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2502:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "EmitStatement",
                        "src": "2497:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 198,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2594:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 194,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "2564:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 196,
                              "indexExpression": {
                                "id": 195,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "2578:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2564:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$8194_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8234,
                            "src": "2564:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8194_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$8194_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2564:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 200,
                        "nodeType": "ExpressionStatement",
                        "src": "2564:38:0"
                      },
                      {
                        "expression": {
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2616:28:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 201,
                              "name": "_stakersPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "2623:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                              }
                            },
                            "id": 203,
                            "indexExpression": {
                              "id": 202,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2636:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2623:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                              "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "ExpressionStatement",
                        "src": "2616:28:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 157,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2218:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 158,
                      "name": "stakerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "2222:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2218:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 207,
                  "initializationExpression": {
                    "assignments": [
                      154
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 207,
                        "src": "2203:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 156,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2215:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2203:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2237:3:0",
                      "subExpression": {
                        "id": 160,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2237:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 162,
                    "nodeType": "ExpressionStatement",
                    "src": "2237:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2198:457:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 211,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2685:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 212,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2694:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2713:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2716:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 208,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2665:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2252",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5381,
                      "src": "2665:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2665:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2665:54:0"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 217,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2730:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                          "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "id": 218,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2743:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2730:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                        "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 221,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2776:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2776:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 223,
                          "name": "totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "2793:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 224,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "2806:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2252",
                            "typeString": "contract PolicyBook"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_PolicyBook_$2252",
                            "typeString": "contract PolicyBook"
                          }
                        ],
                        "id": 220,
                        "name": "StakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2764:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingInfo_$16_storage_ptr_$",
                          "typeString": "type(struct BMIDAIStaking.StakingInfo storage pointer)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2764:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                        "typeString": "struct BMIDAIStaking.StakingInfo memory"
                      }
                    },
                    "src": "2730:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2730:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2855:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 228,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2828:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 230,
                        "indexExpression": {
                          "id": 229,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2842:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2828:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8194_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8214,
                      "src": "2828:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8194_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$8194_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2828:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "2828:45:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2906:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 239,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "2933:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2925:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 237,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2925:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2925:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 241,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2947:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 235,
                      "name": "StakingNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2889:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2889:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "EmitStatement",
                  "src": "2884:71:0"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2966:19:0",
                    "subExpression": {
                      "id": 244,
                      "name": "_currentNFTMintID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2966:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:19:0"
                }
              ]
            },
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "1973:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "2006:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "2031:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2252",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2252,
                    "src": "2031:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$2252",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:96:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:0"
            },
            "scope": 635,
            "src": "1946:1046:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "3071:515:0",
              "statements": [
                {
                  "assignments": [
                    256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 300,
                      "src": "3140:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 255,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3140:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 261,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "3185:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3177:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3177:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3177:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 265,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "3207:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 263,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3199:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3199:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 267,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "3228:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 257,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "3155:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6897",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6878,
                      "src": "3155:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3155:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3140:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 271,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "3262:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3271:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f",
                          "typeString": "literal_string \"Staking: Failed to transfer DAI tokens\""
                        },
                        "value": "Staking: Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f",
                          "typeString": "literal_string \"Staking: Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3254:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3254:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:58:0"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 275,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "3372:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 278,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5411,
                            "src": "3407:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3407:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 282,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3429:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BMIDAIStaking_$635",
                                "typeString": "contract BMIDAIStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BMIDAIStaking_$635",
                                "typeString": "contract BMIDAIStaking"
                              }
                            ],
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3421:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 280,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3421:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3421:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 284,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 250,
                          "src": "3436:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 276,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 252,
                          "src": "3382:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2252",
                            "typeString": "contract PolicyBook"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4021,
                        "src": "3382:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3382:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3372:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "3372:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 289,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "3470:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3479:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b",
                          "typeString": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Staking: Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b",
                          "typeString": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3462:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 294,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "3544:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3544:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 296,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "3558:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 297,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3567:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2252",
                          "typeString": "contract PolicyBook"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_PolicyBook_$2252",
                          "typeString": "contract PolicyBook"
                        }
                      ],
                      "id": 293,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3535:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_PolicyBook_$2252_$returns$__$",
                        "typeString": "function (address,uint256,contract PolicyBook)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:44:0"
                }
              ]
            },
            "functionSelector": "81927714",
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeDAIx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "3021:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "3038:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2252",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2252,
                    "src": "3038:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$2252",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3020:41:0"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3071:0:0"
            },
            "scope": 635,
            "src": "3002:584:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "3645:730:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 307,
                              "name": "_stakersPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "3663:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                              }
                            },
                            "id": 309,
                            "indexExpression": {
                              "id": 308,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "3676:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3663:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                              "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingStartTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "3663:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3705:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3663:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a2074686973207374616b696e6720746f6b656e20646f65736e2774206578697374",
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3721:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                          "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                        },
                        "value": "Staking: this staking token doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                          "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:110:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:110:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 322,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 303,
                              "src": "3828:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 317,
                                  "name": "_stakersPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "3784:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                    "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                  }
                                },
                                "id": 319,
                                "indexExpression": {
                                  "id": 318,
                                  "name": "tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "3797:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3784:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                  "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                                }
                              },
                              "id": 320,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "3784:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOfNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3659,
                            "src": "3784:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3784:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 324,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5411,
                            "src": "3840:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3840:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3784:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3867:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f",
                          "typeString": "literal_string \"Staking: Not an NFT token owner\""
                        },
                        "value": "Staking: Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f",
                          "typeString": "literal_string \"Staking: Not an NFT token owner\""
                        }
                      ],
                      "id": 316,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3775:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3775:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "3775:126:0"
                },
                {
                  "assignments": [
                    331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 331,
                      "mutability": "mutable",
                      "name": "profit",
                      "nodeType": "VariableDeclaration",
                      "scope": 369,
                      "src": "3912:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3912:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 334,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "3971:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 336,
                          "indexExpression": {
                            "id": 335,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "3984:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3971:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakingStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "3971:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 338,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "4024:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 340,
                          "indexExpression": {
                            "id": 339,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "4037:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4024:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedDaiAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "4024:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 332,
                        "name": "defiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "3929:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                          "typeString": "contract DefiYieldGenerator"
                        }
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1456,
                      "src": "3929:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3929:142:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3912:159:0"
                },
                {
                  "assignments": [
                    345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 369,
                      "src": "4141:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4141:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 356,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 350,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "4186:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4178:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4178:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4178:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 352,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "4207:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4207:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 354,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4221:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 346,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4156:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6897",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6878,
                      "src": "4156:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4156:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4141:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 358,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 345,
                        "src": "4246:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4255:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d",
                          "typeString": "literal_string \"Staking: Failed to transfer BMI tokens\""
                        },
                        "value": "Staking: Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d",
                          "typeString": "literal_string \"Staking: Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4238:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "4238:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 363,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "4338:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 364,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "4347:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 365,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "4355:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4355:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 362,
                      "name": "StakingBMIProfitWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "4312:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4312:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "EmitStatement",
                  "src": "4307:61:0"
                }
              ]
            },
            "functionSelector": "cd30a976",
            "id": 370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBMIProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "3619:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3618:17:0"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:0"
            },
            "scope": 635,
            "src": "3592:783:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "4440:1796:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 376,
                              "name": "_stakersPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4458:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                              }
                            },
                            "id": 378,
                            "indexExpression": {
                              "id": 377,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "4471:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4458:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                              "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingStartTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "4458:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4500:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4458:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a2074686973207374616b696e6720746f6b656e20646f65736e2774206578697374",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4503:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                          "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                        },
                        "value": "Staking: this staking token doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                          "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4450:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4450:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 384,
                  "nodeType": "ExpressionStatement",
                  "src": "4450:97:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 386,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4566:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4566:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 388,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "4584:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 390,
                              "indexExpression": {
                                "id": 389,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "4597:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4584:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "4584:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 392,
                            "name": "THREE_MONTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "4625:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4584:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4566:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a2046756e647320617265206c6f636b656420666f722033206d6f6e7468",
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0250c92a54dc2c75fa70b1b07a1eaa017e185c111ff26f0804fd3319b065dcc",
                          "typeString": "literal_string \"Staking: Funds are locked for 3 month\""
                        },
                        "value": "Staking: Funds are locked for 3 month"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0250c92a54dc2c75fa70b1b07a1eaa017e185c111ff26f0804fd3319b065dcc",
                          "typeString": "literal_string \"Staking: Funds are locked for 3 month\""
                        }
                      ],
                      "id": 385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4557:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4557:134:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:134:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 404,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "4762:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 399,
                                  "name": "_stakersPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "4718:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                    "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                  }
                                },
                                "id": 401,
                                "indexExpression": {
                                  "id": 400,
                                  "name": "tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "4731:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4718:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                  "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "4718:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOfNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3659,
                            "src": "4718:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4718:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 406,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5411,
                            "src": "4774:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4774:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4718:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4801:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f",
                          "typeString": "literal_string \"Staking: Not an NFT token owner\""
                        },
                        "value": "Staking: Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f",
                          "typeString": "literal_string \"Staking: Not an NFT token owner\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4709:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4709:126:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "4709:126:0"
                },
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "stakingInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "4853:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                        "typeString": "struct BMIDAIStaking.StakingInfo"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "StakingInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 16,
                        "src": "4853:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$16_storage_ptr",
                          "typeString": "struct BMIDAIStaking.StakingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 417,
                  "initialValue": {
                    "baseExpression": {
                      "id": 414,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "4886:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                        "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 416,
                    "indexExpression": {
                      "id": 415,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "4899:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4886:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4853:54:0"
                },
                {
                  "assignments": [
                    419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 419,
                      "mutability": "mutable",
                      "name": "profit",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "4918:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 418,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4918:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 431,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 422,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "4977:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 424,
                          "indexExpression": {
                            "id": 423,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "4990:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4977:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakingStartTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "4977:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 426,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "5029:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 428,
                          "indexExpression": {
                            "id": 427,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "5042:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5029:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedDaiAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13,
                        "src": "5029:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 420,
                        "name": "defiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4935:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                          "typeString": "contract DefiYieldGenerator"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1456,
                      "src": "4935:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) external returns (uint256)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4935:141:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4918:158:0"
                },
                {
                  "assignments": [
                    433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 433,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "5150:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5150:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 438,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "5195:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5187:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 436,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5187:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5187:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 440,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "5216:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5216:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 442,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "5230:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 434,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5165:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6897",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6878,
                      "src": "5165:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5165:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5150:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 446,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "5255:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5264:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d",
                          "typeString": "literal_string \"Staking: Failed to transfer BMI tokens\""
                        },
                        "value": "Staking: Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d",
                          "typeString": "literal_string \"Staking: Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5247:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5247:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "5247:58:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 451,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "5347:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 452,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "5356:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 453,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "5364:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5364:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 450,
                      "name": "StakingBMIProfitWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "5321:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5321:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "EmitStatement",
                  "src": "5316:61:0"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 457,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "5446:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 462,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "5499:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5491:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 460,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5491:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5491:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 466,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "5541:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                                  "typeString": "struct BMIDAIStaking.StakingInfo memory"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "5541:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                "typeString": "contract PolicyBook"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                "typeString": "contract PolicyBook"
                              }
                            ],
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5533:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 464,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5533:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5533:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 469,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "5579:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "5579:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 458,
                          "name": "daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "5456:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6897",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6878,
                        "src": "5456:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5456:160:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5446:170:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "5446:170:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 475,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "5634:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5643:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f",
                          "typeString": "literal_string \"Staking: Failed to transfer DAI tokens\""
                        },
                        "value": "Staking: Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f",
                          "typeString": "literal_string \"Staking: Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5626:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:58:0"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 479,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "5751:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 483,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5411,
                            "src": "5793:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5793:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 485,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "5807:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "5807:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 480,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "5761:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "policyBook",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "5761:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2252",
                            "typeString": "contract PolicyBook"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3984,
                        "src": "5761:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5761:74:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5751:84:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "5751:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "5853:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a204661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5862:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b",
                          "typeString": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Staking: Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b",
                          "typeString": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5845:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5845:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "5845:62:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 496,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "5945:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 497,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "5954:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5954:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 495,
                      "name": "StakingFundsWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "5923:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5923:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "EmitStatement",
                  "src": "5918:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 506,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5411,
                          "src": "6019:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6019:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 508,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "6033:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6042:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 501,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "5978:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 503,
                          "indexExpression": {
                            "id": 502,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "5991:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5978:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyBook",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "5978:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2252",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5399,
                      "src": "5978:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5978:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "5978:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 517,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "6090:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 512,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "6055:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 515,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 513,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5411,
                            "src": "6069:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6069:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6055:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8194_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8234,
                      "src": "6055:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8194_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$8194_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6055:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6055:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 521,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "6131:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 524,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "6148:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 526,
                              "indexExpression": {
                                "id": 525,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "6161:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6148:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 527,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "policyBook",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "6148:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6140:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 522,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6140:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6140:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 520,
                      "name": "StakingNFTBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "6114:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6114:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "EmitStatement",
                  "src": "6109:73:0"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6193:28:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 531,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "6200:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                          "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 533,
                      "indexExpression": {
                        "id": 532,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "6213:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6200:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                        "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "6193:28:0"
                }
              ]
            },
            "functionSelector": "a7fa3c7f",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFundsWithProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "4414:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4413:17:0"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4440:0:0"
            },
            "scope": 635,
            "src": "4381:1855:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "6335:153:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 545,
                              "name": "_stakersPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "6353:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                              }
                            },
                            "id": 547,
                            "indexExpression": {
                              "id": 546,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "6366:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6353:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                              "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingStartTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11,
                          "src": "6353:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6395:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6353:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a2074686973207374616b696e6720746f6b656e20646f65736e2774206578697374",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6398:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                          "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                        },
                        "value": "Staking: this staking token doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                          "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                        }
                      ],
                      "id": 544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6345:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6345:97:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "6345:97:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 554,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "6460:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                        "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 556,
                    "indexExpression": {
                      "id": 555,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "6473:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6460:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 543,
                  "id": 557,
                  "nodeType": "Return",
                  "src": "6453:28:0"
                }
              ]
            },
            "functionSelector": "96344eaf",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakingInfoByToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "6277:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6276:17:0"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "6315:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                    "typeString": "struct BMIDAIStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "StakingInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16,
                    "src": "6315:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage_ptr",
                      "typeString": "struct BMIDAIStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6314:20:0"
            },
            "scope": 635,
            "src": "6249:239:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "6564:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 567,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "6582:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6599:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6591:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 568,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6591:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6591:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6582:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6603:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2f8f63fc4c52ae3bb24c42c2db314ae940b4e1dd755d4f3e4432e5a707fcf2c",
                          "typeString": "literal_string \"Staking: balance query for the zero address\""
                        },
                        "value": "Staking: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2f8f63fc4c52ae3bb24c42c2db314ae940b4e1dd755d4f3e4432e5a707fcf2c",
                          "typeString": "literal_string \"Staking: balance query for the zero address\""
                        }
                      ],
                      "id": 566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6574:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 575,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:75:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 576,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "6667:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 578,
                        "indexExpression": {
                          "id": 577,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "6681:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6667:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8194_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8268,
                      "src": "6667:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8194_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$8194_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6667:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 565,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "6660:36:0"
                }
              ]
            },
            "functionSelector": "12ed9d29",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "howManyStakings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "6519:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6519:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6518:15:0"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "6555:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6555:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6554:9:0"
            },
            "scope": 635,
            "src": "6494:209:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "6796:268:0",
              "statements": [
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "6806:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6806:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 596,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 594,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "6837:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 593,
                      "name": "howManyStakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "6821:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6821:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6806:37:0"
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 633,
                      "src": "6862:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6862:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 600,
                        "nodeType": "ArrayTypeName",
                        "src": "6862:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 605,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "6902:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6888:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 603,
                        "nodeType": "ArrayTypeName",
                        "src": "6892:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6888:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6862:45:0"
                },
                {
                  "body": {
                    "id": 629,
                    "nodeType": "Block",
                    "src": "6961:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 618,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "6975:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 620,
                            "indexExpression": {
                              "id": 619,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "6982:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6975:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 625,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "7011:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 621,
                                  "name": "_holderTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "6987:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8194_storage_$",
                                    "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                  }
                                },
                                "id": 623,
                                "indexExpression": {
                                  "id": 622,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 585,
                                  "src": "7001:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6987:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UintSet_$8194_storage",
                                  "typeString": "struct EnumerableSet.UintSet storage ref"
                                }
                              },
                              "id": 624,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "at",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8288,
                              "src": "6987:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8194_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$8194_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6987:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6975:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 628,
                        "nodeType": "ExpressionStatement",
                        "src": "6975:38:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 612,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "6938:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 613,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 592,
                      "src": "6942:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6938:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 630,
                  "initializationExpression": {
                    "assignments": [
                      609
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 630,
                        "src": "6923:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6923:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 611,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6935:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6923:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6948:3:0",
                      "subExpression": {
                        "id": 615,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "6948:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 617,
                    "nodeType": "ExpressionStatement",
                    "src": "6948:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6918:106:0"
                },
                {
                  "expression": {
                    "id": 631,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 601,
                    "src": "7041:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 590,
                  "id": 632,
                  "nodeType": "Return",
                  "src": "7034:13:0"
                }
              ]
            },
            "functionSelector": "69c54086",
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingTokensByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "6742:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6742:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6741:15:0"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "6778:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 587,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6778:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 588,
                    "nodeType": "ArrayTypeName",
                    "src": "6778:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6777:18:0"
            },
            "scope": 635,
            "src": "6709:355:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 636,
        "src": "300:6766:0"
      }
    ],
    "src": "32:7035:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
      "exportedSymbols": {
        "AccessControl": [
          5706
        ],
        "Address": [
          7354
        ],
        "BMIDAIStaking": [
          635
        ],
        "Context": [
          5423
        ],
        "ContractsRegistry": [
          1324
        ],
        "DefiYieldGenerator": [
          1457
        ],
        "ERC1155": [
          5339
        ],
        "ERC1155NFTMintableBurnable": [
          5400
        ],
        "ERC165": [
          5872
        ],
        "EnumerableMap": [
          7809
        ],
        "EnumerableSet": [
          8289
        ],
        "IERC1155": [
          6275
        ],
        "IERC1155Receiver": [
          6316
        ],
        "IERC165": [
          5884
        ],
        "IERC20": [
          6897
        ],
        "IPolicyBook": [
          3051
        ],
        "IPolicyBookFabric": [
          3100
        ],
        "Math": [
          5957
        ],
        "Ownable": [
          5815
        ],
        "PolicyBook": [
          2252
        ],
        "SafeMath": [
          6153
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 8290,
          "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
          "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
          "scope": 636,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "91:57:0"
      },
      {
        "attributes": {
          "SourceUnit": 5816,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 636,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "149:52:0"
      },
      {
        "attributes": {
          "SourceUnit": 2253,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
          "file": "./PolicyBook.sol",
          "scope": 636,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5,
        "name": "ImportDirective",
        "src": "203:26:0"
      },
      {
        "attributes": {
          "SourceUnit": 1325,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 636,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6,
        "name": "ImportDirective",
        "src": "230:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1458,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
          "file": "./DefiYieldGenerator.sol",
          "scope": 636,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7,
        "name": "ImportDirective",
        "src": "264:34:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5423,
            5815
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            635,
            5815,
            5423
          ],
          "name": "BMIDAIStaking",
          "scope": 636
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5815,
                  "type": "contract Ownable"
                },
                "id": 8,
                "name": "UserDefinedTypeName",
                "src": "326:7:0"
              }
            ],
            "id": 9,
            "name": "InheritanceSpecifier",
            "src": "326:7:0"
          },
          {
            "attributes": {
              "canonicalName": "BMIDAIStaking.StakingInfo",
              "name": "StakingInfo",
              "scope": 635,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakingStartTime",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 10,
                    "name": "ElementaryTypeName",
                    "src": "369:7:0"
                  }
                ],
                "id": 11,
                "name": "VariableDeclaration",
                "src": "369:24:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakedDaiAmount",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "403:7:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "403:23:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "policyBook",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "contract PolicyBook",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "PolicyBook",
                      "referencedDeclaration": 2252,
                      "type": "contract PolicyBook"
                    },
                    "id": 14,
                    "name": "UserDefinedTypeName",
                    "src": "436:10:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "436:21:0"
              }
            ],
            "id": 16,
            "name": "StructDefinition",
            "src": "340:124:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "EnumerableSet",
                  "referencedDeclaration": 8289,
                  "type": "library EnumerableSet"
                },
                "id": 17,
                "name": "UserDefinedTypeName",
                "src": "476:13:0"
              },
              {
                "attributes": {
                  "name": "EnumerableSet.UintSet",
                  "referencedDeclaration": 8194,
                  "type": "struct EnumerableSet.UintSet"
                },
                "id": 18,
                "name": "UserDefinedTypeName",
                "src": "494:21:0"
              }
            ],
            "id": 19,
            "name": "UsingForDirective",
            "src": "470:46:0"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "THREE_MONTH",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 20,
                "name": "ElementaryTypeName",
                "src": "522:7:0"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_7776000_by_1",
                    "typeString": "int_const 7776000"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "int_const 7776000"
                },
                "children": [
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 21,
                    "name": "Literal",
                    "src": "561:1:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3330",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": "days",
                      "token": "number",
                      "type": "int_const 2592000",
                      "value": "30"
                    },
                    "id": 22,
                    "name": "Literal",
                    "src": "565:7:0"
                  }
                ],
                "id": 23,
                "name": "BinaryOperation",
                "src": "561:11:0"
              }
            ],
            "id": 24,
            "name": "VariableDeclaration",
            "src": "522:50:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1324,
                  "type": "contract ContractsRegistry"
                },
                "id": 25,
                "name": "UserDefinedTypeName",
                "src": "583:17:0"
              }
            ],
            "id": 26,
            "name": "VariableDeclaration",
            "src": "583:42:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6897,
                  "type": "contract IERC20"
                },
                "id": 27,
                "name": "UserDefinedTypeName",
                "src": "632:6:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "632:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6897,
                  "type": "contract IERC20"
                },
                "id": 29,
                "name": "UserDefinedTypeName",
                "src": "660:6:0"
              }
            ],
            "id": 30,
            "name": "VariableDeclaration",
            "src": "660:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "843fe5f0",
              "mutability": "mutable",
              "name": "defiYieldGenerator",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DefiYieldGenerator",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "DefiYieldGenerator",
                  "referencedDeclaration": 1457,
                  "type": "contract DefiYieldGenerator"
                },
                "id": 31,
                "name": "UserDefinedTypeName",
                "src": "688:18:0"
              }
            ],
            "id": 32,
            "name": "VariableDeclaration",
            "src": "688:44:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_holderTokens",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct EnumerableSet.UintSet)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct EnumerableSet.UintSet)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 33,
                    "name": "ElementaryTypeName",
                    "src": "752:7:0"
                  },
                  {
                    "attributes": {
                      "name": "EnumerableSet.UintSet",
                      "referencedDeclaration": 8194,
                      "type": "struct EnumerableSet.UintSet"
                    },
                    "id": 34,
                    "name": "UserDefinedTypeName",
                    "src": "763:21:0"
                  }
                ],
                "id": 35,
                "name": "Mapping",
                "src": "743:42:0"
              }
            ],
            "id": 36,
            "name": "VariableDeclaration",
            "src": "743:64:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_stakersPool",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 37,
                    "name": "ElementaryTypeName",
                    "src": "821:7:0"
                  },
                  {
                    "attributes": {
                      "name": "StakingInfo",
                      "referencedDeclaration": 16,
                      "type": "struct BMIDAIStaking.StakingInfo"
                    },
                    "id": 38,
                    "name": "UserDefinedTypeName",
                    "src": "832:11:0"
                  }
                ],
                "id": 39,
                "name": "Mapping",
                "src": "813:31:0"
              }
            ],
            "id": 40,
            "name": "VariableDeclaration",
            "src": "813:52:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_currentNFTMintID",
              "scope": 635,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 42,
                "name": "ElementaryTypeName",
                "src": "929:7:0"
              },
              {
                "attributes": {
                  "hexvalue": "32",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 2",
                  "value": "2"
                },
                "id": 43,
                "name": "Literal",
                "src": "965:1:0"
              },
              {
                "attributes": {
                  "text": "@dev cruсial to start from 2"
                },
                "id": 41,
                "name": "StructuredDocumentation",
                "src": "891:33:0"
              }
            ],
            "id": 44,
            "name": "VariableDeclaration",
            "src": "929:37:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingNFTMinted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 45,
                        "name": "ElementaryTypeName",
                        "src": "997:7:0"
                      }
                    ],
                    "id": 46,
                    "name": "VariableDeclaration",
                    "src": "997:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 47,
                        "name": "ElementaryTypeName",
                        "src": "1009:7:0"
                      }
                    ],
                    "id": 48,
                    "name": "VariableDeclaration",
                    "src": "1009:25:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 49,
                        "name": "ElementaryTypeName",
                        "src": "1036:7:0"
                      }
                    ],
                    "id": 50,
                    "name": "VariableDeclaration",
                    "src": "1036:10:0"
                  }
                ],
                "id": 51,
                "name": "ParameterList",
                "src": "996:51:0"
              }
            ],
            "id": 52,
            "name": "EventDefinition",
            "src": "974:74:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingNFTBurned"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "1076:7:0"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "1076:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "1088:7:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "1088:25:0"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "1075:39:0"
              }
            ],
            "id": 58,
            "name": "EventDefinition",
            "src": "1053:62:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingBMIProfitWithdrawn"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "1152:7:0"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "1152:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 61,
                        "name": "ElementaryTypeName",
                        "src": "1164:7:0"
                      }
                    ],
                    "id": 62,
                    "name": "VariableDeclaration",
                    "src": "1164:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 66,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 63,
                        "name": "ElementaryTypeName",
                        "src": "1180:7:0"
                      }
                    ],
                    "id": 64,
                    "name": "VariableDeclaration",
                    "src": "1180:10:0"
                  }
                ],
                "id": 65,
                "name": "ParameterList",
                "src": "1151:40:0"
              }
            ],
            "id": 66,
            "name": "EventDefinition",
            "src": "1120:72:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingFundsWithdrawn"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 67,
                        "name": "ElementaryTypeName",
                        "src": "1225:7:0"
                      }
                    ],
                    "id": 68,
                    "name": "VariableDeclaration",
                    "src": "1225:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 72,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 69,
                        "name": "ElementaryTypeName",
                        "src": "1237:7:0"
                      }
                    ],
                    "id": 70,
                    "name": "VariableDeclaration",
                    "src": "1237:10:0"
                  }
                ],
                "id": 71,
                "name": "ParameterList",
                "src": "1224:24:0"
              }
            ],
            "id": 72,
            "name": "EventDefinition",
            "src": "1197:52:0"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 635,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 117,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1324,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 73,
                        "name": "UserDefinedTypeName",
                        "src": "1277:17:0"
                      }
                    ],
                    "id": 74,
                    "name": "VariableDeclaration",
                    "src": "1277:36:0"
                  }
                ],
                "id": 75,
                "name": "ParameterList",
                "src": "1276:38:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 78,
                "name": "ParameterList",
                "src": "1334:0:0"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5764,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 76,
                    "name": "Identifier",
                    "src": "1324:9:0"
                  }
                ],
                "id": 77,
                "name": "ModifierInvocation",
                "src": "1324:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 26,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 79,
                            "name": "Identifier",
                            "src": "1344:17:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 74,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 80,
                            "name": "Identifier",
                            "src": "1364:18:0"
                          }
                        ],
                        "id": 81,
                        "name": "Assignment",
                        "src": "1344:38:0"
                      }
                    ],
                    "id": 82,
                    "name": "ExpressionStatement",
                    "src": "1344:38:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 83,
                            "name": "Identifier",
                            "src": "1393:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6897,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 84,
                                "name": "Identifier",
                                "src": "1404:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1254,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 74,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 85,
                                        "name": "Identifier",
                                        "src": "1411:18:0"
                                      }
                                    ],
                                    "id": 86,
                                    "name": "MemberAccess",
                                    "src": "1411:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1181,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 74,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 87,
                                            "name": "Identifier",
                                            "src": "1442:18:0"
                                          }
                                        ],
                                        "id": 88,
                                        "name": "MemberAccess",
                                        "src": "1442:29:0"
                                      }
                                    ],
                                    "id": 89,
                                    "name": "FunctionCall",
                                    "src": "1442:31:0"
                                  }
                                ],
                                "id": 90,
                                "name": "FunctionCall",
                                "src": "1411:63:0"
                              }
                            ],
                            "id": 91,
                            "name": "FunctionCall",
                            "src": "1404:71:0"
                          }
                        ],
                        "id": 92,
                        "name": "Assignment",
                        "src": "1393:82:0"
                      }
                    ],
                    "id": 93,
                    "name": "ExpressionStatement",
                    "src": "1393:82:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 30,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 94,
                            "name": "Identifier",
                            "src": "1485:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6897,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 95,
                                "name": "Identifier",
                                "src": "1496:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1254,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 74,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 96,
                                        "name": "Identifier",
                                        "src": "1503:18:0"
                                      }
                                    ],
                                    "id": 97,
                                    "name": "MemberAccess",
                                    "src": "1503:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1189,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 74,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 98,
                                            "name": "Identifier",
                                            "src": "1534:18:0"
                                          }
                                        ],
                                        "id": 99,
                                        "name": "MemberAccess",
                                        "src": "1534:29:0"
                                      }
                                    ],
                                    "id": 100,
                                    "name": "FunctionCall",
                                    "src": "1534:31:0"
                                  }
                                ],
                                "id": 101,
                                "name": "FunctionCall",
                                "src": "1503:63:0"
                              }
                            ],
                            "id": 102,
                            "name": "FunctionCall",
                            "src": "1496:71:0"
                          }
                        ],
                        "id": 103,
                        "name": "Assignment",
                        "src": "1485:82:0"
                      }
                    ],
                    "id": 104,
                    "name": "ExpressionStatement",
                    "src": "1485:82:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DefiYieldGenerator"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 32,
                              "type": "contract DefiYieldGenerator",
                              "value": "defiYieldGenerator"
                            },
                            "id": 105,
                            "name": "Identifier",
                            "src": "1577:18:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract DefiYieldGenerator",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1457,
                                  "type": "type(contract DefiYieldGenerator)",
                                  "value": "DefiYieldGenerator"
                                },
                                "id": 106,
                                "name": "Identifier",
                                "src": "1611:18:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1254,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 26,
                                          "type": "contract ContractsRegistry",
                                          "value": "contractsRegistry"
                                        },
                                        "id": 107,
                                        "name": "Identifier",
                                        "src": "1630:17:0"
                                      }
                                    ],
                                    "id": 108,
                                    "name": "MemberAccess",
                                    "src": "1630:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getYieldGeneratorName",
                                          "referencedDeclaration": 1221,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 26,
                                              "type": "contract ContractsRegistry",
                                              "value": "contractsRegistry"
                                            },
                                            "id": 109,
                                            "name": "Identifier",
                                            "src": "1660:17:0"
                                          }
                                        ],
                                        "id": 110,
                                        "name": "MemberAccess",
                                        "src": "1660:39:0"
                                      }
                                    ],
                                    "id": 111,
                                    "name": "FunctionCall",
                                    "src": "1660:41:0"
                                  }
                                ],
                                "id": 112,
                                "name": "FunctionCall",
                                "src": "1630:72:0"
                              }
                            ],
                            "id": 113,
                            "name": "FunctionCall",
                            "src": "1611:92:0"
                          }
                        ],
                        "id": 114,
                        "name": "Assignment",
                        "src": "1577:126:0"
                      }
                    ],
                    "id": 115,
                    "name": "ExpressionStatement",
                    "src": "1577:126:0"
                  }
                ],
                "id": 116,
                "name": "Block",
                "src": "1334:376:0"
              }
            ],
            "id": 117,
            "name": "FunctionDefinition",
            "src": "1255:455:0"
          },
          {
            "attributes": {
              "functionSelector": "727cfca2",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "makeDefiYieldGeneratorApproveStakingWithdrowal",
              "scope": 635,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 118,
                "name": "ParameterList",
                "src": "1771:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 121,
                "name": "ParameterList",
                "src": "1793:0:0"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5764,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 119,
                    "name": "Identifier",
                    "src": "1783:9:0"
                  }
                ],
                "id": 120,
                "name": "ModifierInvocation",
                "src": "1783:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approveAllDAITokensForStakingWithdrowal",
                              "referencedDeclaration": 1422,
                              "type": "function () external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 122,
                                "name": "Identifier",
                                "src": "1803:18:0"
                              }
                            ],
                            "id": 124,
                            "name": "MemberAccess",
                            "src": "1803:58:0"
                          }
                        ],
                        "id": 125,
                        "name": "FunctionCall",
                        "src": "1803:60:0"
                      }
                    ],
                    "id": 126,
                    "name": "ExpressionStatement",
                    "src": "1803:60:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approveAllBMITokensForStakingWithdrowal",
                              "referencedDeclaration": 1442,
                              "type": "function () external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 127,
                                "name": "Identifier",
                                "src": "1873:18:0"
                              }
                            ],
                            "id": 129,
                            "name": "MemberAccess",
                            "src": "1873:58:0"
                          }
                        ],
                        "id": 130,
                        "name": "FunctionCall",
                        "src": "1873:60:0"
                      }
                    ],
                    "id": 131,
                    "name": "ExpressionStatement",
                    "src": "1873:60:0"
                  }
                ],
                "id": 132,
                "name": "Block",
                "src": "1793:147:0"
              }
            ],
            "id": 133,
            "name": "FunctionDefinition",
            "src": "1716:224:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_mintNFT",
              "scope": 635,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_staker",
                      "scope": 248,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 134,
                        "name": "ElementaryTypeName",
                        "src": "1973:7:0"
                      }
                    ],
                    "id": 135,
                    "name": "VariableDeclaration",
                    "src": "1973:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 248,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 136,
                        "name": "ElementaryTypeName",
                        "src": "2006:7:0"
                      }
                    ],
                    "id": 137,
                    "name": "VariableDeclaration",
                    "src": "2006:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 248,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 2252,
                          "type": "contract PolicyBook"
                        },
                        "id": 138,
                        "name": "UserDefinedTypeName",
                        "src": "2031:10:0"
                      }
                    ],
                    "id": 139,
                    "name": "VariableDeclaration",
                    "src": "2031:22:0"
                  }
                ],
                "id": 140,
                "name": "ParameterList",
                "src": "1963:96:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 141,
                "name": "ParameterList",
                "src": "2068:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        143
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakerBalance",
                          "scope": 247,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 142,
                            "name": "ElementaryTypeName",
                            "src": "2091:7:0"
                          }
                        ],
                        "id": 143,
                        "name": "VariableDeclaration",
                        "src": "2091:21:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOfNFT",
                              "referencedDeclaration": 3645,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 139,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 144,
                                "name": "Identifier",
                                "src": "2115:11:0"
                              }
                            ],
                            "id": 145,
                            "name": "MemberAccess",
                            "src": "2115:24:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 135,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 146,
                            "name": "Identifier",
                            "src": "2140:7:0"
                          }
                        ],
                        "id": 147,
                        "name": "FunctionCall",
                        "src": "2115:33:0"
                      }
                    ],
                    "id": 148,
                    "name": "VariableDeclarationStatement",
                    "src": "2091:57:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        150
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "totalAmount",
                          "scope": 247,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 149,
                            "name": "ElementaryTypeName",
                            "src": "2158:7:0"
                          }
                        ],
                        "id": 150,
                        "name": "VariableDeclaration",
                        "src": "2158:19:0"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 137,
                          "type": "uint256",
                          "value": "_amount"
                        },
                        "id": 151,
                        "name": "Identifier",
                        "src": "2180:7:0"
                      }
                    ],
                    "id": 152,
                    "name": "VariableDeclarationStatement",
                    "src": "2158:29:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            154
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 207,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 153,
                                "name": "ElementaryTypeName",
                                "src": "2203:7:0"
                              }
                            ],
                            "id": 154,
                            "name": "VariableDeclaration",
                            "src": "2203:9:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 155,
                            "name": "Literal",
                            "src": "2215:1:0"
                          }
                        ],
                        "id": 156,
                        "name": "VariableDeclarationStatement",
                        "src": "2203:13:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 154,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 157,
                            "name": "Identifier",
                            "src": "2218:1:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 143,
                              "type": "uint256",
                              "value": "stakerBalance"
                            },
                            "id": 158,
                            "name": "Identifier",
                            "src": "2222:13:0"
                          }
                        ],
                        "id": 159,
                        "name": "BinaryOperation",
                        "src": "2218:17:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 154,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 160,
                                "name": "Identifier",
                                "src": "2237:1:0"
                              }
                            ],
                            "id": 161,
                            "name": "UnaryOperation",
                            "src": "2237:3:0"
                          }
                        ],
                        "id": 162,
                        "name": "ExpressionStatement",
                        "src": "2237:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                164
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "tokenID",
                                  "scope": 206,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 163,
                                    "name": "ElementaryTypeName",
                                    "src": "2256:7:0"
                                  }
                                ],
                                "id": 164,
                                "name": "VariableDeclaration",
                                "src": "2256:15:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "tokenOfOwnerByIndexNFT",
                                      "referencedDeclaration": 3676,
                                      "type": "function (address,uint256) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 139,
                                          "type": "contract PolicyBook",
                                          "value": "_policyBook"
                                        },
                                        "id": 165,
                                        "name": "Identifier",
                                        "src": "2274:11:0"
                                      }
                                    ],
                                    "id": 166,
                                    "name": "MemberAccess",
                                    "src": "2274:34:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 135,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 167,
                                    "name": "Identifier",
                                    "src": "2309:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 154,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 168,
                                    "name": "Identifier",
                                    "src": "2318:1:0"
                                  }
                                ],
                                "id": 169,
                                "name": "FunctionCall",
                                "src": "2274:46:0"
                              }
                            ],
                            "id": 170,
                            "name": "VariableDeclarationStatement",
                            "src": "2256:64:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 150,
                                      "type": "uint256",
                                      "value": "totalAmount"
                                    },
                                    "id": 171,
                                    "name": "Identifier",
                                    "src": "2359:11:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakedDaiAmount",
                                      "referencedDeclaration": 13,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 172,
                                            "name": "Identifier",
                                            "src": "2374:12:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 164,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 173,
                                            "name": "Identifier",
                                            "src": "2387:7:0"
                                          }
                                        ],
                                        "id": 174,
                                        "name": "IndexAccess",
                                        "src": "2374:21:0"
                                      }
                                    ],
                                    "id": 175,
                                    "name": "MemberAccess",
                                    "src": "2374:37:0"
                                  }
                                ],
                                "id": 176,
                                "name": "Assignment",
                                "src": "2359:52:0"
                              }
                            ],
                            "id": 177,
                            "name": "ExpressionStatement",
                            "src": "2359:52:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "burnNFT",
                                      "referencedDeclaration": 5399,
                                      "type": "function (address,uint256,uint256) external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 139,
                                          "type": "contract PolicyBook",
                                          "value": "_policyBook"
                                        },
                                        "id": 178,
                                        "name": "Identifier",
                                        "src": "2442:11:0"
                                      }
                                    ],
                                    "id": 180,
                                    "name": "MemberAccess",
                                    "src": "2442:19:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 135,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 181,
                                    "name": "Identifier",
                                    "src": "2462:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 182,
                                    "name": "Identifier",
                                    "src": "2471:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 183,
                                    "name": "Literal",
                                    "src": "2480:1:0"
                                  }
                                ],
                                "id": 184,
                                "name": "FunctionCall",
                                "src": "2442:40:0"
                              }
                            ],
                            "id": 185,
                            "name": "ExpressionStatement",
                            "src": "2442:40:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 58,
                                      "type": "function (uint256,address)",
                                      "value": "StakingNFTBurned"
                                    },
                                    "id": 186,
                                    "name": "Identifier",
                                    "src": "2502:16:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 187,
                                    "name": "Identifier",
                                    "src": "2519:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                              "typeString": "contract PolicyBook"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address"
                                            },
                                            "id": 188,
                                            "name": "ElementaryTypeName",
                                            "src": "2528:7:0"
                                          }
                                        ],
                                        "id": 189,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2528:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 139,
                                          "type": "contract PolicyBook",
                                          "value": "_policyBook"
                                        },
                                        "id": 190,
                                        "name": "Identifier",
                                        "src": "2536:11:0"
                                      }
                                    ],
                                    "id": 191,
                                    "name": "FunctionCall",
                                    "src": "2528:20:0"
                                  }
                                ],
                                "id": 192,
                                "name": "FunctionCall",
                                "src": "2502:47:0"
                              }
                            ],
                            "id": 193,
                            "name": "EmitStatement",
                            "src": "2497:52:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "remove",
                                      "referencedDeclaration": 8234,
                                      "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.UintSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 36,
                                              "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                              "value": "_holderTokens"
                                            },
                                            "id": 194,
                                            "name": "Identifier",
                                            "src": "2564:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 135,
                                              "type": "address",
                                              "value": "_staker"
                                            },
                                            "id": 195,
                                            "name": "Identifier",
                                            "src": "2578:7:0"
                                          }
                                        ],
                                        "id": 196,
                                        "name": "IndexAccess",
                                        "src": "2564:22:0"
                                      }
                                    ],
                                    "id": 197,
                                    "name": "MemberAccess",
                                    "src": "2564:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 164,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 198,
                                    "name": "Identifier",
                                    "src": "2594:7:0"
                                  }
                                ],
                                "id": 199,
                                "name": "FunctionCall",
                                "src": "2564:38:0"
                              }
                            ],
                            "id": 200,
                            "name": "ExpressionStatement",
                            "src": "2564:38:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 201,
                                        "name": "Identifier",
                                        "src": "2623:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 164,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 202,
                                        "name": "Identifier",
                                        "src": "2636:7:0"
                                      }
                                    ],
                                    "id": 203,
                                    "name": "IndexAccess",
                                    "src": "2623:21:0"
                                  }
                                ],
                                "id": 204,
                                "name": "UnaryOperation",
                                "src": "2616:28:0"
                              }
                            ],
                            "id": 205,
                            "name": "ExpressionStatement",
                            "src": "2616:28:0"
                          }
                        ],
                        "id": 206,
                        "name": "Block",
                        "src": "2242:413:0"
                      }
                    ],
                    "id": 207,
                    "name": "ForStatement",
                    "src": "2198:457:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mintNFT",
                              "referencedDeclaration": 5381,
                              "type": "function (address,uint256,uint256,bytes memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 139,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 208,
                                "name": "Identifier",
                                "src": "2665:11:0"
                              }
                            ],
                            "id": 210,
                            "name": "MemberAccess",
                            "src": "2665:19:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 135,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 211,
                            "name": "Identifier",
                            "src": "2685:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 212,
                            "name": "Identifier",
                            "src": "2694:17:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 213,
                            "name": "Literal",
                            "src": "2713:1:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 214,
                            "name": "Literal",
                            "src": "2716:2:0"
                          }
                        ],
                        "id": 215,
                        "name": "FunctionCall",
                        "src": "2665:54:0"
                      }
                    ],
                    "id": 216,
                    "name": "ExpressionStatement",
                    "src": "2665:54:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 217,
                                "name": "Identifier",
                                "src": "2730:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "uint256",
                                  "value": "_currentNFTMintID"
                                },
                                "id": 218,
                                "name": "Identifier",
                                "src": "2743:17:0"
                              }
                            ],
                            "id": 219,
                            "name": "IndexAccess",
                            "src": "2730:31:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct BMIDAIStaking.StakingInfo memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "type(struct BMIDAIStaking.StakingInfo storage pointer)",
                                  "value": "StakingInfo"
                                },
                                "id": 220,
                                "name": "Identifier",
                                "src": "2764:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 221,
                                    "name": "Identifier",
                                    "src": "2776:5:0"
                                  }
                                ],
                                "id": 222,
                                "name": "MemberAccess",
                                "src": "2776:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 150,
                                  "type": "uint256",
                                  "value": "totalAmount"
                                },
                                "id": 223,
                                "name": "Identifier",
                                "src": "2793:11:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 139,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 224,
                                "name": "Identifier",
                                "src": "2806:11:0"
                              }
                            ],
                            "id": 225,
                            "name": "FunctionCall",
                            "src": "2764:54:0"
                          }
                        ],
                        "id": 226,
                        "name": "Assignment",
                        "src": "2730:88:0"
                      }
                    ],
                    "id": 227,
                    "name": "ExpressionStatement",
                    "src": "2730:88:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 8214,
                              "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 228,
                                    "name": "Identifier",
                                    "src": "2828:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 135,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 229,
                                    "name": "Identifier",
                                    "src": "2842:7:0"
                                  }
                                ],
                                "id": 230,
                                "name": "IndexAccess",
                                "src": "2828:22:0"
                              }
                            ],
                            "id": 231,
                            "name": "MemberAccess",
                            "src": "2828:26:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 232,
                            "name": "Identifier",
                            "src": "2855:17:0"
                          }
                        ],
                        "id": 233,
                        "name": "FunctionCall",
                        "src": "2828:45:0"
                      }
                    ],
                    "id": 234,
                    "name": "ExpressionStatement",
                    "src": "2828:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 52,
                              "type": "function (uint256,address,address)",
                              "value": "StakingNFTMinted"
                            },
                            "id": 235,
                            "name": "Identifier",
                            "src": "2889:16:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 236,
                            "name": "Identifier",
                            "src": "2906:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 237,
                                    "name": "ElementaryTypeName",
                                    "src": "2925:7:0"
                                  }
                                ],
                                "id": 238,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2925:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 139,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 239,
                                "name": "Identifier",
                                "src": "2933:11:0"
                              }
                            ],
                            "id": 240,
                            "name": "FunctionCall",
                            "src": "2925:20:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 135,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 241,
                            "name": "Identifier",
                            "src": "2947:7:0"
                          }
                        ],
                        "id": 242,
                        "name": "FunctionCall",
                        "src": "2889:66:0"
                      }
                    ],
                    "id": 243,
                    "name": "EmitStatement",
                    "src": "2884:71:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 244,
                            "name": "Identifier",
                            "src": "2966:17:0"
                          }
                        ],
                        "id": 245,
                        "name": "UnaryOperation",
                        "src": "2966:19:0"
                      }
                    ],
                    "id": 246,
                    "name": "ExpressionStatement",
                    "src": "2966:19:0"
                  }
                ],
                "id": 247,
                "name": "Block",
                "src": "2068:924:0"
              }
            ],
            "id": 248,
            "name": "FunctionDefinition",
            "src": "1946:1046:0"
          },
          {
            "attributes": {
              "functionSelector": "81927714",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeDAIx",
              "scope": 635,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 301,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 249,
                        "name": "ElementaryTypeName",
                        "src": "3021:7:0"
                      }
                    ],
                    "id": 250,
                    "name": "VariableDeclaration",
                    "src": "3021:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 301,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 2252,
                          "type": "contract PolicyBook"
                        },
                        "id": 251,
                        "name": "UserDefinedTypeName",
                        "src": "3038:10:0"
                      }
                    ],
                    "id": 252,
                    "name": "VariableDeclaration",
                    "src": "3038:22:0"
                  }
                ],
                "id": 253,
                "name": "ParameterList",
                "src": "3020:41:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 254,
                "name": "ParameterList",
                "src": "3071:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        256
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 300,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 255,
                            "name": "ElementaryTypeName",
                            "src": "3140:4:0"
                          }
                        ],
                        "id": 256,
                        "name": "VariableDeclaration",
                        "src": "3140:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6878,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 28,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 257,
                                "name": "Identifier",
                                "src": "3155:8:0"
                              }
                            ],
                            "id": 258,
                            "name": "MemberAccess",
                            "src": "3155:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 259,
                                    "name": "ElementaryTypeName",
                                    "src": "3177:7:0"
                                  }
                                ],
                                "id": 260,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3177:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 252,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 261,
                                "name": "Identifier",
                                "src": "3185:11:0"
                              }
                            ],
                            "id": 262,
                            "name": "FunctionCall",
                            "src": "3177:20:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 263,
                                    "name": "ElementaryTypeName",
                                    "src": "3199:7:0"
                                  }
                                ],
                                "id": 264,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3199:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 265,
                                "name": "Identifier",
                                "src": "3207:18:0"
                              }
                            ],
                            "id": 266,
                            "name": "FunctionCall",
                            "src": "3199:27:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 250,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 267,
                            "name": "Identifier",
                            "src": "3228:7:0"
                          }
                        ],
                        "id": 268,
                        "name": "FunctionCall",
                        "src": "3155:81:0"
                      }
                    ],
                    "id": 269,
                    "name": "VariableDeclarationStatement",
                    "src": "3140:96:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f",
                                  "typeString": "literal_string \"Staking: Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 270,
                            "name": "Identifier",
                            "src": "3254:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 271,
                            "name": "Identifier",
                            "src": "3262:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Failed to transfer DAI tokens\"",
                              "value": "Staking: Failed to transfer DAI tokens"
                            },
                            "id": 272,
                            "name": "Literal",
                            "src": "3271:40:0"
                          }
                        ],
                        "id": 273,
                        "name": "FunctionCall",
                        "src": "3254:58:0"
                      }
                    ],
                    "id": 274,
                    "name": "ExpressionStatement",
                    "src": "3254:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 275,
                            "name": "Identifier",
                            "src": "3372:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 4021,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 252,
                                      "type": "contract PolicyBook",
                                      "value": "_policyBook"
                                    },
                                    "id": 276,
                                    "name": "Identifier",
                                    "src": "3382:11:0"
                                  }
                                ],
                                "id": 277,
                                "name": "MemberAccess",
                                "src": "3382:24:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5411,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 278,
                                    "name": "Identifier",
                                    "src": "3407:10:0"
                                  }
                                ],
                                "id": 279,
                                "name": "FunctionCall",
                                "src": "3407:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BMIDAIStaking_$635",
                                          "typeString": "contract BMIDAIStaking"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 280,
                                        "name": "ElementaryTypeName",
                                        "src": "3421:7:0"
                                      }
                                    ],
                                    "id": 281,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3421:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -28,
                                      "type": "contract BMIDAIStaking",
                                      "value": "this"
                                    },
                                    "id": 282,
                                    "name": "Identifier",
                                    "src": "3429:4:0"
                                  }
                                ],
                                "id": 283,
                                "name": "FunctionCall",
                                "src": "3421:13:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 250,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 284,
                                "name": "Identifier",
                                "src": "3436:7:0"
                              }
                            ],
                            "id": 285,
                            "name": "FunctionCall",
                            "src": "3382:62:0"
                          }
                        ],
                        "id": 286,
                        "name": "Assignment",
                        "src": "3372:72:0"
                      }
                    ],
                    "id": 287,
                    "name": "ExpressionStatement",
                    "src": "3372:72:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b",
                                  "typeString": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 288,
                            "name": "Identifier",
                            "src": "3462:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 256,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 289,
                            "name": "Identifier",
                            "src": "3470:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\"",
                              "value": "Staking: Failed to transfer bmiDAIx tokens"
                            },
                            "id": 290,
                            "name": "Literal",
                            "src": "3479:44:0"
                          }
                        ],
                        "id": 291,
                        "name": "FunctionCall",
                        "src": "3462:62:0"
                      }
                    ],
                    "id": 292,
                    "name": "ExpressionStatement",
                    "src": "3462:62:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                  "typeString": "contract PolicyBook"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 248,
                              "type": "function (address,uint256,contract PolicyBook)",
                              "value": "_mintNFT"
                            },
                            "id": 293,
                            "name": "Identifier",
                            "src": "3535:8:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 294,
                                "name": "Identifier",
                                "src": "3544:10:0"
                              }
                            ],
                            "id": 295,
                            "name": "FunctionCall",
                            "src": "3544:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 250,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 296,
                            "name": "Identifier",
                            "src": "3558:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 252,
                              "type": "contract PolicyBook",
                              "value": "_policyBook"
                            },
                            "id": 297,
                            "name": "Identifier",
                            "src": "3567:11:0"
                          }
                        ],
                        "id": 298,
                        "name": "FunctionCall",
                        "src": "3535:44:0"
                      }
                    ],
                    "id": 299,
                    "name": "ExpressionStatement",
                    "src": "3535:44:0"
                  }
                ],
                "id": 300,
                "name": "Block",
                "src": "3071:515:0"
              }
            ],
            "id": 301,
            "name": "FunctionDefinition",
            "src": "3002:584:0"
          },
          {
            "attributes": {
              "functionSelector": "cd30a976",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawBMIProfit",
              "scope": 635,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 370,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 302,
                        "name": "ElementaryTypeName",
                        "src": "3619:7:0"
                      }
                    ],
                    "id": 303,
                    "name": "VariableDeclaration",
                    "src": "3619:15:0"
                  }
                ],
                "id": 304,
                "name": "ParameterList",
                "src": "3618:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 305,
                "name": "ParameterList",
                "src": "3645:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                                  "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 306,
                            "name": "Identifier",
                            "src": "3655:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 11,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 307,
                                        "name": "Identifier",
                                        "src": "3663:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 303,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 308,
                                        "name": "Identifier",
                                        "src": "3676:7:0"
                                      }
                                    ],
                                    "id": 309,
                                    "name": "IndexAccess",
                                    "src": "3663:21:0"
                                  }
                                ],
                                "id": 310,
                                "name": "MemberAccess",
                                "src": "3663:38:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 311,
                                "name": "Literal",
                                "src": "3705:1:0"
                              }
                            ],
                            "id": 312,
                            "name": "BinaryOperation",
                            "src": "3663:43:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a2074686973207374616b696e6720746f6b656e20646f65736e2774206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: this staking token doesn't exist\"",
                              "value": "Staking: this staking token doesn't exist"
                            },
                            "id": 313,
                            "name": "Literal",
                            "src": "3721:43:0"
                          }
                        ],
                        "id": 314,
                        "name": "FunctionCall",
                        "src": "3655:110:0"
                      }
                    ],
                    "id": 315,
                    "name": "ExpressionStatement",
                    "src": "3655:110:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f",
                                  "typeString": "literal_string \"Staking: Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 316,
                            "name": "Identifier",
                            "src": "3775:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ownerOfNFT",
                                      "referencedDeclaration": 3659,
                                      "type": "function (uint256) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "policyBook",
                                          "referencedDeclaration": 15,
                                          "type": "contract PolicyBook"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 40,
                                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                                  "value": "_stakersPool"
                                                },
                                                "id": 317,
                                                "name": "Identifier",
                                                "src": "3784:12:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 303,
                                                  "type": "uint256",
                                                  "value": "tokenID"
                                                },
                                                "id": 318,
                                                "name": "Identifier",
                                                "src": "3797:7:0"
                                              }
                                            ],
                                            "id": 319,
                                            "name": "IndexAccess",
                                            "src": "3784:21:0"
                                          }
                                        ],
                                        "id": 320,
                                        "name": "MemberAccess",
                                        "src": "3784:32:0"
                                      }
                                    ],
                                    "id": 321,
                                    "name": "MemberAccess",
                                    "src": "3784:43:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 303,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 322,
                                    "name": "Identifier",
                                    "src": "3828:7:0"
                                  }
                                ],
                                "id": 323,
                                "name": "FunctionCall",
                                "src": "3784:52:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5411,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 324,
                                    "name": "Identifier",
                                    "src": "3840:10:0"
                                  }
                                ],
                                "id": 325,
                                "name": "FunctionCall",
                                "src": "3840:12:0"
                              }
                            ],
                            "id": 326,
                            "name": "BinaryOperation",
                            "src": "3784:68:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Not an NFT token owner\"",
                              "value": "Staking: Not an NFT token owner"
                            },
                            "id": 327,
                            "name": "Literal",
                            "src": "3867:33:0"
                          }
                        ],
                        "id": 328,
                        "name": "FunctionCall",
                        "src": "3775:126:0"
                      }
                    ],
                    "id": 329,
                    "name": "ExpressionStatement",
                    "src": "3775:126:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        331
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "profit",
                          "scope": 369,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 330,
                            "name": "ElementaryTypeName",
                            "src": "3912:7:0"
                          }
                        ],
                        "id": 331,
                        "name": "VariableDeclaration",
                        "src": "3912:14:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getProfit",
                              "referencedDeclaration": 1456,
                              "type": "function (uint256,uint256) external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 332,
                                "name": "Identifier",
                                "src": "3929:18:0"
                              }
                            ],
                            "id": 333,
                            "name": "MemberAccess",
                            "src": "3929:28:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakingStartTime",
                              "referencedDeclaration": 11,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 40,
                                      "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 334,
                                    "name": "Identifier",
                                    "src": "3971:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 303,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 335,
                                    "name": "Identifier",
                                    "src": "3984:7:0"
                                  }
                                ],
                                "id": 336,
                                "name": "IndexAccess",
                                "src": "3971:21:0"
                              }
                            ],
                            "id": 337,
                            "name": "MemberAccess",
                            "src": "3971:38:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakedDaiAmount",
                              "referencedDeclaration": 13,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 40,
                                      "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 338,
                                    "name": "Identifier",
                                    "src": "4024:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 303,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 339,
                                    "name": "Identifier",
                                    "src": "4037:7:0"
                                  }
                                ],
                                "id": 340,
                                "name": "IndexAccess",
                                "src": "4024:21:0"
                              }
                            ],
                            "id": 341,
                            "name": "MemberAccess",
                            "src": "4024:37:0"
                          }
                        ],
                        "id": 342,
                        "name": "FunctionCall",
                        "src": "3929:142:0"
                      }
                    ],
                    "id": 343,
                    "name": "VariableDeclarationStatement",
                    "src": "3912:159:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        345
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 369,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 344,
                            "name": "ElementaryTypeName",
                            "src": "4141:4:0"
                          }
                        ],
                        "id": 345,
                        "name": "VariableDeclaration",
                        "src": "4141:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6878,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 346,
                                "name": "Identifier",
                                "src": "4156:8:0"
                              }
                            ],
                            "id": 347,
                            "name": "MemberAccess",
                            "src": "4156:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 348,
                                    "name": "ElementaryTypeName",
                                    "src": "4178:7:0"
                                  }
                                ],
                                "id": 349,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4178:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 350,
                                "name": "Identifier",
                                "src": "4186:18:0"
                              }
                            ],
                            "id": 351,
                            "name": "FunctionCall",
                            "src": "4178:27:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 352,
                                "name": "Identifier",
                                "src": "4207:10:0"
                              }
                            ],
                            "id": 353,
                            "name": "FunctionCall",
                            "src": "4207:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 331,
                              "type": "uint256",
                              "value": "profit"
                            },
                            "id": 354,
                            "name": "Identifier",
                            "src": "4221:6:0"
                          }
                        ],
                        "id": 355,
                        "name": "FunctionCall",
                        "src": "4156:72:0"
                      }
                    ],
                    "id": 356,
                    "name": "VariableDeclarationStatement",
                    "src": "4141:87:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d",
                                  "typeString": "literal_string \"Staking: Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 357,
                            "name": "Identifier",
                            "src": "4238:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 345,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 358,
                            "name": "Identifier",
                            "src": "4246:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Failed to transfer BMI tokens\"",
                              "value": "Staking: Failed to transfer BMI tokens"
                            },
                            "id": 359,
                            "name": "Literal",
                            "src": "4255:40:0"
                          }
                        ],
                        "id": 360,
                        "name": "FunctionCall",
                        "src": "4238:58:0"
                      }
                    ],
                    "id": 361,
                    "name": "ExpressionStatement",
                    "src": "4238:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 66,
                              "type": "function (uint256,uint256,address)",
                              "value": "StakingBMIProfitWithdrawn"
                            },
                            "id": 362,
                            "name": "Identifier",
                            "src": "4312:25:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 303,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 363,
                            "name": "Identifier",
                            "src": "4338:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 331,
                              "type": "uint256",
                              "value": "profit"
                            },
                            "id": 364,
                            "name": "Identifier",
                            "src": "4347:6:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 365,
                                "name": "Identifier",
                                "src": "4355:10:0"
                              }
                            ],
                            "id": 366,
                            "name": "FunctionCall",
                            "src": "4355:12:0"
                          }
                        ],
                        "id": 367,
                        "name": "FunctionCall",
                        "src": "4312:56:0"
                      }
                    ],
                    "id": 368,
                    "name": "EmitStatement",
                    "src": "4307:61:0"
                  }
                ],
                "id": 369,
                "name": "Block",
                "src": "3645:730:0"
              }
            ],
            "id": 370,
            "name": "FunctionDefinition",
            "src": "3592:783:0"
          },
          {
            "attributes": {
              "functionSelector": "a7fa3c7f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFundsWithProfit",
              "scope": 635,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 537,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 371,
                        "name": "ElementaryTypeName",
                        "src": "4414:7:0"
                      }
                    ],
                    "id": 372,
                    "name": "VariableDeclaration",
                    "src": "4414:15:0"
                  }
                ],
                "id": 373,
                "name": "ParameterList",
                "src": "4413:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 374,
                "name": "ParameterList",
                "src": "4440:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                                  "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 375,
                            "name": "Identifier",
                            "src": "4450:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 11,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 376,
                                        "name": "Identifier",
                                        "src": "4458:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 372,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 377,
                                        "name": "Identifier",
                                        "src": "4471:7:0"
                                      }
                                    ],
                                    "id": 378,
                                    "name": "IndexAccess",
                                    "src": "4458:21:0"
                                  }
                                ],
                                "id": 379,
                                "name": "MemberAccess",
                                "src": "4458:38:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 380,
                                "name": "Literal",
                                "src": "4500:1:0"
                              }
                            ],
                            "id": 381,
                            "name": "BinaryOperation",
                            "src": "4458:43:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a2074686973207374616b696e6720746f6b656e20646f65736e2774206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: this staking token doesn't exist\"",
                              "value": "Staking: this staking token doesn't exist"
                            },
                            "id": 382,
                            "name": "Literal",
                            "src": "4503:43:0"
                          }
                        ],
                        "id": 383,
                        "name": "FunctionCall",
                        "src": "4450:97:0"
                      }
                    ],
                    "id": 384,
                    "name": "ExpressionStatement",
                    "src": "4450:97:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b0250c92a54dc2c75fa70b1b07a1eaa017e185c111ff26f0804fd3319b065dcc",
                                  "typeString": "literal_string \"Staking: Funds are locked for 3 month\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 385,
                            "name": "Identifier",
                            "src": "4557:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 386,
                                    "name": "Identifier",
                                    "src": "4566:5:0"
                                  }
                                ],
                                "id": 387,
                                "name": "MemberAccess",
                                "src": "4566:15:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakingStartTime",
                                      "referencedDeclaration": 11,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 388,
                                            "name": "Identifier",
                                            "src": "4584:12:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 372,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 389,
                                            "name": "Identifier",
                                            "src": "4597:7:0"
                                          }
                                        ],
                                        "id": 390,
                                        "name": "IndexAccess",
                                        "src": "4584:21:0"
                                      }
                                    ],
                                    "id": 391,
                                    "name": "MemberAccess",
                                    "src": "4584:38:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 24,
                                      "type": "uint256",
                                      "value": "THREE_MONTH"
                                    },
                                    "id": 392,
                                    "name": "Identifier",
                                    "src": "4625:11:0"
                                  }
                                ],
                                "id": 393,
                                "name": "BinaryOperation",
                                "src": "4584:52:0"
                              }
                            ],
                            "id": 394,
                            "name": "BinaryOperation",
                            "src": "4566:70:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a2046756e647320617265206c6f636b656420666f722033206d6f6e7468",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Funds are locked for 3 month\"",
                              "value": "Staking: Funds are locked for 3 month"
                            },
                            "id": 395,
                            "name": "Literal",
                            "src": "4651:39:0"
                          }
                        ],
                        "id": 396,
                        "name": "FunctionCall",
                        "src": "4557:134:0"
                      }
                    ],
                    "id": 397,
                    "name": "ExpressionStatement",
                    "src": "4557:134:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cdfb5909131faecd21a1aef52a285eb10e247cf6c5d94971c4834de3c3be650f",
                                  "typeString": "literal_string \"Staking: Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 398,
                            "name": "Identifier",
                            "src": "4709:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ownerOfNFT",
                                      "referencedDeclaration": 3659,
                                      "type": "function (uint256) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "policyBook",
                                          "referencedDeclaration": 15,
                                          "type": "contract PolicyBook"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 40,
                                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                                  "value": "_stakersPool"
                                                },
                                                "id": 399,
                                                "name": "Identifier",
                                                "src": "4718:12:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 372,
                                                  "type": "uint256",
                                                  "value": "tokenID"
                                                },
                                                "id": 400,
                                                "name": "Identifier",
                                                "src": "4731:7:0"
                                              }
                                            ],
                                            "id": 401,
                                            "name": "IndexAccess",
                                            "src": "4718:21:0"
                                          }
                                        ],
                                        "id": 402,
                                        "name": "MemberAccess",
                                        "src": "4718:32:0"
                                      }
                                    ],
                                    "id": 403,
                                    "name": "MemberAccess",
                                    "src": "4718:43:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 372,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 404,
                                    "name": "Identifier",
                                    "src": "4762:7:0"
                                  }
                                ],
                                "id": 405,
                                "name": "FunctionCall",
                                "src": "4718:52:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5411,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 406,
                                    "name": "Identifier",
                                    "src": "4774:10:0"
                                  }
                                ],
                                "id": 407,
                                "name": "FunctionCall",
                                "src": "4774:12:0"
                              }
                            ],
                            "id": 408,
                            "name": "BinaryOperation",
                            "src": "4718:68:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Not an NFT token owner\"",
                              "value": "Staking: Not an NFT token owner"
                            },
                            "id": 409,
                            "name": "Literal",
                            "src": "4801:33:0"
                          }
                        ],
                        "id": 410,
                        "name": "FunctionCall",
                        "src": "4709:126:0"
                      }
                    ],
                    "id": 411,
                    "name": "ExpressionStatement",
                    "src": "4709:126:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        413
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingInfo",
                          "scope": 536,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct BMIDAIStaking.StakingInfo",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "StakingInfo",
                              "referencedDeclaration": 16,
                              "type": "struct BMIDAIStaking.StakingInfo"
                            },
                            "id": 412,
                            "name": "UserDefinedTypeName",
                            "src": "4853:11:0"
                          }
                        ],
                        "id": 413,
                        "name": "VariableDeclaration",
                        "src": "4853:30:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 414,
                            "name": "Identifier",
                            "src": "4886:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 372,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 415,
                            "name": "Identifier",
                            "src": "4899:7:0"
                          }
                        ],
                        "id": 416,
                        "name": "IndexAccess",
                        "src": "4886:21:0"
                      }
                    ],
                    "id": 417,
                    "name": "VariableDeclarationStatement",
                    "src": "4853:54:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        419
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "profit",
                          "scope": 536,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 418,
                            "name": "ElementaryTypeName",
                            "src": "4918:7:0"
                          }
                        ],
                        "id": 419,
                        "name": "VariableDeclaration",
                        "src": "4918:14:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getProfit",
                              "referencedDeclaration": 1456,
                              "type": "function (uint256,uint256) external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 420,
                                "name": "Identifier",
                                "src": "4935:18:0"
                              }
                            ],
                            "id": 421,
                            "name": "MemberAccess",
                            "src": "4935:28:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakingStartTime",
                              "referencedDeclaration": 11,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 40,
                                      "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 422,
                                    "name": "Identifier",
                                    "src": "4977:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 372,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 423,
                                    "name": "Identifier",
                                    "src": "4990:7:0"
                                  }
                                ],
                                "id": 424,
                                "name": "IndexAccess",
                                "src": "4977:21:0"
                              }
                            ],
                            "id": 425,
                            "name": "MemberAccess",
                            "src": "4977:38:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stakedDaiAmount",
                              "referencedDeclaration": 13,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 40,
                                      "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 426,
                                    "name": "Identifier",
                                    "src": "5029:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 372,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 427,
                                    "name": "Identifier",
                                    "src": "5042:7:0"
                                  }
                                ],
                                "id": 428,
                                "name": "IndexAccess",
                                "src": "5029:21:0"
                              }
                            ],
                            "id": 429,
                            "name": "MemberAccess",
                            "src": "5029:37:0"
                          }
                        ],
                        "id": 430,
                        "name": "FunctionCall",
                        "src": "4935:141:0"
                      }
                    ],
                    "id": 431,
                    "name": "VariableDeclarationStatement",
                    "src": "4918:158:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        433
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 536,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 432,
                            "name": "ElementaryTypeName",
                            "src": "5150:4:0"
                          }
                        ],
                        "id": 433,
                        "name": "VariableDeclaration",
                        "src": "5150:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6878,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 434,
                                "name": "Identifier",
                                "src": "5165:8:0"
                              }
                            ],
                            "id": 435,
                            "name": "MemberAccess",
                            "src": "5165:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 436,
                                    "name": "ElementaryTypeName",
                                    "src": "5187:7:0"
                                  }
                                ],
                                "id": 437,
                                "name": "ElementaryTypeNameExpression",
                                "src": "5187:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 438,
                                "name": "Identifier",
                                "src": "5195:18:0"
                              }
                            ],
                            "id": 439,
                            "name": "FunctionCall",
                            "src": "5187:27:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 440,
                                "name": "Identifier",
                                "src": "5216:10:0"
                              }
                            ],
                            "id": 441,
                            "name": "FunctionCall",
                            "src": "5216:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 419,
                              "type": "uint256",
                              "value": "profit"
                            },
                            "id": 442,
                            "name": "Identifier",
                            "src": "5230:6:0"
                          }
                        ],
                        "id": 443,
                        "name": "FunctionCall",
                        "src": "5165:72:0"
                      }
                    ],
                    "id": 444,
                    "name": "VariableDeclarationStatement",
                    "src": "5150:87:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ece72d702ae5ac740d9287b4a005bdc3d6131227e61f9363f43ce2f98f285c7d",
                                  "typeString": "literal_string \"Staking: Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 445,
                            "name": "Identifier",
                            "src": "5247:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 433,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 446,
                            "name": "Identifier",
                            "src": "5255:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Failed to transfer BMI tokens\"",
                              "value": "Staking: Failed to transfer BMI tokens"
                            },
                            "id": 447,
                            "name": "Literal",
                            "src": "5264:40:0"
                          }
                        ],
                        "id": 448,
                        "name": "FunctionCall",
                        "src": "5247:58:0"
                      }
                    ],
                    "id": 449,
                    "name": "ExpressionStatement",
                    "src": "5247:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 66,
                              "type": "function (uint256,uint256,address)",
                              "value": "StakingBMIProfitWithdrawn"
                            },
                            "id": 450,
                            "name": "Identifier",
                            "src": "5321:25:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 372,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 451,
                            "name": "Identifier",
                            "src": "5347:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 419,
                              "type": "uint256",
                              "value": "profit"
                            },
                            "id": 452,
                            "name": "Identifier",
                            "src": "5356:6:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 453,
                                "name": "Identifier",
                                "src": "5364:10:0"
                              }
                            ],
                            "id": 454,
                            "name": "FunctionCall",
                            "src": "5364:12:0"
                          }
                        ],
                        "id": 455,
                        "name": "FunctionCall",
                        "src": "5321:56:0"
                      }
                    ],
                    "id": 456,
                    "name": "EmitStatement",
                    "src": "5316:61:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 433,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 457,
                            "name": "Identifier",
                            "src": "5446:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 6878,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "contract IERC20",
                                      "value": "daiToken"
                                    },
                                    "id": 458,
                                    "name": "Identifier",
                                    "src": "5456:8:0"
                                  }
                                ],
                                "id": 459,
                                "name": "MemberAccess",
                                "src": "5456:21:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1457",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 460,
                                        "name": "ElementaryTypeName",
                                        "src": "5491:7:0"
                                      }
                                    ],
                                    "id": 461,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5491:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 32,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 462,
                                    "name": "Identifier",
                                    "src": "5499:18:0"
                                  }
                                ],
                                "id": 463,
                                "name": "FunctionCall",
                                "src": "5491:27:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                          "typeString": "contract PolicyBook"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 464,
                                        "name": "ElementaryTypeName",
                                        "src": "5533:7:0"
                                      }
                                    ],
                                    "id": 465,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5533:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBook",
                                      "referencedDeclaration": 15,
                                      "type": "contract PolicyBook"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 413,
                                          "type": "struct BMIDAIStaking.StakingInfo memory",
                                          "value": "stakingInfo"
                                        },
                                        "id": 466,
                                        "name": "Identifier",
                                        "src": "5541:11:0"
                                      }
                                    ],
                                    "id": 467,
                                    "name": "MemberAccess",
                                    "src": "5541:22:0"
                                  }
                                ],
                                "id": 468,
                                "name": "FunctionCall",
                                "src": "5533:31:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 413,
                                      "type": "struct BMIDAIStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 469,
                                    "name": "Identifier",
                                    "src": "5579:11:0"
                                  }
                                ],
                                "id": 470,
                                "name": "MemberAccess",
                                "src": "5579:27:0"
                              }
                            ],
                            "id": 471,
                            "name": "FunctionCall",
                            "src": "5456:160:0"
                          }
                        ],
                        "id": 472,
                        "name": "Assignment",
                        "src": "5446:170:0"
                      }
                    ],
                    "id": 473,
                    "name": "ExpressionStatement",
                    "src": "5446:170:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_330ca02cb02cc5744565bbaeeddb4926ece93611ee0e86900dd5f093086b147f",
                                  "typeString": "literal_string \"Staking: Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 474,
                            "name": "Identifier",
                            "src": "5626:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 433,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 475,
                            "name": "Identifier",
                            "src": "5634:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Failed to transfer DAI tokens\"",
                              "value": "Staking: Failed to transfer DAI tokens"
                            },
                            "id": 476,
                            "name": "Literal",
                            "src": "5643:40:0"
                          }
                        ],
                        "id": 477,
                        "name": "FunctionCall",
                        "src": "5626:58:0"
                      }
                    ],
                    "id": 478,
                    "name": "ExpressionStatement",
                    "src": "5626:58:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 433,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 479,
                            "name": "Identifier",
                            "src": "5751:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transfer",
                                  "referencedDeclaration": 3984,
                                  "type": "function (address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBook",
                                      "referencedDeclaration": 15,
                                      "type": "contract PolicyBook"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 413,
                                          "type": "struct BMIDAIStaking.StakingInfo memory",
                                          "value": "stakingInfo"
                                        },
                                        "id": 480,
                                        "name": "Identifier",
                                        "src": "5761:11:0"
                                      }
                                    ],
                                    "id": 481,
                                    "name": "MemberAccess",
                                    "src": "5761:22:0"
                                  }
                                ],
                                "id": 482,
                                "name": "MemberAccess",
                                "src": "5761:31:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5411,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 483,
                                    "name": "Identifier",
                                    "src": "5793:10:0"
                                  }
                                ],
                                "id": 484,
                                "name": "FunctionCall",
                                "src": "5793:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 413,
                                      "type": "struct BMIDAIStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 485,
                                    "name": "Identifier",
                                    "src": "5807:11:0"
                                  }
                                ],
                                "id": 486,
                                "name": "MemberAccess",
                                "src": "5807:27:0"
                              }
                            ],
                            "id": 487,
                            "name": "FunctionCall",
                            "src": "5761:74:0"
                          }
                        ],
                        "id": 488,
                        "name": "Assignment",
                        "src": "5751:84:0"
                      }
                    ],
                    "id": 489,
                    "name": "ExpressionStatement",
                    "src": "5751:84:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076400fadca4c15db95757a4325b8cdcae1e38178ea34319c9be17945f67267b",
                                  "typeString": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 490,
                            "name": "Identifier",
                            "src": "5845:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 433,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 491,
                            "name": "Identifier",
                            "src": "5853:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a204661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: Failed to transfer bmiDAIx tokens\"",
                              "value": "Staking: Failed to transfer bmiDAIx tokens"
                            },
                            "id": 492,
                            "name": "Literal",
                            "src": "5862:44:0"
                          }
                        ],
                        "id": 493,
                        "name": "FunctionCall",
                        "src": "5845:62:0"
                      }
                    ],
                    "id": 494,
                    "name": "ExpressionStatement",
                    "src": "5845:62:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 72,
                              "type": "function (uint256,address)",
                              "value": "StakingFundsWithdrawn"
                            },
                            "id": 495,
                            "name": "Identifier",
                            "src": "5923:21:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 372,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 496,
                            "name": "Identifier",
                            "src": "5945:7:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 497,
                                "name": "Identifier",
                                "src": "5954:10:0"
                              }
                            ],
                            "id": 498,
                            "name": "FunctionCall",
                            "src": "5954:12:0"
                          }
                        ],
                        "id": 499,
                        "name": "FunctionCall",
                        "src": "5923:44:0"
                      }
                    ],
                    "id": 500,
                    "name": "EmitStatement",
                    "src": "5918:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "burnNFT",
                              "referencedDeclaration": 5399,
                              "type": "function (address,uint256,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 15,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 501,
                                        "name": "Identifier",
                                        "src": "5978:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 372,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 502,
                                        "name": "Identifier",
                                        "src": "5991:7:0"
                                      }
                                    ],
                                    "id": 503,
                                    "name": "IndexAccess",
                                    "src": "5978:21:0"
                                  }
                                ],
                                "id": 504,
                                "name": "MemberAccess",
                                "src": "5978:32:0"
                              }
                            ],
                            "id": 505,
                            "name": "MemberAccess",
                            "src": "5978:40:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5411,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 506,
                                "name": "Identifier",
                                "src": "6019:10:0"
                              }
                            ],
                            "id": 507,
                            "name": "FunctionCall",
                            "src": "6019:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 372,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 508,
                            "name": "Identifier",
                            "src": "6033:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 509,
                            "name": "Literal",
                            "src": "6042:1:0"
                          }
                        ],
                        "id": 510,
                        "name": "FunctionCall",
                        "src": "5978:66:0"
                      }
                    ],
                    "id": 511,
                    "name": "ExpressionStatement",
                    "src": "5978:66:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "remove",
                              "referencedDeclaration": 8234,
                              "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 512,
                                    "name": "Identifier",
                                    "src": "6055:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 5411,
                                          "type": "function () view returns (address payable)",
                                          "value": "_msgSender"
                                        },
                                        "id": 513,
                                        "name": "Identifier",
                                        "src": "6069:10:0"
                                      }
                                    ],
                                    "id": 514,
                                    "name": "FunctionCall",
                                    "src": "6069:12:0"
                                  }
                                ],
                                "id": 515,
                                "name": "IndexAccess",
                                "src": "6055:27:0"
                              }
                            ],
                            "id": 516,
                            "name": "MemberAccess",
                            "src": "6055:34:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 372,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 517,
                            "name": "Identifier",
                            "src": "6090:7:0"
                          }
                        ],
                        "id": 518,
                        "name": "FunctionCall",
                        "src": "6055:43:0"
                      }
                    ],
                    "id": 519,
                    "name": "ExpressionStatement",
                    "src": "6055:43:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 58,
                              "type": "function (uint256,address)",
                              "value": "StakingNFTBurned"
                            },
                            "id": 520,
                            "name": "Identifier",
                            "src": "6114:16:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 372,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 521,
                            "name": "Identifier",
                            "src": "6131:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2252",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 522,
                                    "name": "ElementaryTypeName",
                                    "src": "6140:7:0"
                                  }
                                ],
                                "id": 523,
                                "name": "ElementaryTypeNameExpression",
                                "src": "6140:7:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 15,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 524,
                                        "name": "Identifier",
                                        "src": "6148:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 372,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 525,
                                        "name": "Identifier",
                                        "src": "6161:7:0"
                                      }
                                    ],
                                    "id": 526,
                                    "name": "IndexAccess",
                                    "src": "6148:21:0"
                                  }
                                ],
                                "id": 527,
                                "name": "MemberAccess",
                                "src": "6148:32:0"
                              }
                            ],
                            "id": 528,
                            "name": "FunctionCall",
                            "src": "6140:41:0"
                          }
                        ],
                        "id": 529,
                        "name": "FunctionCall",
                        "src": "6114:68:0"
                      }
                    ],
                    "id": 530,
                    "name": "EmitStatement",
                    "src": "6109:73:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 531,
                                "name": "Identifier",
                                "src": "6200:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 372,
                                  "type": "uint256",
                                  "value": "tokenID"
                                },
                                "id": 532,
                                "name": "Identifier",
                                "src": "6213:7:0"
                              }
                            ],
                            "id": 533,
                            "name": "IndexAccess",
                            "src": "6200:21:0"
                          }
                        ],
                        "id": 534,
                        "name": "UnaryOperation",
                        "src": "6193:28:0"
                      }
                    ],
                    "id": 535,
                    "name": "ExpressionStatement",
                    "src": "6193:28:0"
                  }
                ],
                "id": 536,
                "name": "Block",
                "src": "4440:1796:0"
              }
            ],
            "id": 537,
            "name": "FunctionDefinition",
            "src": "4381:1855:0"
          },
          {
            "attributes": {
              "functionSelector": "96344eaf",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakingInfoByToken",
              "scope": 635,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 559,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 538,
                        "name": "ElementaryTypeName",
                        "src": "6277:7:0"
                      }
                    ],
                    "id": 539,
                    "name": "VariableDeclaration",
                    "src": "6277:15:0"
                  }
                ],
                "id": 540,
                "name": "ParameterList",
                "src": "6276:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 559,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct BMIDAIStaking.StakingInfo",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "StakingInfo",
                          "referencedDeclaration": 16,
                          "type": "struct BMIDAIStaking.StakingInfo"
                        },
                        "id": 541,
                        "name": "UserDefinedTypeName",
                        "src": "6315:11:0"
                      }
                    ],
                    "id": 542,
                    "name": "VariableDeclaration",
                    "src": "6315:18:0"
                  }
                ],
                "id": 543,
                "name": "ParameterList",
                "src": "6314:20:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2c09184ab1943c0f3fd761471a561c0df68b970d722961c36928d2ccc165a05e",
                                  "typeString": "literal_string \"Staking: this staking token doesn't exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 544,
                            "name": "Identifier",
                            "src": "6345:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 11,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 545,
                                        "name": "Identifier",
                                        "src": "6353:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 539,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 546,
                                        "name": "Identifier",
                                        "src": "6366:7:0"
                                      }
                                    ],
                                    "id": 547,
                                    "name": "IndexAccess",
                                    "src": "6353:21:0"
                                  }
                                ],
                                "id": 548,
                                "name": "MemberAccess",
                                "src": "6353:38:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 549,
                                "name": "Literal",
                                "src": "6395:1:0"
                              }
                            ],
                            "id": 550,
                            "name": "BinaryOperation",
                            "src": "6353:43:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a2074686973207374616b696e6720746f6b656e20646f65736e2774206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: this staking token doesn't exist\"",
                              "value": "Staking: this staking token doesn't exist"
                            },
                            "id": 551,
                            "name": "Literal",
                            "src": "6398:43:0"
                          }
                        ],
                        "id": 552,
                        "name": "FunctionCall",
                        "src": "6345:97:0"
                      }
                    ],
                    "id": 553,
                    "name": "ExpressionStatement",
                    "src": "6345:97:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 543
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 554,
                            "name": "Identifier",
                            "src": "6460:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 539,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 555,
                            "name": "Identifier",
                            "src": "6473:7:0"
                          }
                        ],
                        "id": 556,
                        "name": "IndexAccess",
                        "src": "6460:21:0"
                      }
                    ],
                    "id": 557,
                    "name": "Return",
                    "src": "6453:28:0"
                  }
                ],
                "id": 558,
                "name": "Block",
                "src": "6335:153:0"
              }
            ],
            "id": 559,
            "name": "FunctionDefinition",
            "src": "6249:239:0"
          },
          {
            "attributes": {
              "functionSelector": "12ed9d29",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "howManyStakings",
              "scope": 635,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 583,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 560,
                        "name": "ElementaryTypeName",
                        "src": "6519:7:0"
                      }
                    ],
                    "id": 561,
                    "name": "VariableDeclaration",
                    "src": "6519:13:0"
                  }
                ],
                "id": 562,
                "name": "ParameterList",
                "src": "6518:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 583,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 563,
                        "name": "ElementaryTypeName",
                        "src": "6555:7:0"
                      }
                    ],
                    "id": 564,
                    "name": "VariableDeclaration",
                    "src": "6555:7:0"
                  }
                ],
                "id": 565,
                "name": "ParameterList",
                "src": "6554:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e2f8f63fc4c52ae3bb24c42c2db314ae940b4e1dd755d4f3e4432e5a707fcf2c",
                                  "typeString": "literal_string \"Staking: balance query for the zero address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 566,
                            "name": "Identifier",
                            "src": "6574:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 561,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 567,
                                "name": "Identifier",
                                "src": "6582:5:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 568,
                                        "name": "ElementaryTypeName",
                                        "src": "6591:7:0"
                                      }
                                    ],
                                    "id": 569,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "6591:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 570,
                                    "name": "Literal",
                                    "src": "6599:1:0"
                                  }
                                ],
                                "id": 571,
                                "name": "FunctionCall",
                                "src": "6591:10:0"
                              }
                            ],
                            "id": 572,
                            "name": "BinaryOperation",
                            "src": "6582:19:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5374616b696e673a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Staking: balance query for the zero address\"",
                              "value": "Staking: balance query for the zero address"
                            },
                            "id": 573,
                            "name": "Literal",
                            "src": "6603:45:0"
                          }
                        ],
                        "id": 574,
                        "name": "FunctionCall",
                        "src": "6574:75:0"
                      }
                    ],
                    "id": 575,
                    "name": "ExpressionStatement",
                    "src": "6574:75:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 565
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": 8268,
                              "type": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 576,
                                    "name": "Identifier",
                                    "src": "6667:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 561,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 577,
                                    "name": "Identifier",
                                    "src": "6681:5:0"
                                  }
                                ],
                                "id": 578,
                                "name": "IndexAccess",
                                "src": "6667:20:0"
                              }
                            ],
                            "id": 579,
                            "name": "MemberAccess",
                            "src": "6667:27:0"
                          }
                        ],
                        "id": 580,
                        "name": "FunctionCall",
                        "src": "6667:29:0"
                      }
                    ],
                    "id": 581,
                    "name": "Return",
                    "src": "6660:36:0"
                  }
                ],
                "id": 582,
                "name": "Block",
                "src": "6564:139:0"
              }
            ],
            "id": 583,
            "name": "FunctionDefinition",
            "src": "6494:209:0"
          },
          {
            "attributes": {
              "functionSelector": "69c54086",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getStakingTokensByOwner",
              "scope": 635,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 634,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 584,
                        "name": "ElementaryTypeName",
                        "src": "6742:7:0"
                      }
                    ],
                    "id": 585,
                    "name": "VariableDeclaration",
                    "src": "6742:13:0"
                  }
                ],
                "id": 586,
                "name": "ParameterList",
                "src": "6741:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 634,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 587,
                            "name": "ElementaryTypeName",
                            "src": "6778:7:0"
                          }
                        ],
                        "id": 588,
                        "name": "ArrayTypeName",
                        "src": "6778:9:0"
                      }
                    ],
                    "id": 589,
                    "name": "VariableDeclaration",
                    "src": "6778:16:0"
                  }
                ],
                "id": 590,
                "name": "ParameterList",
                "src": "6777:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        592
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "size",
                          "scope": 633,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 591,
                            "name": "ElementaryTypeName",
                            "src": "6806:7:0"
                          }
                        ],
                        "id": 592,
                        "name": "VariableDeclaration",
                        "src": "6806:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 583,
                              "type": "function (address) view returns (uint256)",
                              "value": "howManyStakings"
                            },
                            "id": 593,
                            "name": "Identifier",
                            "src": "6821:15:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 585,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 594,
                            "name": "Identifier",
                            "src": "6837:5:0"
                          }
                        ],
                        "id": 595,
                        "name": "FunctionCall",
                        "src": "6821:22:0"
                      }
                    ],
                    "id": 596,
                    "name": "VariableDeclarationStatement",
                    "src": "6806:37:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        601
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "tokens",
                          "scope": 633,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 599,
                                "name": "ElementaryTypeName",
                                "src": "6862:7:0"
                              }
                            ],
                            "id": 600,
                            "name": "ArrayTypeName",
                            "src": "6862:9:0"
                          }
                        ],
                        "id": 601,
                        "name": "VariableDeclaration",
                        "src": "6862:23:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 602,
                                    "name": "ElementaryTypeName",
                                    "src": "6892:7:0"
                                  }
                                ],
                                "id": 603,
                                "name": "ArrayTypeName",
                                "src": "6892:9:0"
                              }
                            ],
                            "id": 604,
                            "name": "NewExpression",
                            "src": "6888:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 592,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 605,
                            "name": "Identifier",
                            "src": "6902:4:0"
                          }
                        ],
                        "id": 606,
                        "name": "FunctionCall",
                        "src": "6888:19:0"
                      }
                    ],
                    "id": 607,
                    "name": "VariableDeclarationStatement",
                    "src": "6862:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            609
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 630,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 608,
                                "name": "ElementaryTypeName",
                                "src": "6923:7:0"
                              }
                            ],
                            "id": 609,
                            "name": "VariableDeclaration",
                            "src": "6923:9:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 610,
                            "name": "Literal",
                            "src": "6935:1:0"
                          }
                        ],
                        "id": 611,
                        "name": "VariableDeclarationStatement",
                        "src": "6923:13:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 609,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 612,
                            "name": "Identifier",
                            "src": "6938:1:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 592,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 613,
                            "name": "Identifier",
                            "src": "6942:4:0"
                          }
                        ],
                        "id": 614,
                        "name": "BinaryOperation",
                        "src": "6938:8:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 609,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 615,
                                "name": "Identifier",
                                "src": "6948:1:0"
                              }
                            ],
                            "id": 616,
                            "name": "UnaryOperation",
                            "src": "6948:3:0"
                          }
                        ],
                        "id": 617,
                        "name": "ExpressionStatement",
                        "src": "6948:3:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 601,
                                          "type": "uint256[] memory",
                                          "value": "tokens"
                                        },
                                        "id": 618,
                                        "name": "Identifier",
                                        "src": "6975:6:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 609,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 619,
                                        "name": "Identifier",
                                        "src": "6982:1:0"
                                      }
                                    ],
                                    "id": 620,
                                    "name": "IndexAccess",
                                    "src": "6975:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "at",
                                          "referencedDeclaration": 8288,
                                          "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct EnumerableSet.UintSet storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 36,
                                                  "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                                  "value": "_holderTokens"
                                                },
                                                "id": 621,
                                                "name": "Identifier",
                                                "src": "6987:13:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 585,
                                                  "type": "address",
                                                  "value": "owner"
                                                },
                                                "id": 622,
                                                "name": "Identifier",
                                                "src": "7001:5:0"
                                              }
                                            ],
                                            "id": 623,
                                            "name": "IndexAccess",
                                            "src": "6987:20:0"
                                          }
                                        ],
                                        "id": 624,
                                        "name": "MemberAccess",
                                        "src": "6987:23:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 609,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 625,
                                        "name": "Identifier",
                                        "src": "7011:1:0"
                                      }
                                    ],
                                    "id": 626,
                                    "name": "FunctionCall",
                                    "src": "6987:26:0"
                                  }
                                ],
                                "id": 627,
                                "name": "Assignment",
                                "src": "6975:38:0"
                              }
                            ],
                            "id": 628,
                            "name": "ExpressionStatement",
                            "src": "6975:38:0"
                          }
                        ],
                        "id": 629,
                        "name": "Block",
                        "src": "6961:63:0"
                      }
                    ],
                    "id": 630,
                    "name": "ForStatement",
                    "src": "6918:106:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 590
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 601,
                          "type": "uint256[] memory",
                          "value": "tokens"
                        },
                        "id": 631,
                        "name": "Identifier",
                        "src": "7041:6:0"
                      }
                    ],
                    "id": 632,
                    "name": "Return",
                    "src": "7034:13:0"
                  }
                ],
                "id": 633,
                "name": "Block",
                "src": "6796:268:0"
              }
            ],
            "id": 634,
            "name": "FunctionDefinition",
            "src": "6709:355:0"
          }
        ],
        "id": 635,
        "name": "ContractDefinition",
        "src": "300:6766:0"
      }
    ],
    "id": 636,
    "name": "SourceUnit",
    "src": "32:7035:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-27T14:17:23.919Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "_currentNFTMintID": {
        "details": "cruсial to start from 2"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}