{
  "contractName": "BMIDAIStaking",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "policyBookAddress",
          "type": "address"
        }
      ],
      "name": "StakingNFTBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "policyBookAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "StakingNFTMinted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defiYieldGenerator",
      "outputs": [
        {
          "internalType": "contract DefiYieldGenerator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "contract PolicyBook",
          "name": "_policyBook",
          "type": "address"
        }
      ],
      "name": "stakeDAIx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawBMIProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsWithProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "stakingInfoByToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedDaiAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract PolicyBook",
              "name": "policyBook",
              "type": "address"
            }
          ],
          "internalType": "struct BMIDAIStaking.StakingInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "howManyStakings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getStakingTokensByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"}],\"name\":\"StakingNFTBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"StakingNFTMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defiYieldGenerator\",\"outputs\":[{\"internalType\":\"contract DefiYieldGenerator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getStakingTokensByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"howManyStakings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"_policyBook\",\"type\":\"address\"}],\"name\":\"stakeDAIx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"stakingInfoByToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedDaiAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"policyBook\",\"type\":\"address\"}],\"internalType\":\"struct BMIDAIStaking.StakingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawBMIProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsWithProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_currentNFTMintID\":{\"details\":\"crutial to start from 2\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol\":\"BMIDAIStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol\":{\"keccak256\":\"0xb31c2dc6139c65bd752d471e36ee3c338be8f248d795d21f66381203df867aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f029aa800a8725229e1a42f3d0d5ea061fe377ed79976f484847be67d0a1226\",\"dweb:/ipfs/QmRxLSW5jPTkDAeZNeHZcEQaADkQmguYPx68pVsSo9jSkj\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0xf099b29ee740de399ef095c4c85d7ac1caa5723dbf47805fa3ee46401fc2ae99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f7fe997f7ce94e17934a67f1fdba12310ffb06e0d9ed84f427d82bb4e173132\",\"dweb:/ipfs/QmVuqRJJHA8x3zFzE7682aNj6v4meLEo8ejioZ99CQBUEX\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0xa4d48a8b7f3c70c70c3643a7c94ac0d73a1ca399d8d0e08e181bb2730cd429ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0218f4cfcfa57d8499531504346c7c5f831a1419e80b2a77442083dc843366e0\",\"dweb:/ipfs/Qma3NDpEmSDLsihYnVLQuHj4dePNGxyKG58EMV5hY5EQYC\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol\":{\"keccak256\":\"0x965716074e1eec3b4b40020469a01efee8b175fd637cfec8e0c45b2b480dd9e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d950e759282c332d392b7ad84fa761e91dc4c2d3ff96c362e5883d2cb02c1ec8\",\"dweb:/ipfs/QmSiDDFtYq6PELKpJZiQj6YF68W8bJw6uvL4VmSzvDB5a1\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x51398e09dd5e93c7ad6e805d4959b495117a94d99ffe2a228484d833c6553df8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a19ef2f50feb5633095b2981b61814e7264c2e51b3376f325ba2a1986a6d8f\",\"dweb:/ipfs/QmVt7H1UykV5Fu5oaYmUeFRNhuQyPoMePCKPr9nrDLhTmV\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x5dffaaf6e0ece56b03c76eb5d57e758485fc2cca0c46913a2ee2135a5c518493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2aca8141f40390bbd21022d61fac04651cb3ff91dc7702c2654d36d79b188c\",\"dweb:/ipfs/Qmf6xXSP2yasVTD9RaG1rgnY85bPCAtNnBsXxzA1bvHgJa\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155.sol\":{\"keccak256\":\"0x02dbe9d8ee275045976255b56fa80e81e549243822876b18f3c4d010c00b0b24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e583135bebe1c25db10fef69f13023c6f6c9c14e3aa986de68e08b6b1766fc6c\",\"dweb:/ipfs/QmPtQic431kp3ECZJweQom9VxynGK9Nsc6K8iUQ9b7ocKs\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155NFTMintableBurnable.sol\":{\"keccak256\":\"0x21efbfe81e8ade04c327be3d28ab7724c67d721ec7c105208521cf3d03b4508f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1174ce958d147a9f4fb0deea73a84769ded2f684a2689d39d55e72e05170696c\",\"dweb:/ipfs/QmUGWuQcPnqgCCnryt8zHTQTR9DaYCfycX8DTgirKYrkJF\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x6080604052600260075534801561001557600080fd5b50600061002061006f565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610073565b3390565b611e57806100826000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a7fa3c7f1161008c578063d0a43afd11610066578063d0a43afd146101c0578063d77379f1146101d3578063d98d0c7e146101db578063f2fde38b146101e3576100ea565b8063a7fa3c7f14610192578063be22f546146101a5578063cd30a976146101ad576100ea565b806381927714116100c85780638192771414610142578063843fe5f0146101555780638da5cb5b1461016a57806396344eaf14610172576100ea565b806312ed9d29146100ef57806369c5408614610118578063715018a614610138575b600080fd5b6101026100fd3660046118e1565b6101f6565b60405161010f9190611d44565b60405180910390f35b61012b6101263660046118e1565b61024e565b60405161010f9190611aef565b6101406102f7565b005b610140610150366004611a1e565b6103c3565b61015d610547565b60405161010f9190611a4d565b61015d610556565b6101856101803660046119ee565b610565565b60405161010f9190611d1a565b6101406101a03660046119ee565b6105af565b61015d610b1c565b6101406101bb3660046119ee565b610b2b565b6101406101ce3660046118e1565b610d6d565b61015d6111f1565b61015d611200565b6101406101f13660046118e1565b61120f565b60006001600160a01b0382166102275760405162461bcd60e51b815260040161021e90611bbb565b60405180910390fd5b6001600160a01b038216600090815260056020526040902061024890611331565b92915050565b6060600061025b836101f6565b905060608167ffffffffffffffff8111801561027657600080fd5b506040519080825280602002602001820160405280156102a0578160200160208202803683370190505b50905060005b828110156102ef576001600160a01b03851660009081526005602052604090206102d0908261133c565b8282815181106102dc57fe5b60209081029190910101526001016102a6565b509392505050565b6102ff61134f565b6000546001600160a01b03908116911614610361576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600254600480546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000936001600160a01b03908116936323b872dd9361041793889390911691899101611a61565b602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611919565b9050806104885760405162461bcd60e51b815260040161021e90611c18565b816001600160a01b03166323b872dd61049f61134f565b30866040518463ffffffff1660e01b81526004016104bf93929190611a61565b602060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190611919565b9050806105305760405162461bcd60e51b815260040161021e90611cbd565b61054261053b61134f565b8484611353565b505050565b6004546001600160a01b031681565b6000546001600160a01b031690565b61056d6118b7565b50600090815260066020908152604091829020825160608101845281548152600182015492810192909252600201546001600160a01b03169181019190915290565b6000818152600660205260409020546276a7000142116105e15760405162461bcd60e51b815260040161021e90611c4f565b6105e961134f565b600082815260066020526040908190206002015490517f2d8a746e0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169290911690632d8a746e90610646908590600401611d44565b60206040518083038186803b15801561065e57600080fd5b505afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069691906118fd565b6001600160a01b0316146106bc5760405162461bcd60e51b815260040161021e90611b84565b6106c46118b7565b506000818152600660209081526040808320815160608101835281548152600182015493810193909352600201546001600160a01b0390811691830191909152600354600454929392908216916323b872dd911661072061134f565b6004805460008981526006602052604090819020805460019091015491517ff6b15fe60000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363f6b15fe69361077e939101611d83565b602060405180830381600087803b15801561079857600080fd5b505af11580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190611a06565b6040518463ffffffff1660e01b81526004016107ee93929190611a61565b602060405180830381600087803b15801561080857600080fd5b505af115801561081c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190611919565b90508061085f5760405162461bcd60e51b815260040161021e90611c86565b60025460048054604080860151602087015191517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03958616956323b872dd956108b795909116939101611a61565b602060405180830381600087803b1580156108d157600080fd5b505af11580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190611919565b9050806109285760405162461bcd60e51b815260040161021e90611c18565b81604001516001600160a01b031663a9059cbb61094361134f565b84602001516040518363ffffffff1660e01b8152600401610965929190611a85565b602060405180830381600087803b15801561097f57600080fd5b505af1158015610993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b79190611919565b9050806109d65760405162461bcd60e51b815260040161021e90611cbd565b6000838152600660205260409020600201546001600160a01b0316631cc509fd6109fe61134f565b8560016040518463ffffffff1660e01b8152600401610a1f93929190611a9e565b600060405180830381600087803b158015610a3957600080fd5b505af1158015610a4d573d6000803e3d6000fd5b50505050610a808360056000610a6161134f565b6001600160a01b031681526020810191909152604001600020906116f1565b50600083815260066020526040908190206002015490517f86ef8fcef996b7ddf091f470e8f3ab619ca323d0aa2329e3d0f7c00d0d7f8c0191610ace9186916001600160a01b031690611d4d565b60405180910390a150506000908152600660205260408120818155600181019190915560020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6002546001600160a01b031681565b610b3361134f565b600082815260066020526040908190206002015490517f2d8a746e0000000000000000000000000000000000000000000000000000000081526001600160a01b039283169290911690632d8a746e90610b90908590600401611d44565b60206040518083038186803b158015610ba857600080fd5b505afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be091906118fd565b6001600160a01b031614610c065760405162461bcd60e51b815260040161021e90611b84565b6003546004546000916001600160a01b03908116916323b872dd9116610c2a61134f565b6004805460008881526006602052604090819020805460019091015491517ff6b15fe60000000000000000000000000000000000000000000000000000000081526001600160a01b039093169363f6b15fe693610c88939101611d83565b602060405180830381600087803b158015610ca257600080fd5b505af1158015610cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda9190611a06565b6040518463ffffffff1660e01b8152600401610cf893929190611a61565b602060405180830381600087803b158015610d1257600080fd5b505af1158015610d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4a9190611919565b905080610d695760405162461bcd60e51b815260040161021e90611c86565b5050565b610d7561134f565b6000546001600160a01b03908116911614610dd7576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b158015610e6457600080fd5b505afa158015610e78573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ebe9190810190611939565b6040518263ffffffff1660e01b8152600401610eda9190611b33565b60206040518083038186803b158015610ef257600080fd5b505afa158015610f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2a91906118fd565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b03166335817773826001600160a01b03166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b158015610f9857600080fd5b505afa158015610fac573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ff29190810190611939565b6040518263ffffffff1660e01b815260040161100e9190611b33565b60206040518083038186803b15801561102657600080fd5b505afa15801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e91906118fd565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600154604080517fc0ed452f00000000000000000000000000000000000000000000000000000000815290519190921691633581777391839163c0ed452f916004808301926000929190829003018186803b1580156110f057600080fd5b505afa158015611104573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261114a9190810190611939565b6040518263ffffffff1660e01b81526004016111669190611b33565b60206040518083038186803b15801561117e57600080fd5b505afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b691906118fd565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b6003546001600160a01b031681565b6001546001600160a01b031681565b61121761134f565b6000546001600160a01b03908116911614611279576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166112be5760405162461bcd60e51b8152600401808060200182810382526026815260200180611dfc6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610248826116fd565b60006113488383611701565b9392505050565b3390565b6040517ff5b100ea0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0383169063f5b100ea9061139b908790600401611a4d565b60206040518083038186803b1580156113b357600080fd5b505afa1580156113c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113eb9190611a06565b90508260005b82811015611595576040517f1dcb46f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b03861690631dcb46f690611443908a908690600401611a85565b60206040518083038186803b15801561145b57600080fd5b505afa15801561146f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114939190611a06565b6000818152600660205260409081902060019081015491517f1cc509fd00000000000000000000000000000000000000000000000000000000815295909101949192506001600160a01b03871691631cc509fd916114f7918b918691600401611a9e565b600060405180830381600087803b15801561151157600080fd5b505af1158015611525573d6000803e3d6000fd5b5050506001600160a01b038816600090815260056020526040902061154b9150826116f1565b50600090815260066020526040812081815560018082019290925560020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055016113f1565b506007546040517f4b6411810000000000000000000000000000000000000000000000000000000081526001600160a01b03851691634b641181916115e1918991600190600401611abf565b600060405180830381600087803b1580156115fb57600080fd5b505af115801561160f573d6000803e3d6000fd5b50506040805160608101825242815260208082018681526001600160a01b038981168486019081526007805460009081526006865287812096518755935160018701559051600290950180547fffffffffffffffffffffffff000000000000000000000000000000000000000016958316959095179094559254928b1681526005909152919091206116a393509150611765565b507f36200d06a5134b8842f6a7aee4c9a2a2e4834bf38af1eb011719654f03449d1660075484876040516116d993929190611d64565b60405180910390a15050600780546001019055505050565b60006113488383611771565b5490565b815460009082106117435760405162461bcd60e51b8152600401808060200182810382526022815260200180611dda6022913960400191505060405180910390fd5b82600001828154811061175257fe5b9060005260206000200154905092915050565b60006113488383611855565b6000818152600183016020526040812054801561184b5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191908101906000908790839081106117c257fe5b90600052602060002001549050808760000184815481106117df57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061180f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610248565b6000915050610248565b6000611861838361189f565b61189757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610248565b506000610248565b60009081526001919091016020526040902054151590565b6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b6000602082840312156118f2578081fd5b813561134881611dc1565b60006020828403121561190e578081fd5b815161134881611dc1565b60006020828403121561192a578081fd5b81518015158114611348578182fd5b60006020828403121561194a578081fd5b815167ffffffffffffffff80821115611961578283fd5b818401915084601f830112611974578283fd5b81518181111561198057fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011682010181811084821117156119bc57fe5b6040528181528382016020018710156119d3578485fd5b6119e4826020830160208701611d91565b9695505050505050565b6000602082840312156119ff578081fd5b5035919050565b600060208284031215611a17578081fd5b5051919050565b60008060408385031215611a30578081fd5b823591506020830135611a4281611dc1565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039390931683526020830191909152604082015260806060820181905260009082015260a00190565b6020808252825182820181905260009190848201906040850190845b81811015611b2757835183529284019291840191600101611b0b565b50909695505050505050565b6000602082528251806020840152611b52816040850160208701611d91565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526016908201527f4e6f7420616e204e465420746f6b656e206f776e657200000000000000000000604082015260600190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f4661696c656420746f207472616e736665722044414920746f6b656e73000000604082015260600190565b6020808252601c908201527f46756e647320617265206c6f636b656420666f722033206d6f6e746800000000604082015260600190565b6020808252601d908201527f4661696c656420746f207472616e7366657220424d4920746f6b656e73000000604082015260600190565b60208082526021908201527f4661696c656420746f207472616e7366657220626d694441497820746f6b656e60408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b81518152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b03918216602084015216604082015260600190565b918252602082015260400190565b60005b83811015611dac578181015183820152602001611d94565b83811115611dbb576000848401525b50505050565b6001600160a01b0381168114611dd657600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212202de3388d0812b26f81951f02d15243adf27dffc892eff13b18575750c58a149564736f6c63430007040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11927:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:37",
                "type": ""
              }
            ],
            "src": "14:259:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:37",
                "type": ""
              }
            ],
            "src": "278:263:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:37"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:37",
                "type": ""
              }
            ],
            "src": "546:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "954:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1025:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1038:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1029:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1097:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1070:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1070:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1122:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1243",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:37",
                "type": ""
              }
            ],
            "src": "848:285:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:868:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1275:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1284:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1292:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1277:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1277:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1250:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1259:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1271:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:30:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1324:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:16:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1314:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1349:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1359:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1353:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1389:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1386:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1464:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1449:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:22:37"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1443:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1528:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1498:2:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1502:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:13:37"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1509:7:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1480:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1554:23:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1574:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1568:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:9:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1558:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1604:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1606:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1606:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1592:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1600:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1626:23:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1640:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:9:37"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1630:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1658:130:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1684:6:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1708:4:37",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:17:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1715:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1692:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1692:90:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:103:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:112:37"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1662:10:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1849:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1806:10:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1818:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1803:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1826:10:37"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1823:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1800:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:46:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1797:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1880:10:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1869:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1869:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1907:6:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:22:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1972:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1981:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1989:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1974:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1974:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1974:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1945:2:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1949:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1941:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1941:15:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1958:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1937:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1963:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1934:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:37:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1931:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2033:2:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2037:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:11:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2046:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2054:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:15:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2059:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2007:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2075:16:37",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2085:6:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1195:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1206:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1218:6:37",
                "type": ""
              }
            ],
            "src": "1138:959:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2172:120:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2218:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2227:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2235:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2220:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2220:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2220:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2193:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2202:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2189:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2189:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2214:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2185:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2276:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2263:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2263:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2253:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2138:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2149:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2161:6:37",
                "type": ""
              }
            ],
            "src": "2102:190:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2378:113:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2424:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2433:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2441:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2426:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2426:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2426:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2399:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2395:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2395:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2420:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2391:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2388:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2459:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2475:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2469:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:16:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2459:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2344:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2355:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2367:6:37",
                "type": ""
              }
            ],
            "src": "2297:194:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2602:240:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2648:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2657:6:37"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2665:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2650:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2650:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2650:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2623:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2632:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2619:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2619:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2644:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2615:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2615:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2612:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2683:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2706:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2693:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2683:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2725:45:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2755:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2766:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2751:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2751:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2738:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:32:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2729:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2806:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2779:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2821:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2831:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2821:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_PolicyBook_$2176",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2560:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2571:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2583:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2591:6:37",
                "type": ""
              }
            ],
            "src": "2496:346:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2948:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2958:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2970:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2966:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2958:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3000:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3015:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3023:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3011:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3011:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2993:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2993:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2917:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2928:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2939:4:37",
                "type": ""
              }
            ],
            "src": "2847:226:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3243:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3253:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3265:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3261:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3261:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3253:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3288:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3298:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3292:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3356:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3371:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3379:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3367:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3367:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3349:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3349:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3403:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3399:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3399:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3423:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3431:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3419:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3419:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3455:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3466:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3451:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3451:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3471:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3444:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3444:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3444:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3196:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3207:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3215:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3223:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3234:4:37",
                "type": ""
              }
            ],
            "src": "3078:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3626:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3636:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3648:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3659:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3644:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3636:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3678:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3693:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3701:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3689:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3689:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3671:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3671:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3671:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3765:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3776:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3761:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3761:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3781:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3754:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3754:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3754:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3587:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3598:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3606:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3617:4:37",
                "type": ""
              }
            ],
            "src": "3489:305:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3972:211:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3982:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3994:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4005:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3990:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3982:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4024:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4039:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4047:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4035:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4035:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4017:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4017:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4017:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4111:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4122:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4107:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4107:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4127:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4100:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4100:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4100:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4154:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4165:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4150:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4170:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4143:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4143:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3925:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3936:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3944:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3952:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3963:4:37",
                "type": ""
              }
            ],
            "src": "3799:384:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4353:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4363:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4375:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4371:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4371:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4363:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4398:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4408:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4402:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4466:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4481:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4489:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4477:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4477:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4459:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4459:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4459:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4513:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4524:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4509:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4509:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4533:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4541:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4529:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4529:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4502:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4502:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4502:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4565:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4576:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4561:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4581:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4554:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4554:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4554:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4306:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4317:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4325:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4333:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4344:4:37",
                "type": ""
              }
            ],
            "src": "4188:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4728:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4738:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4750:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4761:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4746:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4746:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4738:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4780:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4795:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4803:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4791:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4791:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4773:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4773:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4773:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4867:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4878:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4863:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4883:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4856:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4856:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4856:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4689:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4700:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4708:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4719:4:37",
                "type": ""
              }
            ],
            "src": "4599:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:211:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5076:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5088:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5099:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5084:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5084:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5076:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5118:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5133:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5141:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5129:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5129:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5205:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5216:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5201:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5201:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5221:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5194:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5194:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5194:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5248:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5259:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5244:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5244:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5264:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5237:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5237:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5019:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5030:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5038:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5046:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5057:4:37",
                "type": ""
              }
            ],
            "src": "4901:376:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5547:294:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5564:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5579:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5587:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5575:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5575:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5557:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5557:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5651:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5662:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5647:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5647:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5667:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5640:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5640:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5640:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5694:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5705:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5710:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5683:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5683:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5683:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5737:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5748:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5733:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5733:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5753:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5726:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5726:31:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5777:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5788:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5773:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5773:19:37"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5794:4:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5766:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5766:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5766:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5808:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5820:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5831:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5816:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5816:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5808:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5500:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5511:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5519:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5527:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5538:4:37",
                "type": ""
              }
            ],
            "src": "5282:559:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5997:484:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6007:12:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6017:2:37",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6011:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6028:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6046:9:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6057:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6042:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:18:37"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6032:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6076:9:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6087:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6069:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6069:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6069:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6099:17:37",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6110:6:37"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6103:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6125:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6145:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6139:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6139:13:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6129:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6168:6:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6176:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6161:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6161:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6161:22:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6192:25:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6203:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6214:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6199:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6199:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6192:3:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6226:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6244:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6252:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6240:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6240:15:37"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6230:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6264:13:37",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "6273:4:37"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6268:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6335:120:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6356:3:37"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6367:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6361:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6361:13:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6349:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6349:26:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6349:26:37"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6388:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6399:3:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6404:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6395:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6395:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6388:3:37"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6420:25:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6434:6:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6442:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6430:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6430:15:37"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6420:6:37"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6297:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6300:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6294:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6294:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6308:18:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6310:14:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6319:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6322:1:37",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6315:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6315:9:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6310:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6290:3:37",
                    "statements": []
                  },
                  "src": "6286:169:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6464:11:37",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6472:3:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6464:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5966:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5977:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5988:4:37",
                "type": ""
              }
            ],
            "src": "5846:635:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6613:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6623:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6635:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6631:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6623:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6665:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6680:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6688:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6676:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6676:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6658:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1243__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6582:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6593:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6604:4:37",
                "type": ""
              }
            ],
            "src": "6486:252:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6871:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6881:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6893:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6904:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6889:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6881:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6923:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6938:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6946:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6934:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6934:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6916:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6916:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6916:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DefiYieldGenerator_$1374__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6840:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6851:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6862:4:37",
                "type": ""
              }
            ],
            "src": "6743:253:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7117:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7127:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7139:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7150:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7135:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7135:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7127:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7169:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7184:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7192:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7180:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7162:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7162:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7162:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$6826__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7086:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7097:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7108:4:37",
                "type": ""
              }
            ],
            "src": "7001:241:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7368:321:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7385:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7396:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7378:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7378:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7378:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7408:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7428:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7422:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7422:13:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7412:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7455:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7466:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7451:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7451:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7471:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7444:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7444:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7444:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7513:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7521:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7509:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7509:15:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7530:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7541:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7526:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7526:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7546:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7487:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7487:66:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7487:66:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7562:121:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7578:9:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7597:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7605:2:37",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7593:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7593:15:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7610:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7589:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7589:88:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7574:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7574:104:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7680:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7570:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7570:113:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7562:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7337:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7348:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7359:4:37",
                "type": ""
              }
            ],
            "src": "7247:442:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7868:172:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7885:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7896:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7878:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7878:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7919:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7930:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7915:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7915:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7935:2:37",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7908:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7908:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7908:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7958:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7969:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7954:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7954:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7974:24:37",
                        "type": "",
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7947:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7947:52:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7947:52:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8008:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8020:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8031:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8016:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8016:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8008:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7845:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7859:4:37",
                "type": ""
              }
            ],
            "src": "7694:346:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8219:233:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8236:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8247:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8229:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8229:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8229:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8270:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8281:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8266:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8266:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8286:2:37",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8259:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8259:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8259:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8309:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8320:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8305:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8305:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8325:34:37",
                        "type": "",
                        "value": "ERC1155: balance query for the z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8298:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8298:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8298:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8380:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8391:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8376:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8376:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8396:13:37",
                        "type": "",
                        "value": "ero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8369:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8369:41:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8369:41:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8419:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8431:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8442:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8427:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8427:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8419:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8196:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8210:4:37",
                "type": ""
              }
            ],
            "src": "8045:407:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8631:179:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8648:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8659:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8641:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8641:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8641:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8682:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8693:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8678:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8678:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8698:2:37",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8671:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8671:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8671:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8721:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8732:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8717:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8717:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8737:31:37",
                        "type": "",
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8710:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8710:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8710:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8778:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8790:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8801:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8786:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8786:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8778:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8608:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8622:4:37",
                "type": ""
              }
            ],
            "src": "8457:353:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8989:178:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9006:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9017:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8999:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8999:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8999:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9040:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9051:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9036:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9036:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9056:2:37",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9029:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9029:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9029:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9079:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9090:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9075:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9075:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9095:30:37",
                        "type": "",
                        "value": "Funds are locked for 3 month"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9068:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9068:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9068:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9135:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9147:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9158:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9143:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9143:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9135:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8966:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8980:4:37",
                "type": ""
              }
            ],
            "src": "8815:352:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9346:179:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9363:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9374:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9356:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9356:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9356:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9397:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9408:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9393:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9393:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9413:2:37",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9386:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9386:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9386:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9436:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9447:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9432:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9432:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9452:31:37",
                        "type": "",
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9425:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9425:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9425:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9493:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9505:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9516:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9501:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9501:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9493:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9323:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9337:4:37",
                "type": ""
              }
            ],
            "src": "9172:353:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9704:223:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9721:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9732:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9714:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9714:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9714:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9755:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9766:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9751:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9751:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9771:2:37",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9744:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9744:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9744:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9794:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9805:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9790:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9790:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9810:34:37",
                        "type": "",
                        "value": "Failed to transfer bmiDAIx token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9783:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9783:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9783:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9865:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9876:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9861:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9861:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9881:3:37",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9854:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9854:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9854:31:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9894:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9906:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9917:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9902:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9902:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9894:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9681:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9695:4:37",
                "type": ""
              }
            ],
            "src": "9530:397:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10087:258:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10097:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10109:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10120:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10105:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10105:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10097:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10139:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10156:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10150:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10150:13:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10132:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10132:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10132:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10184:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10195:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10180:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10180:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10212:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10220:4:37",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10208:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10208:17:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10202:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10202:24:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10173:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10173:54:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10173:54:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10247:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10258:4:37",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10243:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10243:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10279:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10287:4:37",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10275:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10275:17:37"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "10269:5:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10269:24:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10295:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10265:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10265:73:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10236:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10236:103:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10236:103:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$16_memory_ptr__to_t_struct$_StakingInfo_$16_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10056:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10067:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10078:4:37",
                "type": ""
              }
            ],
            "src": "9932:413:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10451:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10461:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10473:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10484:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10469:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10469:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10461:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10503:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10514:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10496:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10496:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10496:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10420:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10431:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10442:4:37",
                "type": ""
              }
            ],
            "src": "10350:177:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10669:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10679:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10691:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10702:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10687:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10687:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10679:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10721:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10732:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10714:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10714:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10759:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10770:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10755:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10755:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10779:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10787:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10775:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10775:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10748:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10748:83:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10748:83:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10630:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10641:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10649:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10660:4:37",
                "type": ""
              }
            ],
            "src": "10532:305:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11007:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11017:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11029:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11040:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11025:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11025:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11017:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11059:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11070:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11052:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11052:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11052:25:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11086:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11096:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11090:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11158:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11169:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11154:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11154:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11178:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11186:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11174:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11174:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11147:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11147:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11147:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11210:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11221:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11206:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11206:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "11230:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11238:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11226:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11226:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11199:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11199:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11199:43:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_payable_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10960:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10971:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10979:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10987:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10998:4:37",
                "type": ""
              }
            ],
            "src": "10842:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11382:119:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11392:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11404:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11415:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11400:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11400:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11392:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11434:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11445:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11427:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11427:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11427:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11472:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11483:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11468:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11468:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11488:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11461:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11461:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11461:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11343:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11354:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11362:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11373:4:37",
                "type": ""
              }
            ],
            "src": "11253:248:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11559:205:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11569:10:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11578:1:37",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11573:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11638:63:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11663:3:37"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11668:1:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11659:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11659:11:37"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11682:3:37"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11687:1:37"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11678:3:37"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11678:11:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11672:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11672:18:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11652:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11652:39:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11652:39:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11599:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11602:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11596:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11596:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11610:19:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11612:15:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11621:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11624:2:37",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11617:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11617:10:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11612:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11592:3:37",
                    "statements": []
                  },
                  "src": "11588:113:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11727:31:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11740:3:37"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11745:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11736:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11736:16:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11754:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11729:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11729:27:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11729:27:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11716:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11719:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11713:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11713:13:37"
                  },
                  "nodeType": "YulIf",
                  "src": "11710:2:37"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11537:3:37",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11542:3:37",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11547:6:37",
                "type": ""
              }
            ],
            "src": "11506:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11816:109:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11903:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11912:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11915:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11905:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11905:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11905:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11839:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11850:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11857:42:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11846:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11846:54:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11836:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11836:65:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11829:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11829:73:37"
                  },
                  "nodeType": "YulIf",
                  "src": "11826:2:37"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11805:5:37",
                "type": ""
              }
            ],
            "src": "11769:156:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1243(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_2)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_contract$_PolicyBook_$2176(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), tail)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1243__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_DefiYieldGenerator_$1374__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$6826__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not an NFT token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Failed to transfer DAI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Funds are locked for 3 month\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Failed to transfer BMI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Failed to transfer bmiDAIx token\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$16_memory_ptr__to_t_struct$_StakingInfo_$16_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_address_payable_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "300:5641:0:-:0;;;964:1;928:37;;300:5641;;;;;;;;;-1:-1:-1;882:17:24;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:24;-1:-1:-1;;;;;924:18:24;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:24;957:43;;924:6;;957:43;848:159;300:5641:0;;598:104:22;685:10;598:104;:::o;300:5641:0:-;;;;;;;",
  "deployedSourceMap": "300:5641:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5369:209;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5584:355;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1706:145:24:-;;;:::i;:::-;;2725:566:0;;;;;;:::i;:::-;;:::i;688:44::-;;;:::i;:::-;;;;;;;:::i;1083:77:24:-;;;:::i;5232:131:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3794:1425::-;;;;;;:::i;:::-;;:::i;632:22::-;;;:::i;3297:491::-;;;;;;:::i;:::-;;:::i;1289:442::-;;;;;;:::i;:::-;;:::i;660:22::-;;;:::i;583:42::-;;;:::i;2000:240:24:-;;;;;;:::i;:::-;;:::i;5369:209:0:-;5430:7;-1:-1:-1;;;;;5457:19:0;;5449:75;;;;-1:-1:-1;;;5449:75:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;5542:20:0;;;;;;:13;:20;;;;;:29;;:27;:29::i;:::-;5535:36;5369:209;-1:-1:-1;;5369:209:0:o;5584:355::-;5653:16;5681:12;5696:22;5712:5;5696:15;:22::i;:::-;5681:37;;5737:23;5777:4;5763:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5763:19:0;;5737:45;;5798:9;5793:106;5817:4;5813:1;:8;5793:106;;;-1:-1:-1;;;;;5862:20:0;;;;;;:13;:20;;;;;:26;;5886:1;5862:23;:26::i;:::-;5850:6;5857:1;5850:9;;;;;;;;;;;;;;;;;:38;5823:3;;5793:106;;;-1:-1:-1;5916:6:0;5584:355;-1:-1:-1;;;5584:355:0:o;1706:145:24:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:24;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;;::::1;::::0;;1706:145::o;2725:566:0:-;2878:8;;2930:18;;;2878:81;;;;;2863:12;;-1:-1:-1;;;;;2878:8:0;;;;:21;;:81;;2908:11;;2930:18;;;;2951:7;;2878:81;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2863:96;;2985:7;2977:49;;;;-1:-1:-1;;;2977:49:0;;;;;;;:::i;:::-;3096:11;-1:-1:-1;;;;;3096:24:0;;3121:12;:10;:12::i;:::-;3143:4;3150:7;3096:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3086:72;;3184:7;3176:53;;;;-1:-1:-1;;;3176:53:0;;;;;;;:::i;:::-;3240:44;3249:12;:10;:12::i;:::-;3263:7;3272:11;3240:8;:44::i;:::-;2725:566;;;:::o;688:44::-;;;-1:-1:-1;;;;;688:44:0;;:::o;1083:77:24:-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:24;1083:77;:::o;5232:131:0:-;5298:18;;:::i;:::-;-1:-1:-1;5335:21:0;;;;:12;:21;;;;;;;;;5328:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5328:28:0;;;;;;;;;5232:131::o;3794:1425::-;3890:21;;;;:12;:21;;;;;:38;561:11;3890:52;3872:15;:70;3863:112;;;;-1:-1:-1;;;3863:112:0;;;;;;;:::i;:::-;4050:12;:10;:12::i;:::-;3994:21;;;;:12;:21;;;;;;;:32;;;:52;;;;;-1:-1:-1;;;;;3994:68:0;;;;:32;;;;:43;;:52;;:21;;:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3994:68:0;;3985:104;;;;-1:-1:-1;;;3985:104:0;;;;;;;:::i;:::-;4107:30;;:::i;:::-;-1:-1:-1;4140:21:0;;;;:12;:21;;;;;;;;4107:54;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4107:54:0;;;;;;;;;;4246:8;;4276:18;;4107:54;;4140:21;4246:8;;;;:21;;4276:18;4297:12;:10;:12::i;:::-;4311:18;;;;4340:21;;;:12;:21;;;;;;;:38;;4311:18;4380:37;;;;4311:107;;;;;-1:-1:-1;;;;;4311:18:0;;;;:28;;:107;;4380:37;4311:107;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4246:173;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4231:188;;4437:7;4429:49;;;;-1:-1:-1;;;4429:49:0;;;;;;;:::i;:::-;4557:8;;4587:18;;;4616:22;;;;;4641:27;;;;4557:112;;;;;-1:-1:-1;;;;;4557:8:0;;;;:21;;:112;;4587:18;;;;4641:27;4557:112;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4547:122;;4687:7;4679:49;;;;-1:-1:-1;;;4679:49:0;;;;;;;:::i;:::-;4805:11;:22;;;-1:-1:-1;;;;;4805:31:0;;4837:12;:10;:12::i;:::-;4851:11;:27;;;4805:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4795:84;;4897:7;4889:53;;;;-1:-1:-1;;;4889:53:0;;;;;;;:::i;:::-;4953:21;;;;:12;:21;;;;;:32;;;-1:-1:-1;;;;;4953:32:0;:40;4994:12;:10;:12::i;:::-;5008:7;5017:1;4953:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5038:43;5073:7;5038:13;:27;5052:12;:10;:12::i;:::-;-1:-1:-1;;;;;5038:27:0;;;;;;;;;;;;-1:-1:-1;5038:27:0;;:34;:43::i;:::-;-1:-1:-1;5131:21:0;;;;:12;:21;;;;;;;:32;;;5097:68;;;;;;5114:7;;-1:-1:-1;;;;;5131:32:0;;5097:68;:::i;:::-;;;;;;;;-1:-1:-1;;5183:21:0;;;;:12;:21;;;;;5176:28;;;;;;;;;;;;;;;;;;3794:1425::o;632:22::-;;;-1:-1:-1;;;;;632:22:0;;:::o;3297:491::-;3425:12;:10;:12::i;:::-;3369:21;;;;:12;:21;;;;;;;:32;;;:52;;;;;-1:-1:-1;;;;;3369:68:0;;;;:32;;;;:43;;:52;;:21;;:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3369:68:0;;3360:104;;;;-1:-1:-1;;;3360:104:0;;;;;;;:::i;:::-;3549:8;;3579:18;;3534:12;;-1:-1:-1;;;;;3549:8:0;;;;:21;;3579:18;3600:12;:10;:12::i;:::-;3614:18;;;;3643:21;;;:12;:21;;;;;;;:38;;3614:18;3683:37;;;;3614:107;;;;;-1:-1:-1;;;;;3614:18:0;;;;:28;;:107;;3683:37;3614:107;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3549:173;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3534:188;;3740:7;3732:49;;;;-1:-1:-1;;;3732:49:0;;;;;;;:::i;:::-;3297:491;;:::o;1289:442::-;1297:12:24;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1378:17:0::1;:38:::0;;;::::1;-1:-1:-1::0;;;;;1378:38:0;::::1;::::0;;::::1;::::0;;;1476:31:::1;::::0;;;;;;;1445:30:::1;::::0;1378:38;;1476:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;1476:31:0;;;;;;;;1378:38;1476:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1445:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1427:8;;:82;;;;;-1:-1:-1::0;;;;;1427:82:0::1;;;;;-1:-1:-1::0;;;;;1427:82:0::1;;;;;;1537:18;-1:-1:-1::0;;;;;1537:30:0::1;;1568:18;-1:-1:-1::0;;;;;1568:29:0::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1537:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1519:8;:82:::0;;;::::1;-1:-1:-1::0;;;;;1519:82:0;;::::1;;::::0;;-1:-1:-1;1651:17:0;1681:41:::1;::::0;;;;;;;1651:17;;;::::1;::::0;:29:::1;::::0;:17;;1681:39:::1;::::0;:41:::1;::::0;;::::1;::::0;-1:-1:-1;;1681:41:0;;;;;;;1651:17;1681:41;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1651:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1611:18;:113:::0;;;::::1;-1:-1:-1::0;;;;;1611:113:0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1289:442:0:o;660:22::-;;;-1:-1:-1;;;;;660:22:0;;:::o;583:42::-;;;-1:-1:-1;;;;;583:42:0;;:::o;2000:240:24:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:24;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:24;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:24::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:24;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;;::::1;-1:-1:-1::0;;;;;2216:17:24;;;::::1;::::0;;;::::1;::::0;;2000:240::o;8770:112:36:-;8830:7;8856:19;8864:3;8856:7;:19::i;9214:135::-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;:::-;9311:31;9214:135;-1:-1:-1;;;9214:135:36:o;598:104:22:-;685:10;598:104;:::o;1737:978:0:-;1906:33;;;;;1882:21;;-1:-1:-1;;;;;1906:24:0;;;;;:33;;1931:7;;1906:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1882:57;-1:-1:-1;1971:7:0;1949:19;1989:389;2013:13;2009:1;:17;1989:389;;;2065:46;;;;;2047:15;;-1:-1:-1;;;;;2065:34:0;;;;;:46;;2100:7;;2109:1;;2065:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2165:21;;;;:12;:21;;;;;;;:37;;;;;2233:40;;;;;2150:52;;;;;2047:64;;-1:-1:-1;;;;;;2233:19:0;;;;;:40;;2253:7;;2047:64;;2233:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;2287:22:0;;;;;;:13;:22;;;;;:38;;-1:-1:-1;2317:7:0;2287:29;:38::i;:::-;-1:-1:-1;2346:21:0;;;;:12;:21;;;;;2339:28;;;;;;;;;;;;;;;;;;;2028:3;1989:389;;;-1:-1:-1;2417:17:0;;2388:54;;;;;-1:-1:-1;;;;;2388:19:0;;;;;:54;;2408:7;;2436:1;;2388:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2487:54:0;;;;;;;;2499:15;2487:54;;;;;;;;;-1:-1:-1;;;;;2487:54:0;;;;;;;;;2466:17;;;-1:-1:-1;2453:31:0;;;:12;:31;;;;;:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2578:17;;2551:22;;;;;:13;:22;;;;;;;:45;;-1:-1:-1;2551:22:0;-1:-1:-1;2551:26:0;:45::i;:::-;;2612:66;2629:17;;2656:11;2670:7;2612:66;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;2689:17:0;:19;;;;;;-1:-1:-1;;;1737:978:0:o;8329:135:36:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;4013:107::-;4095:18;;4013:107::o;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:36;;;;-1:-1:-1;;;4538:73:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;2830:14;;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:36;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:36;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:259:37:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;1138:959;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1330:9;1324:16;1359:18;1400:2;1392:6;1389:14;1386:2;;;1421:6;1413;1406:22;1386:2;1464:6;1453:9;1449:22;1439:32;;1509:7;1502:4;1498:2;1494:13;1490:27;1480:2;;1536:6;1528;1521:22;1480:2;1574;1568:9;1600:2;1592:6;1589:14;1586:2;;;1606:9;1586:2;1646;1640:9;1785:2;1715:66;1708:4;1700:6;1696:17;1692:90;1684:6;1680:103;1676:112;1838:6;1826:10;1823:22;1818:2;1806:10;1803:18;1800:46;1797:2;;;1849:9;1797:2;1876;1869:22;1900;;;1941:15;;;1958:2;1937:24;1934:37;-1:-1:-1;1931:2:37;;;1989:6;1981;1974:22;1931:2;2007:59;2059:6;2054:2;2046:6;2042:15;2037:2;2033;2029:11;2007:59;:::i;:::-;2085:6;1229:868;-1:-1:-1;;;;;;1229:868:37:o;2102:190::-;;2214:2;2202:9;2193:7;2189:23;2185:32;2182:2;;;2235:6;2227;2220:22;2182:2;-1:-1:-1;2263:23:37;;2172:120;-1:-1:-1;2172:120:37:o;2297:194::-;;2420:2;2408:9;2399:7;2395:23;2391:32;2388:2;;;2441:6;2433;2426:22;2388:2;-1:-1:-1;2469:16:37;;2378:113;-1:-1:-1;2378:113:37:o;2496:346::-;;;2644:2;2632:9;2623:7;2619:23;2615:32;2612:2;;;2665:6;2657;2650:22;2612:2;2706:9;2693:23;2683:33;;2766:2;2755:9;2751:18;2738:32;2779:33;2806:5;2779:33;:::i;:::-;2831:5;2821:15;;;2602:240;;;;;:::o;2847:226::-;-1:-1:-1;;;;;3011:55:37;;;;2993:74;;2981:2;2966:18;;2948:125::o;3078:406::-;-1:-1:-1;;;;;3367:15:37;;;3349:34;;3419:15;;;;3414:2;3399:18;;3392:43;3466:2;3451:18;;3444:34;;;;3276:2;3261:18;;3243:241::o;3489:305::-;-1:-1:-1;;;;;3689:55:37;;;;3671:74;;3776:2;3761:18;;3754:34;3659:2;3644:18;;3626:168::o;3799:384::-;-1:-1:-1;;;;;4035:55:37;;;;4017:74;;4122:2;4107:18;;4100:34;;;;4165:2;4150:18;;4143:34;4005:2;3990:18;;3972:211::o;5282:559::-;-1:-1:-1;;;;;5575:55:37;;;;5557:74;;5662:2;5647:18;;5640:34;;;;5705:2;5690:18;;5683:34;5753:3;5748:2;5733:18;;5726:31;;;5282:559;5773:19;;;5766:33;5831:3;5816:19;;5547:294::o;5846:635::-;6017:2;6069:21;;;6139:13;;6042:18;;;6161:22;;;5846:635;;6017:2;6240:15;;;;6214:2;6199:18;;;5846:635;6286:169;6300:6;6297:1;6294:13;6286:169;;;6361:13;;6349:26;;6430:15;;;;6395:12;;;;6322:1;6315:9;6286:169;;;-1:-1:-1;6472:3:37;;5997:484;-1:-1:-1;;;;;;5997:484:37:o;7247:442::-;;7396:2;7385:9;7378:21;7428:6;7422:13;7471:6;7466:2;7455:9;7451:18;7444:34;7487:66;7546:6;7541:2;7530:9;7526:18;7521:2;7513:6;7509:15;7487:66;:::i;:::-;7605:2;7593:15;7610:66;7589:88;7574:104;;;;7680:2;7570:113;;7368:321;-1:-1:-1;;7368:321:37:o;7694:346::-;7896:2;7878:21;;;7935:2;7915:18;;;7908:30;7974:24;7969:2;7954:18;;7947:52;8031:2;8016:18;;7868:172::o;8045:407::-;8247:2;8229:21;;;8286:2;8266:18;;;8259:30;8325:34;8320:2;8305:18;;8298:62;8396:13;8391:2;8376:18;;8369:41;8442:3;8427:19;;8219:233::o;8457:353::-;8659:2;8641:21;;;8698:2;8678:18;;;8671:30;8737:31;8732:2;8717:18;;8710:59;8801:2;8786:18;;8631:179::o;8815:352::-;9017:2;8999:21;;;9056:2;9036:18;;;9029:30;9095;9090:2;9075:18;;9068:58;9158:2;9143:18;;8989:178::o;9172:353::-;9374:2;9356:21;;;9413:2;9393:18;;;9386:30;9452:31;9447:2;9432:18;;9425:59;9516:2;9501:18;;9346:179::o;9530:397::-;9732:2;9714:21;;;9771:2;9751:18;;;9744:30;9810:34;9805:2;9790:18;;9783:62;9881:3;9876:2;9861:18;;9854:31;9917:3;9902:19;;9704:223::o;9932:413::-;10150:13;;10132:32;;10220:4;10208:17;;;10202:24;10180:20;;;10173:54;10287:4;10275:17;;;10269:24;-1:-1:-1;;;;;10265:73:37;10243:20;;;10236:103;;;;10120:2;10105:18;;10087:258::o;10350:177::-;10496:25;;;10484:2;10469:18;;10451:76::o;10532:305::-;10714:25;;;-1:-1:-1;;;;;10775:55:37;10770:2;10755:18;;10748:83;10702:2;10687:18;;10669:168::o;10842:406::-;11052:25;;;-1:-1:-1;;;;;11174:15:37;;;11169:2;11154:18;;11147:43;11226:15;11221:2;11206:18;;11199:43;11040:2;11025:18;;11007:241::o;11253:248::-;11427:25;;;11483:2;11468:18;;11461:34;11415:2;11400:18;;11382:119::o;11506:258::-;11578:1;11588:113;11602:6;11599:1;11596:13;11588:113;;;11678:11;;;11672:18;11659:11;;;11652:39;11624:2;11617:10;11588:113;;;11719:6;11716:1;11713:13;11710:2;;;11754:1;11745:6;11740:3;11736:16;11729:27;11710:2;;11559:205;;;:::o;11769:156::-;-1:-1:-1;;;;;11850:5:37;11846:54;11839:5;11836:65;11826:2;;11915:1;11912;11905:12;11826:2;11816:109;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/utils/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./PolicyBook.sol\";\nimport \"./ContractsRegistry.sol\";\nimport \"./DefiYieldGenerator.sol\";\n\ncontract BMIDAIStaking is Ownable {\n    struct StakingInfo {\n        uint256 stakingStartTime;\n        uint256 stakedDaiAmount;\n        PolicyBook policyBook;\n    }\n\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    uint256 constant private THREE_MONTH = 3 * 30 days;\n    \n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    DefiYieldGenerator public defiYieldGenerator;\n    \n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n    mapping(uint256 => StakingInfo) private _stakersPool; // NFT => INFO\n    \n    /// @dev crutial to start from 2\n    uint256 private _currentNFTMintID = 2; \n\n    event StakingNFTMinted(uint256 id, address policyBookAddress, address to);\n    event StakingNFTBurned(uint256 id, address policyBookAddress);\n\n    modifier onlyDefiYieldGenerator() {\n        require (_msgSender() == address(defiYieldGenerator), \"Only generator is allowed to increase profit\");\n        _;\n    }\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n\n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        defiYieldGenerator = DefiYieldGenerator(contractsRegistry.getContract(contractsRegistry.getYieldGeneratorName()));\n    }\n\n    function _mintNFT(\n        address _staker,        \n        uint256 _amount,\n        PolicyBook _policyBook\n    ) private {             \n        uint256 stakerBalance = _policyBook.balanceOfNFT(_staker);\n        uint256 totalAmount = _amount;\n\n        for (uint256 i = 0; i < stakerBalance; i++) {\n            uint256 tokenID = _policyBook.tokenOfOwnerByIndexNFT(_staker, i);            \n            \n            totalAmount += _stakersPool[tokenID].stakedDaiAmount;\n                \n            _policyBook.burnNFT(_staker, tokenID, 1);\n            _holderTokens[_staker].remove(tokenID);\n            delete _stakersPool[tokenID];\n        }\n\n        _policyBook.mintNFT(_staker, _currentNFTMintID, 1, \"\");\n\n        _stakersPool[_currentNFTMintID] = StakingInfo(block.timestamp, totalAmount, _policyBook);\n        _holderTokens[_staker].add(_currentNFTMintID);\n\n        emit StakingNFTMinted(_currentNFTMintID, address(_policyBook), _staker);\n\n        _currentNFTMintID++;\n    }    \n\n    function stakeDAIx(uint256 _amount, PolicyBook _policyBook) external {\n        // transfer DAI from PolicyBook to yield generator\n        bool success = daiToken.transferFrom(address(_policyBook), address(defiYieldGenerator), _amount);        \n        require(success, \"Failed to transfer DAI tokens\");\n\n        // transfer bmiDAIx from user to staking\n        success = _policyBook.transferFrom(_msgSender(), address(this), _amount);        \n        require(success, \"Failed to transfer bmiDAIx tokens\");\n\n        _mintNFT(_msgSender(), _amount, _policyBook);\n    }\n\n    function withdrawBMIProfit(uint256 tokenID) external {\n        require (_stakersPool[tokenID].policyBook.ownerOfNFT(tokenID) == _msgSender(), \"Not an NFT token owner\");\n\n        // transfer bmi profit from YieldGenerator to user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), defiYieldGenerator.getProfit(_stakersPool[tokenID].stakingStartTime, _stakersPool[tokenID].stakedDaiAmount));\n        require(success, \"Failed to transfer BMI tokens\");\n    }\n\n    function withdrawFundsWithProfit(uint256 tokenID) external {\n        require (block.timestamp > _stakersPool[tokenID].stakingStartTime + THREE_MONTH, \"Funds are locked for 3 month\");\n        require (_stakersPool[tokenID].policyBook.ownerOfNFT(tokenID) == _msgSender(), \"Not an NFT token owner\");\n       \n        StakingInfo memory stakingInfo = _stakersPool[tokenID];\n\n        // transfer bmi profit from YieldGenerator to user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), defiYieldGenerator.getProfit(_stakersPool[tokenID].stakingStartTime, _stakersPool[tokenID].stakedDaiAmount));\n        require(success, \"Failed to transfer BMI tokens\");\n\n        // transfer DAI from YieldGenerator to PolicyBook\n        success = daiToken.transferFrom(address(defiYieldGenerator), address(stakingInfo.policyBook), stakingInfo.stakedDaiAmount);\n        require(success, \"Failed to transfer DAI tokens\");   \n\n        // transfer bmiDAIx from staking to the user\n        success = stakingInfo.policyBook.transfer(_msgSender(), stakingInfo.stakedDaiAmount);\n        require(success, \"Failed to transfer bmiDAIx tokens\");\n\n        _stakersPool[tokenID].policyBook.burnNFT(_msgSender(), tokenID, 1);\n        \n        _holderTokens[_msgSender()].remove(tokenID);\n\n        emit StakingNFTBurned(tokenID, address(_stakersPool[tokenID].policyBook));\n\n        delete _stakersPool[tokenID];        \n    }       \n\n    function stakingInfoByToken(uint256 tokenID) public view returns (StakingInfo memory) {\n        return _stakersPool[tokenID];\n    }\n\n    function howManyStakings(address owner) public view returns (uint256) {\n        require(owner != address(0), \"ERC1155: balance query for the zero address\");\n\n        return _holderTokens[owner].length();\n    }\n\n    function getStakingTokensByOwner(address owner) public view returns (uint256[] memory) {\n        uint256 size = howManyStakings(owner);\n        \n        uint256[] memory tokens = new uint256[](size);\n\n        for (uint256 i = 0; i < size; i++)\n        {\n            tokens[i] = _holderTokens[owner].at(i);\n        }\n\n        return tokens;          \n    }\n}\n",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        5635
      ],
      "Address": [
        7283
      ],
      "BMIDAIStaking": [
        554
      ],
      "Context": [
        5352
      ],
      "ContractsRegistry": [
        1243
      ],
      "DefiYieldGenerator": [
        1374
      ],
      "ERC1155": [
        5268
      ],
      "ERC1155NFTMintableBurnable": [
        5329
      ],
      "ERC165": [
        5801
      ],
      "EnumerableMap": [
        7738
      ],
      "EnumerableSet": [
        8218
      ],
      "IERC1155": [
        6204
      ],
      "IERC1155Receiver": [
        6245
      ],
      "IERC165": [
        5813
      ],
      "IERC20": [
        6826
      ],
      "IPolicyBook": [
        2980
      ],
      "IPolicyBookFabric": [
        3029
      ],
      "Math": [
        5886
      ],
      "Ownable": [
        5744
      ],
      "PolicyBook": [
        2176
      ],
      "SafeMath": [
        6082
      ]
    },
    "id": 555,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 8219,
        "src": "91:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 5745,
        "src": "149:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "./PolicyBook.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 2177,
        "src": "203:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 1244,
        "src": "230:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
        "file": "./DefiYieldGenerator.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 1375,
        "src": "264:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5744,
              "src": "326:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5744",
                "typeString": "contract Ownable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "326:7:0"
          }
        ],
        "contractDependencies": [
          5352,
          5744
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 554,
        "linearizedBaseContracts": [
          554,
          5744,
          5352
        ],
        "name": "BMIDAIStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BMIDAIStaking.StakingInfo",
            "id": 16,
            "members": [
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "stakingStartTime",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "369:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "369:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "stakedDaiAmount",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "403:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "policyBook",
                "nodeType": "VariableDeclaration",
                "scope": 16,
                "src": "436:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PolicyBook_$2176",
                  "typeString": "contract PolicyBook"
                },
                "typeName": {
                  "id": 14,
                  "name": "PolicyBook",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2176,
                  "src": "436:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2176",
                    "typeString": "contract PolicyBook"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 554,
            "src": "340:124:0",
            "visibility": "public"
          },
          {
            "id": 19,
            "libraryName": {
              "id": 17,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8218,
              "src": "476:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$8218",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "470:46:0",
            "typeName": {
              "id": 18,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8123,
              "src": "494:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$8123_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "constant": true,
            "id": 24,
            "mutability": "constant",
            "name": "THREE_MONTH",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "522:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              },
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "33",
                "id": 21,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "561:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 22,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "565:7:0",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2592000_by_1",
                  "typeString": "int_const 2592000"
                },
                "value": "30"
              },
              "src": "561:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 26,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "583:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 25,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1243,
              "src": "583:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 28,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "632:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6826",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 27,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6826,
              "src": "632:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6826",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 30,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "660:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6826",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 29,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6826,
              "src": "660:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6826",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "843fe5f0",
            "id": 32,
            "mutability": "mutable",
            "name": "defiYieldGenerator",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "688:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
              "typeString": "contract DefiYieldGenerator"
            },
            "typeName": {
              "id": 31,
              "name": "DefiYieldGenerator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1374,
              "src": "688:18:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                "typeString": "contract DefiYieldGenerator"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "743:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "752:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "743:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "id": 34,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 8123,
                "src": "763:21:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$8123_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "_stakersPool",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "813:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
            },
            "typeName": {
              "id": 39,
              "keyType": {
                "id": 37,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "821:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "813:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
              },
              "valueType": {
                "id": 38,
                "name": "StakingInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 16,
                "src": "832:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$16_storage_ptr",
                  "typeString": "struct BMIDAIStaking.StakingInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 41,
              "nodeType": "StructuredDocumentation",
              "src": "891:32:0",
              "text": "@dev crutial to start from 2"
            },
            "id": 44,
            "mutability": "mutable",
            "name": "_currentNFTMintID",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "928:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "928:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "964:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 52,
            "name": "StakingNFTMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "996:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1008:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1035:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:51:0"
            },
            "src": "973:74:0"
          },
          {
            "anonymous": false,
            "id": 58,
            "name": "StakingNFTBurned",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1075:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1087:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:39:0"
            },
            "src": "1052:62:0"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1154:129:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 61,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5340,
                            "src": "1173:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1173:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1197:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1189:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 63,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1189:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1189:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1173:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6372656173652070726f666974",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                          "typeString": "literal_string \"Only generator is allowed to increase profit\""
                        },
                        "value": "Only generator is allowed to increase profit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                          "typeString": "literal_string \"Only generator is allowed to increase profit\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1164:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:101:0"
                },
                {
                  "id": 71,
                  "nodeType": "PlaceholderStatement",
                  "src": "1275:1:0"
                }
              ]
            },
            "id": 73,
            "name": "onlyDefiYieldGenerator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1151:2:0"
            },
            "src": "1120:163:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1368:363:0",
              "statements": [
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1378:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 81,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1398:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "1378:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:38:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1427:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 88,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "1476:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 89,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1100,
                                "src": "1476:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1476:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 86,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "1445:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1173,
                            "src": "1445:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1445:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 85,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6826,
                        "src": "1438:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6826_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1438:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1427:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6826",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:82:0"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1519:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 99,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "1568:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1108,
                                "src": "1568:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1568:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 97,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "1537:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1173,
                            "src": "1537:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1537:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 96,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6826,
                        "src": "1530:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6826_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1530:71:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6826",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1519:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6826",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:82:0"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "defiYieldGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1611:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 110,
                                  "name": "contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "1681:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getYieldGeneratorName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1140,
                                "src": "1681:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1681:41:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 108,
                              "name": "contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1651:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1173,
                            "src": "1651:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1651:72:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 107,
                        "name": "DefiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1374,
                        "src": "1632:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DefiYieldGenerator_$1374_$",
                          "typeString": "type(contract DefiYieldGenerator)"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1632:92:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "src": "1611:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                      "typeString": "contract DefiYieldGenerator"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:113:0"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78,
                "modifierName": {
                  "id": 77,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5693,
                  "src": "1358:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1358:9:0"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1311:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1243,
                    "src": "1311:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:38:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:0"
            },
            "scope": 554,
            "src": "1289:442:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 224,
              "nodeType": "Block",
              "src": "1859:856:0",
              "statements": [
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "stakerBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "1882:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1882:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 133,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 131,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1931:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 129,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "1906:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2176",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOfNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3574,
                      "src": "1906:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1882:57:0"
                },
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 224,
                      "src": "1949:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1949:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 137,
                  "initialValue": {
                    "id": 136,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 122,
                    "src": "1971:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1949:29:0"
                },
                {
                  "body": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "2033:345:0",
                    "statements": [
                      {
                        "assignments": [
                          149
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 149,
                            "mutability": "mutable",
                            "name": "tokenID",
                            "nodeType": "VariableDeclaration",
                            "scope": 183,
                            "src": "2047:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 148,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2047:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 155,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 152,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "2100:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 153,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2109:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 150,
                              "name": "_policyBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "2065:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenOfOwnerByIndexNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3605,
                            "src": "2065:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2065:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2047:64:0"
                      },
                      {
                        "expression": {
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 156,
                            "name": "totalAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "2150:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 157,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "2165:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 159,
                              "indexExpression": {
                                "id": 158,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 149,
                                "src": "2178:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2165:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "2165:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2150:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "2150:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 166,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "2253:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 167,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 149,
                              "src": "2262:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "31",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2271:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 163,
                              "name": "_policyBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "2233:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5328,
                            "src": "2233:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2233:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 170,
                        "nodeType": "ExpressionStatement",
                        "src": "2233:40:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 175,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 149,
                              "src": "2317:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 171,
                                "name": "_holderTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "2287:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
                                  "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                }
                              },
                              "id": 173,
                              "indexExpression": {
                                "id": 172,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "2301:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2287:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UintSet_$8123_storage",
                                "typeString": "struct EnumerableSet.UintSet storage ref"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8163,
                            "src": "2287:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8123_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$8123_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2287:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "2287:38:0"
                      },
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2339:28:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 178,
                              "name": "_stakersPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "2346:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                              }
                            },
                            "id": 180,
                            "indexExpression": {
                              "id": 179,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 149,
                              "src": "2359:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2346:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                              "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "2339:28:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 142,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "2009:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 143,
                      "name": "stakerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "2013:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2009:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 184,
                  "initializationExpression": {
                    "assignments": [
                      139
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "1994:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1994:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 141,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2006:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1994:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2028:3:0",
                      "subExpression": {
                        "id": 145,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "2028:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 147,
                    "nodeType": "ExpressionStatement",
                    "src": "2028:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1989:389:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2408:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 189,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2417:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2436:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2439:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 185,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2388:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2176",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5310,
                      "src": "2388:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:54:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2453:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                          "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "id": 195,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2466:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2453:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                        "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 198,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2499:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2499:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 200,
                          "name": "totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "2516:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 201,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2529:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2176",
                            "typeString": "contract PolicyBook"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_contract$_PolicyBook_$2176",
                            "typeString": "contract PolicyBook"
                          }
                        ],
                        "id": 197,
                        "name": "StakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2487:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingInfo_$16_storage_ptr_$",
                          "typeString": "type(struct BMIDAIStaking.StakingInfo storage pointer)"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2487:54:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                        "typeString": "struct BMIDAIStaking.StakingInfo memory"
                      }
                    },
                    "src": "2453:88:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2578:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 205,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2551:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "id": 206,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "2565:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2551:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8123_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8143,
                      "src": "2551:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8123_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$8123_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2551:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2551:45:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "2629:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 216,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "2656:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2176",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2176",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2648:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 218,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "2670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 212,
                      "name": "StakingNFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2612:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "EmitStatement",
                  "src": "2607:71:0"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2689:19:0",
                    "subExpression": {
                      "id": 221,
                      "name": "_currentNFTMintID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "2689:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:19:0"
                }
              ]
            },
            "id": 225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "1764:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "1797:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 225,
                  "src": "1822:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2176",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2176,
                    "src": "1822:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$2176",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1754:96:0"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1859:0:0"
            },
            "scope": 554,
            "src": "1737:978:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "2794:497:0",
              "statements": [
                {
                  "assignments": [
                    233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 233,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "2863:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2863:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 246,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 238,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2908:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2176",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2176",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2900:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2900:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 242,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2930:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2922:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2922:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2922:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 244,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "2951:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 234,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2878:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6826",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6807,
                      "src": "2878:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2863:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 248,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "2985:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2994:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        },
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2977:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:49:0"
                },
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 252,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 255,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5340,
                            "src": "3121:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3121:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 259,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3143:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BMIDAIStaking_$554",
                                "typeString": "contract BMIDAIStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BMIDAIStaking_$554",
                                "typeString": "contract BMIDAIStaking"
                              }
                            ],
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3135:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 257,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3135:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3135:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 261,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "3150:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 253,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "3096:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2176",
                            "typeString": "contract PolicyBook"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3950,
                        "src": "3096:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3096:62:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3086:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:72:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 266,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "3184:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3193:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3176:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 269,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 271,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5340,
                          "src": "3249:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3249:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 273,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3263:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 274,
                        "name": "_policyBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "3272:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2176",
                          "typeString": "contract PolicyBook"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_PolicyBook_$2176",
                          "typeString": "contract PolicyBook"
                        }
                      ],
                      "id": 270,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "3240:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_PolicyBook_$2176_$returns$__$",
                        "typeString": "function (address,uint256,contract PolicyBook)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3240:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "3240:44:0"
                }
              ]
            },
            "functionSelector": "81927714",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeDAIx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "2744:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "2761:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$2176",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2176,
                    "src": "2761:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$2176",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2743:41:0"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2794:0:0"
            },
            "scope": 554,
            "src": "2725:566:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "3350:438:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 289,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "3413:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 284,
                                  "name": "_stakersPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "3369:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                    "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                  }
                                },
                                "id": 286,
                                "indexExpression": {
                                  "id": 285,
                                  "name": "tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "3382:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3369:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                  "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "3369:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOfNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3588,
                            "src": "3369:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3369:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 291,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5340,
                            "src": "3425:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3425:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3369:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        },
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3360:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:104:0"
                },
                {
                  "assignments": [
                    298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 325,
                      "src": "3534:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 297,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3534:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 319,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 303,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "3579:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3571:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3571:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 305,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5340,
                          "src": "3600:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3600:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 309,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "3643:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 311,
                              "indexExpression": {
                                "id": 310,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3656:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3643:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "3643:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 313,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "3683:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 315,
                              "indexExpression": {
                                "id": 314,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "3696:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3683:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "3683:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 307,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "3614:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getProfit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1373,
                          "src": "3614:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) external returns (uint256)"
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3614:107:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 299,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3549:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6826",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6807,
                      "src": "3549:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3549:173:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3534:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 321,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "3740:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3749:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        },
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3732:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:49:0"
                }
              ]
            },
            "functionSelector": "cd30a976",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBMIProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3324:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3323:17:0"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3350:0:0"
            },
            "scope": 554,
            "src": "3297:491:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "3853:1366:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 332,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3872:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3872:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 334,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "3890:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 336,
                              "indexExpression": {
                                "id": 335,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "3903:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3890:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "3890:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 338,
                            "name": "THREE_MONTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3931:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3890:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3872:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e647320617265206c6f636b656420666f722033206d6f6e7468",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3944:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                          "typeString": "literal_string \"Funds are locked for 3 month\""
                        },
                        "value": "Funds are locked for 3 month"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                          "typeString": "literal_string \"Funds are locked for 3 month\""
                        }
                      ],
                      "id": 331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3863:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:112:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 350,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "4038:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 345,
                                  "name": "_stakersPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "3994:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                    "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                  }
                                },
                                "id": 347,
                                "indexExpression": {
                                  "id": 346,
                                  "name": "tokenID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 328,
                                  "src": "4007:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3994:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                  "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "3994:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOfNFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3588,
                            "src": "3994:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3994:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 352,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5340,
                            "src": "4050:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4050:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3994:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4064:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        },
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        }
                      ],
                      "id": 344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3985:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:104:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "3985:104:0"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "stakingInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "4107:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                        "typeString": "struct BMIDAIStaking.StakingInfo"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "StakingInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 16,
                        "src": "4107:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$16_storage_ptr",
                          "typeString": "struct BMIDAIStaking.StakingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 363,
                  "initialValue": {
                    "baseExpression": {
                      "id": 360,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "4140:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                        "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 362,
                    "indexExpression": {
                      "id": 361,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "4153:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4140:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4107:54:0"
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "4231:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4231:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 386,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 370,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "4276:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4268:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4268:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4268:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 372,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5340,
                          "src": "4297:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4297:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 376,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "4340:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 378,
                              "indexExpression": {
                                "id": 377,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "4353:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4340:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 379,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11,
                            "src": "4340:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 380,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "4380:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 382,
                              "indexExpression": {
                                "id": 381,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "4393:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4380:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakedDaiAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "4380:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 374,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "4311:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getProfit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1373,
                          "src": "4311:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) external returns (uint256)"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4311:107:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 366,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "4246:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6826",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6807,
                      "src": "4246:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:173:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4231:188:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 388,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "4437:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4446:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        },
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4429:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "4429:49:0"
                },
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 392,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "4547:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 397,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "4587:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4579:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4579:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4579:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 401,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "4616:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                                  "typeString": "struct BMIDAIStaking.StakingInfo memory"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBook",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "4616:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                "typeString": "contract PolicyBook"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                "typeString": "contract PolicyBook"
                              }
                            ],
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4608:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 399,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4608:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4608:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 404,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "4641:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "4641:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 393,
                          "name": "daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "4557:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6826",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6807,
                        "src": "4557:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4557:112:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4547:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "4547:122:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 410,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "4687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4696:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        },
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4679:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:49:0"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 414,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "4795:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 418,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5340,
                            "src": "4837:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4837:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 420,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "4851:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "4851:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 415,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "4805:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                              "typeString": "struct BMIDAIStaking.StakingInfo memory"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "policyBook",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "4805:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyBook_$2176",
                            "typeString": "contract PolicyBook"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3913,
                        "src": "4805:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4805:74:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4795:84:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4795:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 426,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "4897:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4906:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4889:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4889:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "4889:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 435,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5340,
                          "src": "4994:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4994:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 437,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5008:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5017:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 430,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "4953:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                              "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 432,
                          "indexExpression": {
                            "id": 431,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "4966:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4953:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                            "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyBook",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "4953:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyBook_$2176",
                          "typeString": "contract PolicyBook"
                        }
                      },
                      "id": 434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5328,
                      "src": "4953:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4953:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "4953:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 446,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5073:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 441,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "5038:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 444,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 442,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5340,
                            "src": "5052:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5052:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5038:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8123_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8163,
                      "src": "5038:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$8123_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$8123_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5038:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:43:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 450,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5114:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 453,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "5131:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                                  "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 455,
                              "indexExpression": {
                                "id": 454,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "5144:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5131:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                                "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "policyBook",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15,
                            "src": "5131:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$2176",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$2176",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5123:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 451,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5123:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5123:41:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 449,
                      "name": "StakingNFTBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "5097:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5097:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "EmitStatement",
                  "src": "5092:73:0"
                },
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5176:28:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 460,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5183:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                          "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 462,
                      "indexExpression": {
                        "id": 461,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5196:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5183:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                        "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5176:28:0"
                }
              ]
            },
            "functionSelector": "a7fa3c7f",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFundsWithProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3827:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3827:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3826:17:0"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3853:0:0"
            },
            "scope": 554,
            "src": "3794:1425:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "5318:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 473,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "5335:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$16_storage_$",
                        "typeString": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 475,
                    "indexExpression": {
                      "id": 474,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "5348:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5335:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage",
                      "typeString": "struct BMIDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 472,
                  "id": 476,
                  "nodeType": "Return",
                  "src": "5328:28:0"
                }
              ]
            },
            "functionSelector": "96344eaf",
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakingInfoByToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 468,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5260:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5260:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5259:17:0"
            },
            "returnParameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "5298:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$16_memory_ptr",
                    "typeString": "struct BMIDAIStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "StakingInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16,
                    "src": "5298:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$16_storage_ptr",
                      "typeString": "struct BMIDAIStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5297:20:0"
            },
            "scope": 554,
            "src": "5232:131:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "5439:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 486,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "5457:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5474:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5466:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 487,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5466:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5466:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5457:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5478:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5449:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5449:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "5449:75:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 495,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "5542:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 497,
                        "indexExpression": {
                          "id": 496,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "5556:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5542:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$8123_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8197,
                      "src": "5542:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8123_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$8123_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5542:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 484,
                  "id": 500,
                  "nodeType": "Return",
                  "src": "5535:36:0"
                }
              ]
            },
            "functionSelector": "12ed9d29",
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "howManyStakings",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 480,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5394:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:15:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "5430:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5430:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5429:9:0"
            },
            "scope": 554,
            "src": "5369:209:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "5671:268:0",
              "statements": [
                {
                  "assignments": [
                    511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 511,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "5681:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5681:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 515,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "5712:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 512,
                      "name": "howManyStakings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "5696:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5696:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5681:37:0"
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "5737:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 518,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5737:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 519,
                        "nodeType": "ArrayTypeName",
                        "src": "5737:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "5777:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5763:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5767:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 522,
                        "nodeType": "ArrayTypeName",
                        "src": "5767:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5763:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5737:45:0"
                },
                {
                  "body": {
                    "id": 548,
                    "nodeType": "Block",
                    "src": "5836:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 537,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "5850:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 539,
                            "indexExpression": {
                              "id": 538,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "5857:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5850:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 544,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 528,
                                "src": "5886:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 540,
                                  "name": "_holderTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "5862:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$8123_storage_$",
                                    "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                                  }
                                },
                                "id": 542,
                                "indexExpression": {
                                  "id": 541,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "5876:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5862:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UintSet_$8123_storage",
                                  "typeString": "struct EnumerableSet.UintSet storage ref"
                                }
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "at",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8217,
                              "src": "5862:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$8123_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$8123_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                              }
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5862:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5850:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 547,
                        "nodeType": "ExpressionStatement",
                        "src": "5850:38:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 531,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "5813:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 532,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "5817:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5813:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 549,
                  "initializationExpression": {
                    "assignments": [
                      528
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 549,
                        "src": "5798:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5798:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 530,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5810:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5798:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5823:3:0",
                      "subExpression": {
                        "id": 534,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "5823:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 536,
                    "nodeType": "ExpressionStatement",
                    "src": "5823:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5793:106:0"
                },
                {
                  "expression": {
                    "id": 550,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "5916:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 509,
                  "id": 551,
                  "nodeType": "Return",
                  "src": "5909:13:0"
                }
              ]
            },
            "functionSelector": "69c54086",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingTokensByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "5617:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5617:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5616:15:0"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "5653:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 506,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5653:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 507,
                    "nodeType": "ArrayTypeName",
                    "src": "5653:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5652:18:0"
            },
            "scope": 554,
            "src": "5584:355:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 555,
        "src": "300:5641:0"
      }
    ],
    "src": "32:5910:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BMIDAIStaking.sol",
      "exportedSymbols": {
        "AccessControl": [
          5635
        ],
        "Address": [
          7283
        ],
        "BMIDAIStaking": [
          554
        ],
        "Context": [
          5352
        ],
        "ContractsRegistry": [
          1243
        ],
        "DefiYieldGenerator": [
          1374
        ],
        "ERC1155": [
          5268
        ],
        "ERC1155NFTMintableBurnable": [
          5329
        ],
        "ERC165": [
          5801
        ],
        "EnumerableMap": [
          7738
        ],
        "EnumerableSet": [
          8218
        ],
        "IERC1155": [
          6204
        ],
        "IERC1155Receiver": [
          6245
        ],
        "IERC165": [
          5813
        ],
        "IERC20": [
          6826
        ],
        "IPolicyBook": [
          2980
        ],
        "IPolicyBookFabric": [
          3029
        ],
        "Math": [
          5886
        ],
        "Ownable": [
          5744
        ],
        "PolicyBook": [
          2176
        ],
        "SafeMath": [
          6082
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 8219,
          "absolutePath": "@openzeppelin/contracts/utils/EnumerableSet.sol",
          "file": "@openzeppelin/contracts/utils/EnumerableSet.sol",
          "scope": 555,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "91:57:0"
      },
      {
        "attributes": {
          "SourceUnit": 5745,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 555,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "149:52:0"
      },
      {
        "attributes": {
          "SourceUnit": 2177,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
          "file": "./PolicyBook.sol",
          "scope": 555,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5,
        "name": "ImportDirective",
        "src": "203:26:0"
      },
      {
        "attributes": {
          "SourceUnit": 1244,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 555,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6,
        "name": "ImportDirective",
        "src": "230:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1375,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
          "file": "./DefiYieldGenerator.sol",
          "scope": 555,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7,
        "name": "ImportDirective",
        "src": "264:34:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5352,
            5744
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            554,
            5744,
            5352
          ],
          "name": "BMIDAIStaking",
          "scope": 555
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5744,
                  "type": "contract Ownable"
                },
                "id": 8,
                "name": "UserDefinedTypeName",
                "src": "326:7:0"
              }
            ],
            "id": 9,
            "name": "InheritanceSpecifier",
            "src": "326:7:0"
          },
          {
            "attributes": {
              "canonicalName": "BMIDAIStaking.StakingInfo",
              "name": "StakingInfo",
              "scope": 554,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakingStartTime",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 10,
                    "name": "ElementaryTypeName",
                    "src": "369:7:0"
                  }
                ],
                "id": 11,
                "name": "VariableDeclaration",
                "src": "369:24:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakedDaiAmount",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "403:7:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "403:23:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "policyBook",
                  "scope": 16,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "contract PolicyBook",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "PolicyBook",
                      "referencedDeclaration": 2176,
                      "type": "contract PolicyBook"
                    },
                    "id": 14,
                    "name": "UserDefinedTypeName",
                    "src": "436:10:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "436:21:0"
              }
            ],
            "id": 16,
            "name": "StructDefinition",
            "src": "340:124:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "EnumerableSet",
                  "referencedDeclaration": 8218,
                  "type": "library EnumerableSet"
                },
                "id": 17,
                "name": "UserDefinedTypeName",
                "src": "476:13:0"
              },
              {
                "attributes": {
                  "name": "EnumerableSet.UintSet",
                  "referencedDeclaration": 8123,
                  "type": "struct EnumerableSet.UintSet"
                },
                "id": 18,
                "name": "UserDefinedTypeName",
                "src": "494:21:0"
              }
            ],
            "id": 19,
            "name": "UsingForDirective",
            "src": "470:46:0"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "THREE_MONTH",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 20,
                "name": "ElementaryTypeName",
                "src": "522:7:0"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_7776000_by_1",
                    "typeString": "int_const 7776000"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "int_const 7776000"
                },
                "children": [
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 21,
                    "name": "Literal",
                    "src": "561:1:0"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3330",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": "days",
                      "token": "number",
                      "type": "int_const 2592000",
                      "value": "30"
                    },
                    "id": 22,
                    "name": "Literal",
                    "src": "565:7:0"
                  }
                ],
                "id": 23,
                "name": "BinaryOperation",
                "src": "561:11:0"
              }
            ],
            "id": 24,
            "name": "VariableDeclaration",
            "src": "522:50:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1243,
                  "type": "contract ContractsRegistry"
                },
                "id": 25,
                "name": "UserDefinedTypeName",
                "src": "583:17:0"
              }
            ],
            "id": 26,
            "name": "VariableDeclaration",
            "src": "583:42:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6826,
                  "type": "contract IERC20"
                },
                "id": 27,
                "name": "UserDefinedTypeName",
                "src": "632:6:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "632:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6826,
                  "type": "contract IERC20"
                },
                "id": 29,
                "name": "UserDefinedTypeName",
                "src": "660:6:0"
              }
            ],
            "id": 30,
            "name": "VariableDeclaration",
            "src": "660:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "843fe5f0",
              "mutability": "mutable",
              "name": "defiYieldGenerator",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DefiYieldGenerator",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "DefiYieldGenerator",
                  "referencedDeclaration": 1374,
                  "type": "contract DefiYieldGenerator"
                },
                "id": 31,
                "name": "UserDefinedTypeName",
                "src": "688:18:0"
              }
            ],
            "id": 32,
            "name": "VariableDeclaration",
            "src": "688:44:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_holderTokens",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct EnumerableSet.UintSet)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct EnumerableSet.UintSet)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 33,
                    "name": "ElementaryTypeName",
                    "src": "752:7:0"
                  },
                  {
                    "attributes": {
                      "name": "EnumerableSet.UintSet",
                      "referencedDeclaration": 8123,
                      "type": "struct EnumerableSet.UintSet"
                    },
                    "id": 34,
                    "name": "UserDefinedTypeName",
                    "src": "763:21:0"
                  }
                ],
                "id": 35,
                "name": "Mapping",
                "src": "743:42:0"
              }
            ],
            "id": 36,
            "name": "VariableDeclaration",
            "src": "743:64:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_stakersPool",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 37,
                    "name": "ElementaryTypeName",
                    "src": "821:7:0"
                  },
                  {
                    "attributes": {
                      "name": "StakingInfo",
                      "referencedDeclaration": 16,
                      "type": "struct BMIDAIStaking.StakingInfo"
                    },
                    "id": 38,
                    "name": "UserDefinedTypeName",
                    "src": "832:11:0"
                  }
                ],
                "id": 39,
                "name": "Mapping",
                "src": "813:31:0"
              }
            ],
            "id": 40,
            "name": "VariableDeclaration",
            "src": "813:52:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_currentNFTMintID",
              "scope": 554,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 42,
                "name": "ElementaryTypeName",
                "src": "928:7:0"
              },
              {
                "attributes": {
                  "hexvalue": "32",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 2",
                  "value": "2"
                },
                "id": 43,
                "name": "Literal",
                "src": "964:1:0"
              },
              {
                "attributes": {
                  "text": "@dev crutial to start from 2"
                },
                "id": 41,
                "name": "StructuredDocumentation",
                "src": "891:32:0"
              }
            ],
            "id": 44,
            "name": "VariableDeclaration",
            "src": "928:37:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingNFTMinted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 45,
                        "name": "ElementaryTypeName",
                        "src": "996:7:0"
                      }
                    ],
                    "id": 46,
                    "name": "VariableDeclaration",
                    "src": "996:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 47,
                        "name": "ElementaryTypeName",
                        "src": "1008:7:0"
                      }
                    ],
                    "id": 48,
                    "name": "VariableDeclaration",
                    "src": "1008:25:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 52,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 49,
                        "name": "ElementaryTypeName",
                        "src": "1035:7:0"
                      }
                    ],
                    "id": 50,
                    "name": "VariableDeclaration",
                    "src": "1035:10:0"
                  }
                ],
                "id": 51,
                "name": "ParameterList",
                "src": "995:51:0"
              }
            ],
            "id": 52,
            "name": "EventDefinition",
            "src": "973:74:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "StakingNFTBurned"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "1075:7:0"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "1075:10:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "1087:7:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "1087:25:0"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "1074:39:0"
              }
            ],
            "id": 58,
            "name": "EventDefinition",
            "src": "1052:62:0"
          },
          {
            "attributes": {
              "name": "onlyDefiYieldGenerator",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 59,
                "name": "ParameterList",
                "src": "1151:2:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                                  "typeString": "literal_string \"Only generator is allowed to increase profit\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "1164:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5340,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 61,
                                    "name": "Identifier",
                                    "src": "1173:10:0"
                                  }
                                ],
                                "id": 62,
                                "name": "FunctionCall",
                                "src": "1173:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 63,
                                        "name": "ElementaryTypeName",
                                        "src": "1189:7:0"
                                      }
                                    ],
                                    "id": 64,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1189:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 32,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 65,
                                    "name": "Identifier",
                                    "src": "1197:18:0"
                                  }
                                ],
                                "id": 66,
                                "name": "FunctionCall",
                                "src": "1189:27:0"
                              }
                            ],
                            "id": 67,
                            "name": "BinaryOperation",
                            "src": "1173:43:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6372656173652070726f666974",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only generator is allowed to increase profit\"",
                              "value": "Only generator is allowed to increase profit"
                            },
                            "id": 68,
                            "name": "Literal",
                            "src": "1218:46:0"
                          }
                        ],
                        "id": 69,
                        "name": "FunctionCall",
                        "src": "1164:101:0"
                      }
                    ],
                    "id": 70,
                    "name": "ExpressionStatement",
                    "src": "1164:101:0"
                  },
                  {
                    "id": 71,
                    "name": "PlaceholderStatement",
                    "src": "1275:1:0"
                  }
                ],
                "id": 72,
                "name": "Block",
                "src": "1154:129:0"
              }
            ],
            "id": 73,
            "name": "ModifierDefinition",
            "src": "1120:163:0"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 554,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 118,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1243,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 74,
                        "name": "UserDefinedTypeName",
                        "src": "1311:17:0"
                      }
                    ],
                    "id": 75,
                    "name": "VariableDeclaration",
                    "src": "1311:36:0"
                  }
                ],
                "id": 76,
                "name": "ParameterList",
                "src": "1310:38:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 79,
                "name": "ParameterList",
                "src": "1368:0:0"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5693,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 77,
                    "name": "Identifier",
                    "src": "1358:9:0"
                  }
                ],
                "id": 78,
                "name": "ModifierInvocation",
                "src": "1358:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 26,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 80,
                            "name": "Identifier",
                            "src": "1378:17:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 75,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 81,
                            "name": "Identifier",
                            "src": "1398:18:0"
                          }
                        ],
                        "id": 82,
                        "name": "Assignment",
                        "src": "1378:38:0"
                      }
                    ],
                    "id": 83,
                    "name": "ExpressionStatement",
                    "src": "1378:38:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 28,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 84,
                            "name": "Identifier",
                            "src": "1427:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6826,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 85,
                                "name": "Identifier",
                                "src": "1438:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1173,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 75,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 86,
                                        "name": "Identifier",
                                        "src": "1445:18:0"
                                      }
                                    ],
                                    "id": 87,
                                    "name": "MemberAccess",
                                    "src": "1445:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1100,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 75,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 88,
                                            "name": "Identifier",
                                            "src": "1476:18:0"
                                          }
                                        ],
                                        "id": 89,
                                        "name": "MemberAccess",
                                        "src": "1476:29:0"
                                      }
                                    ],
                                    "id": 90,
                                    "name": "FunctionCall",
                                    "src": "1476:31:0"
                                  }
                                ],
                                "id": 91,
                                "name": "FunctionCall",
                                "src": "1445:63:0"
                              }
                            ],
                            "id": 92,
                            "name": "FunctionCall",
                            "src": "1438:71:0"
                          }
                        ],
                        "id": 93,
                        "name": "Assignment",
                        "src": "1427:82:0"
                      }
                    ],
                    "id": 94,
                    "name": "ExpressionStatement",
                    "src": "1427:82:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 30,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 95,
                            "name": "Identifier",
                            "src": "1519:8:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6826,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 96,
                                "name": "Identifier",
                                "src": "1530:6:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1173,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 75,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 97,
                                        "name": "Identifier",
                                        "src": "1537:18:0"
                                      }
                                    ],
                                    "id": 98,
                                    "name": "MemberAccess",
                                    "src": "1537:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1108,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 75,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 99,
                                            "name": "Identifier",
                                            "src": "1568:18:0"
                                          }
                                        ],
                                        "id": 100,
                                        "name": "MemberAccess",
                                        "src": "1568:29:0"
                                      }
                                    ],
                                    "id": 101,
                                    "name": "FunctionCall",
                                    "src": "1568:31:0"
                                  }
                                ],
                                "id": 102,
                                "name": "FunctionCall",
                                "src": "1537:63:0"
                              }
                            ],
                            "id": 103,
                            "name": "FunctionCall",
                            "src": "1530:71:0"
                          }
                        ],
                        "id": 104,
                        "name": "Assignment",
                        "src": "1519:82:0"
                      }
                    ],
                    "id": 105,
                    "name": "ExpressionStatement",
                    "src": "1519:82:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DefiYieldGenerator"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 32,
                              "type": "contract DefiYieldGenerator",
                              "value": "defiYieldGenerator"
                            },
                            "id": 106,
                            "name": "Identifier",
                            "src": "1611:18:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract DefiYieldGenerator",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1374,
                                  "type": "type(contract DefiYieldGenerator)",
                                  "value": "DefiYieldGenerator"
                                },
                                "id": 107,
                                "name": "Identifier",
                                "src": "1632:18:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1173,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 26,
                                          "type": "contract ContractsRegistry",
                                          "value": "contractsRegistry"
                                        },
                                        "id": 108,
                                        "name": "Identifier",
                                        "src": "1651:17:0"
                                      }
                                    ],
                                    "id": 109,
                                    "name": "MemberAccess",
                                    "src": "1651:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getYieldGeneratorName",
                                          "referencedDeclaration": 1140,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 26,
                                              "type": "contract ContractsRegistry",
                                              "value": "contractsRegistry"
                                            },
                                            "id": 110,
                                            "name": "Identifier",
                                            "src": "1681:17:0"
                                          }
                                        ],
                                        "id": 111,
                                        "name": "MemberAccess",
                                        "src": "1681:39:0"
                                      }
                                    ],
                                    "id": 112,
                                    "name": "FunctionCall",
                                    "src": "1681:41:0"
                                  }
                                ],
                                "id": 113,
                                "name": "FunctionCall",
                                "src": "1651:72:0"
                              }
                            ],
                            "id": 114,
                            "name": "FunctionCall",
                            "src": "1632:92:0"
                          }
                        ],
                        "id": 115,
                        "name": "Assignment",
                        "src": "1611:113:0"
                      }
                    ],
                    "id": 116,
                    "name": "ExpressionStatement",
                    "src": "1611:113:0"
                  }
                ],
                "id": 117,
                "name": "Block",
                "src": "1368:363:0"
              }
            ],
            "id": 118,
            "name": "FunctionDefinition",
            "src": "1289:442:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_mintNFT",
              "scope": 554,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_staker",
                      "scope": 225,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 119,
                        "name": "ElementaryTypeName",
                        "src": "1764:7:0"
                      }
                    ],
                    "id": 120,
                    "name": "VariableDeclaration",
                    "src": "1764:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 225,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 121,
                        "name": "ElementaryTypeName",
                        "src": "1797:7:0"
                      }
                    ],
                    "id": 122,
                    "name": "VariableDeclaration",
                    "src": "1797:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 225,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 2176,
                          "type": "contract PolicyBook"
                        },
                        "id": 123,
                        "name": "UserDefinedTypeName",
                        "src": "1822:10:0"
                      }
                    ],
                    "id": 124,
                    "name": "VariableDeclaration",
                    "src": "1822:22:0"
                  }
                ],
                "id": 125,
                "name": "ParameterList",
                "src": "1754:96:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 126,
                "name": "ParameterList",
                "src": "1859:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        128
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakerBalance",
                          "scope": 224,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 127,
                            "name": "ElementaryTypeName",
                            "src": "1882:7:0"
                          }
                        ],
                        "id": 128,
                        "name": "VariableDeclaration",
                        "src": "1882:21:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOfNFT",
                              "referencedDeclaration": 3574,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 124,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 129,
                                "name": "Identifier",
                                "src": "1906:11:0"
                              }
                            ],
                            "id": 130,
                            "name": "MemberAccess",
                            "src": "1906:24:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 120,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 131,
                            "name": "Identifier",
                            "src": "1931:7:0"
                          }
                        ],
                        "id": 132,
                        "name": "FunctionCall",
                        "src": "1906:33:0"
                      }
                    ],
                    "id": 133,
                    "name": "VariableDeclarationStatement",
                    "src": "1882:57:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        135
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "totalAmount",
                          "scope": 224,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 134,
                            "name": "ElementaryTypeName",
                            "src": "1949:7:0"
                          }
                        ],
                        "id": 135,
                        "name": "VariableDeclaration",
                        "src": "1949:19:0"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 122,
                          "type": "uint256",
                          "value": "_amount"
                        },
                        "id": 136,
                        "name": "Identifier",
                        "src": "1971:7:0"
                      }
                    ],
                    "id": 137,
                    "name": "VariableDeclarationStatement",
                    "src": "1949:29:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            139
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 184,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 138,
                                "name": "ElementaryTypeName",
                                "src": "1994:7:0"
                              }
                            ],
                            "id": 139,
                            "name": "VariableDeclaration",
                            "src": "1994:9:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 140,
                            "name": "Literal",
                            "src": "2006:1:0"
                          }
                        ],
                        "id": 141,
                        "name": "VariableDeclarationStatement",
                        "src": "1994:13:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 139,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 142,
                            "name": "Identifier",
                            "src": "2009:1:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 128,
                              "type": "uint256",
                              "value": "stakerBalance"
                            },
                            "id": 143,
                            "name": "Identifier",
                            "src": "2013:13:0"
                          }
                        ],
                        "id": 144,
                        "name": "BinaryOperation",
                        "src": "2009:17:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 139,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 145,
                                "name": "Identifier",
                                "src": "2028:1:0"
                              }
                            ],
                            "id": 146,
                            "name": "UnaryOperation",
                            "src": "2028:3:0"
                          }
                        ],
                        "id": 147,
                        "name": "ExpressionStatement",
                        "src": "2028:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                149
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "tokenID",
                                  "scope": 183,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 148,
                                    "name": "ElementaryTypeName",
                                    "src": "2047:7:0"
                                  }
                                ],
                                "id": 149,
                                "name": "VariableDeclaration",
                                "src": "2047:15:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "tokenOfOwnerByIndexNFT",
                                      "referencedDeclaration": 3605,
                                      "type": "function (address,uint256) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 124,
                                          "type": "contract PolicyBook",
                                          "value": "_policyBook"
                                        },
                                        "id": 150,
                                        "name": "Identifier",
                                        "src": "2065:11:0"
                                      }
                                    ],
                                    "id": 151,
                                    "name": "MemberAccess",
                                    "src": "2065:34:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 120,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 152,
                                    "name": "Identifier",
                                    "src": "2100:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 139,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 153,
                                    "name": "Identifier",
                                    "src": "2109:1:0"
                                  }
                                ],
                                "id": 154,
                                "name": "FunctionCall",
                                "src": "2065:46:0"
                              }
                            ],
                            "id": 155,
                            "name": "VariableDeclarationStatement",
                            "src": "2047:64:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 135,
                                      "type": "uint256",
                                      "value": "totalAmount"
                                    },
                                    "id": 156,
                                    "name": "Identifier",
                                    "src": "2150:11:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakedDaiAmount",
                                      "referencedDeclaration": 13,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 157,
                                            "name": "Identifier",
                                            "src": "2165:12:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 149,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 158,
                                            "name": "Identifier",
                                            "src": "2178:7:0"
                                          }
                                        ],
                                        "id": 159,
                                        "name": "IndexAccess",
                                        "src": "2165:21:0"
                                      }
                                    ],
                                    "id": 160,
                                    "name": "MemberAccess",
                                    "src": "2165:37:0"
                                  }
                                ],
                                "id": 161,
                                "name": "Assignment",
                                "src": "2150:52:0"
                              }
                            ],
                            "id": 162,
                            "name": "ExpressionStatement",
                            "src": "2150:52:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "burnNFT",
                                      "referencedDeclaration": 5328,
                                      "type": "function (address,uint256,uint256) external"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 124,
                                          "type": "contract PolicyBook",
                                          "value": "_policyBook"
                                        },
                                        "id": 163,
                                        "name": "Identifier",
                                        "src": "2233:11:0"
                                      }
                                    ],
                                    "id": 165,
                                    "name": "MemberAccess",
                                    "src": "2233:19:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 120,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 166,
                                    "name": "Identifier",
                                    "src": "2253:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 167,
                                    "name": "Identifier",
                                    "src": "2262:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 168,
                                    "name": "Literal",
                                    "src": "2271:1:0"
                                  }
                                ],
                                "id": 169,
                                "name": "FunctionCall",
                                "src": "2233:40:0"
                              }
                            ],
                            "id": 170,
                            "name": "ExpressionStatement",
                            "src": "2233:40:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "remove",
                                      "referencedDeclaration": 8163,
                                      "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct EnumerableSet.UintSet storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 36,
                                              "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                              "value": "_holderTokens"
                                            },
                                            "id": 171,
                                            "name": "Identifier",
                                            "src": "2287:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 120,
                                              "type": "address",
                                              "value": "_staker"
                                            },
                                            "id": 172,
                                            "name": "Identifier",
                                            "src": "2301:7:0"
                                          }
                                        ],
                                        "id": 173,
                                        "name": "IndexAccess",
                                        "src": "2287:22:0"
                                      }
                                    ],
                                    "id": 174,
                                    "name": "MemberAccess",
                                    "src": "2287:29:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 175,
                                    "name": "Identifier",
                                    "src": "2317:7:0"
                                  }
                                ],
                                "id": 176,
                                "name": "FunctionCall",
                                "src": "2287:38:0"
                              }
                            ],
                            "id": 177,
                            "name": "ExpressionStatement",
                            "src": "2287:38:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "delete",
                                  "prefix": true,
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 178,
                                        "name": "Identifier",
                                        "src": "2346:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 149,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 179,
                                        "name": "Identifier",
                                        "src": "2359:7:0"
                                      }
                                    ],
                                    "id": 180,
                                    "name": "IndexAccess",
                                    "src": "2346:21:0"
                                  }
                                ],
                                "id": 181,
                                "name": "UnaryOperation",
                                "src": "2339:28:0"
                              }
                            ],
                            "id": 182,
                            "name": "ExpressionStatement",
                            "src": "2339:28:0"
                          }
                        ],
                        "id": 183,
                        "name": "Block",
                        "src": "2033:345:0"
                      }
                    ],
                    "id": 184,
                    "name": "ForStatement",
                    "src": "1989:389:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mintNFT",
                              "referencedDeclaration": 5310,
                              "type": "function (address,uint256,uint256,bytes memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 124,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 185,
                                "name": "Identifier",
                                "src": "2388:11:0"
                              }
                            ],
                            "id": 187,
                            "name": "MemberAccess",
                            "src": "2388:19:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 120,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 188,
                            "name": "Identifier",
                            "src": "2408:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 189,
                            "name": "Identifier",
                            "src": "2417:17:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 190,
                            "name": "Literal",
                            "src": "2436:1:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 191,
                            "name": "Literal",
                            "src": "2439:2:0"
                          }
                        ],
                        "id": 192,
                        "name": "FunctionCall",
                        "src": "2388:54:0"
                      }
                    ],
                    "id": 193,
                    "name": "ExpressionStatement",
                    "src": "2388:54:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 194,
                                "name": "Identifier",
                                "src": "2453:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "uint256",
                                  "value": "_currentNFTMintID"
                                },
                                "id": 195,
                                "name": "Identifier",
                                "src": "2466:17:0"
                              }
                            ],
                            "id": 196,
                            "name": "IndexAccess",
                            "src": "2453:31:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct BMIDAIStaking.StakingInfo memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 16,
                                  "type": "type(struct BMIDAIStaking.StakingInfo storage pointer)",
                                  "value": "StakingInfo"
                                },
                                "id": 197,
                                "name": "Identifier",
                                "src": "2487:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 198,
                                    "name": "Identifier",
                                    "src": "2499:5:0"
                                  }
                                ],
                                "id": 199,
                                "name": "MemberAccess",
                                "src": "2499:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 135,
                                  "type": "uint256",
                                  "value": "totalAmount"
                                },
                                "id": 200,
                                "name": "Identifier",
                                "src": "2516:11:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 124,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 201,
                                "name": "Identifier",
                                "src": "2529:11:0"
                              }
                            ],
                            "id": 202,
                            "name": "FunctionCall",
                            "src": "2487:54:0"
                          }
                        ],
                        "id": 203,
                        "name": "Assignment",
                        "src": "2453:88:0"
                      }
                    ],
                    "id": 204,
                    "name": "ExpressionStatement",
                    "src": "2453:88:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 8143,
                              "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 205,
                                    "name": "Identifier",
                                    "src": "2551:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 120,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 206,
                                    "name": "Identifier",
                                    "src": "2565:7:0"
                                  }
                                ],
                                "id": 207,
                                "name": "IndexAccess",
                                "src": "2551:22:0"
                              }
                            ],
                            "id": 208,
                            "name": "MemberAccess",
                            "src": "2551:26:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 209,
                            "name": "Identifier",
                            "src": "2578:17:0"
                          }
                        ],
                        "id": 210,
                        "name": "FunctionCall",
                        "src": "2551:45:0"
                      }
                    ],
                    "id": 211,
                    "name": "ExpressionStatement",
                    "src": "2551:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 52,
                              "type": "function (uint256,address,address)",
                              "value": "StakingNFTMinted"
                            },
                            "id": 212,
                            "name": "Identifier",
                            "src": "2612:16:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 213,
                            "name": "Identifier",
                            "src": "2629:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 214,
                                    "name": "ElementaryTypeName",
                                    "src": "2648:7:0"
                                  }
                                ],
                                "id": 215,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2648:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 124,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 216,
                                "name": "Identifier",
                                "src": "2656:11:0"
                              }
                            ],
                            "id": 217,
                            "name": "FunctionCall",
                            "src": "2648:20:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 120,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 218,
                            "name": "Identifier",
                            "src": "2670:7:0"
                          }
                        ],
                        "id": 219,
                        "name": "FunctionCall",
                        "src": "2612:66:0"
                      }
                    ],
                    "id": 220,
                    "name": "EmitStatement",
                    "src": "2607:71:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 44,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 221,
                            "name": "Identifier",
                            "src": "2689:17:0"
                          }
                        ],
                        "id": 222,
                        "name": "UnaryOperation",
                        "src": "2689:19:0"
                      }
                    ],
                    "id": 223,
                    "name": "ExpressionStatement",
                    "src": "2689:19:0"
                  }
                ],
                "id": 224,
                "name": "Block",
                "src": "1859:856:0"
              }
            ],
            "id": 225,
            "name": "FunctionDefinition",
            "src": "1737:978:0"
          },
          {
            "attributes": {
              "functionSelector": "81927714",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeDAIx",
              "scope": 554,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 278,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 226,
                        "name": "ElementaryTypeName",
                        "src": "2744:7:0"
                      }
                    ],
                    "id": 227,
                    "name": "VariableDeclaration",
                    "src": "2744:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 278,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 2176,
                          "type": "contract PolicyBook"
                        },
                        "id": 228,
                        "name": "UserDefinedTypeName",
                        "src": "2761:10:0"
                      }
                    ],
                    "id": 229,
                    "name": "VariableDeclaration",
                    "src": "2761:22:0"
                  }
                ],
                "id": 230,
                "name": "ParameterList",
                "src": "2743:41:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 231,
                "name": "ParameterList",
                "src": "2794:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        233
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 277,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 232,
                            "name": "ElementaryTypeName",
                            "src": "2863:4:0"
                          }
                        ],
                        "id": 233,
                        "name": "VariableDeclaration",
                        "src": "2863:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6807,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 28,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 234,
                                "name": "Identifier",
                                "src": "2878:8:0"
                              }
                            ],
                            "id": 235,
                            "name": "MemberAccess",
                            "src": "2878:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 236,
                                    "name": "ElementaryTypeName",
                                    "src": "2900:7:0"
                                  }
                                ],
                                "id": 237,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2900:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 229,
                                  "type": "contract PolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 238,
                                "name": "Identifier",
                                "src": "2908:11:0"
                              }
                            ],
                            "id": 239,
                            "name": "FunctionCall",
                            "src": "2900:20:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 240,
                                    "name": "ElementaryTypeName",
                                    "src": "2922:7:0"
                                  }
                                ],
                                "id": 241,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2922:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 242,
                                "name": "Identifier",
                                "src": "2930:18:0"
                              }
                            ],
                            "id": 243,
                            "name": "FunctionCall",
                            "src": "2922:27:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 227,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 244,
                            "name": "Identifier",
                            "src": "2951:7:0"
                          }
                        ],
                        "id": 245,
                        "name": "FunctionCall",
                        "src": "2878:81:0"
                      }
                    ],
                    "id": 246,
                    "name": "VariableDeclarationStatement",
                    "src": "2863:96:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                                  "typeString": "literal_string \"Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 247,
                            "name": "Identifier",
                            "src": "2977:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 233,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 248,
                            "name": "Identifier",
                            "src": "2985:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer DAI tokens\"",
                              "value": "Failed to transfer DAI tokens"
                            },
                            "id": 249,
                            "name": "Literal",
                            "src": "2994:31:0"
                          }
                        ],
                        "id": 250,
                        "name": "FunctionCall",
                        "src": "2977:49:0"
                      }
                    ],
                    "id": 251,
                    "name": "ExpressionStatement",
                    "src": "2977:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 233,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 252,
                            "name": "Identifier",
                            "src": "3086:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 3950,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 229,
                                      "type": "contract PolicyBook",
                                      "value": "_policyBook"
                                    },
                                    "id": 253,
                                    "name": "Identifier",
                                    "src": "3096:11:0"
                                  }
                                ],
                                "id": 254,
                                "name": "MemberAccess",
                                "src": "3096:24:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5340,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 255,
                                    "name": "Identifier",
                                    "src": "3121:10:0"
                                  }
                                ],
                                "id": 256,
                                "name": "FunctionCall",
                                "src": "3121:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BMIDAIStaking_$554",
                                          "typeString": "contract BMIDAIStaking"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 257,
                                        "name": "ElementaryTypeName",
                                        "src": "3135:7:0"
                                      }
                                    ],
                                    "id": 258,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3135:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -28,
                                      "type": "contract BMIDAIStaking",
                                      "value": "this"
                                    },
                                    "id": 259,
                                    "name": "Identifier",
                                    "src": "3143:4:0"
                                  }
                                ],
                                "id": 260,
                                "name": "FunctionCall",
                                "src": "3135:13:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 227,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 261,
                                "name": "Identifier",
                                "src": "3150:7:0"
                              }
                            ],
                            "id": 262,
                            "name": "FunctionCall",
                            "src": "3096:62:0"
                          }
                        ],
                        "id": 263,
                        "name": "Assignment",
                        "src": "3086:72:0"
                      }
                    ],
                    "id": 264,
                    "name": "ExpressionStatement",
                    "src": "3086:72:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                                  "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 265,
                            "name": "Identifier",
                            "src": "3176:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 233,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 266,
                            "name": "Identifier",
                            "src": "3184:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer bmiDAIx tokens\"",
                              "value": "Failed to transfer bmiDAIx tokens"
                            },
                            "id": 267,
                            "name": "Literal",
                            "src": "3193:35:0"
                          }
                        ],
                        "id": 268,
                        "name": "FunctionCall",
                        "src": "3176:53:0"
                      }
                    ],
                    "id": 269,
                    "name": "ExpressionStatement",
                    "src": "3176:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                  "typeString": "contract PolicyBook"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 225,
                              "type": "function (address,uint256,contract PolicyBook)",
                              "value": "_mintNFT"
                            },
                            "id": 270,
                            "name": "Identifier",
                            "src": "3240:8:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5340,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 271,
                                "name": "Identifier",
                                "src": "3249:10:0"
                              }
                            ],
                            "id": 272,
                            "name": "FunctionCall",
                            "src": "3249:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 227,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 273,
                            "name": "Identifier",
                            "src": "3263:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 229,
                              "type": "contract PolicyBook",
                              "value": "_policyBook"
                            },
                            "id": 274,
                            "name": "Identifier",
                            "src": "3272:11:0"
                          }
                        ],
                        "id": 275,
                        "name": "FunctionCall",
                        "src": "3240:44:0"
                      }
                    ],
                    "id": 276,
                    "name": "ExpressionStatement",
                    "src": "3240:44:0"
                  }
                ],
                "id": 277,
                "name": "Block",
                "src": "2794:497:0"
              }
            ],
            "id": 278,
            "name": "FunctionDefinition",
            "src": "2725:566:0"
          },
          {
            "attributes": {
              "functionSelector": "cd30a976",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawBMIProfit",
              "scope": 554,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 326,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 279,
                        "name": "ElementaryTypeName",
                        "src": "3324:7:0"
                      }
                    ],
                    "id": 280,
                    "name": "VariableDeclaration",
                    "src": "3324:15:0"
                  }
                ],
                "id": 281,
                "name": "ParameterList",
                "src": "3323:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 282,
                "name": "ParameterList",
                "src": "3350:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                                  "typeString": "literal_string \"Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 283,
                            "name": "Identifier",
                            "src": "3360:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ownerOfNFT",
                                      "referencedDeclaration": 3588,
                                      "type": "function (uint256) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "policyBook",
                                          "referencedDeclaration": 15,
                                          "type": "contract PolicyBook"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 40,
                                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                                  "value": "_stakersPool"
                                                },
                                                "id": 284,
                                                "name": "Identifier",
                                                "src": "3369:12:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 280,
                                                  "type": "uint256",
                                                  "value": "tokenID"
                                                },
                                                "id": 285,
                                                "name": "Identifier",
                                                "src": "3382:7:0"
                                              }
                                            ],
                                            "id": 286,
                                            "name": "IndexAccess",
                                            "src": "3369:21:0"
                                          }
                                        ],
                                        "id": 287,
                                        "name": "MemberAccess",
                                        "src": "3369:32:0"
                                      }
                                    ],
                                    "id": 288,
                                    "name": "MemberAccess",
                                    "src": "3369:43:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 280,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 289,
                                    "name": "Identifier",
                                    "src": "3413:7:0"
                                  }
                                ],
                                "id": 290,
                                "name": "FunctionCall",
                                "src": "3369:52:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5340,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 291,
                                    "name": "Identifier",
                                    "src": "3425:10:0"
                                  }
                                ],
                                "id": 292,
                                "name": "FunctionCall",
                                "src": "3425:12:0"
                              }
                            ],
                            "id": 293,
                            "name": "BinaryOperation",
                            "src": "3369:68:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not an NFT token owner\"",
                              "value": "Not an NFT token owner"
                            },
                            "id": 294,
                            "name": "Literal",
                            "src": "3439:24:0"
                          }
                        ],
                        "id": 295,
                        "name": "FunctionCall",
                        "src": "3360:104:0"
                      }
                    ],
                    "id": 296,
                    "name": "ExpressionStatement",
                    "src": "3360:104:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        298
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 325,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 297,
                            "name": "ElementaryTypeName",
                            "src": "3534:4:0"
                          }
                        ],
                        "id": 298,
                        "name": "VariableDeclaration",
                        "src": "3534:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6807,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 299,
                                "name": "Identifier",
                                "src": "3549:8:0"
                              }
                            ],
                            "id": 300,
                            "name": "MemberAccess",
                            "src": "3549:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 301,
                                    "name": "ElementaryTypeName",
                                    "src": "3571:7:0"
                                  }
                                ],
                                "id": 302,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3571:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 303,
                                "name": "Identifier",
                                "src": "3579:18:0"
                              }
                            ],
                            "id": 304,
                            "name": "FunctionCall",
                            "src": "3571:27:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5340,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 305,
                                "name": "Identifier",
                                "src": "3600:10:0"
                              }
                            ],
                            "id": 306,
                            "name": "FunctionCall",
                            "src": "3600:12:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getProfit",
                                  "referencedDeclaration": 1373,
                                  "type": "function (uint256,uint256) external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 32,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 307,
                                    "name": "Identifier",
                                    "src": "3614:18:0"
                                  }
                                ],
                                "id": 308,
                                "name": "MemberAccess",
                                "src": "3614:28:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 11,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 309,
                                        "name": "Identifier",
                                        "src": "3643:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 280,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 310,
                                        "name": "Identifier",
                                        "src": "3656:7:0"
                                      }
                                    ],
                                    "id": 311,
                                    "name": "IndexAccess",
                                    "src": "3643:21:0"
                                  }
                                ],
                                "id": 312,
                                "name": "MemberAccess",
                                "src": "3643:38:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 313,
                                        "name": "Identifier",
                                        "src": "3683:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 280,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 314,
                                        "name": "Identifier",
                                        "src": "3696:7:0"
                                      }
                                    ],
                                    "id": 315,
                                    "name": "IndexAccess",
                                    "src": "3683:21:0"
                                  }
                                ],
                                "id": 316,
                                "name": "MemberAccess",
                                "src": "3683:37:0"
                              }
                            ],
                            "id": 317,
                            "name": "FunctionCall",
                            "src": "3614:107:0"
                          }
                        ],
                        "id": 318,
                        "name": "FunctionCall",
                        "src": "3549:173:0"
                      }
                    ],
                    "id": 319,
                    "name": "VariableDeclarationStatement",
                    "src": "3534:188:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                                  "typeString": "literal_string \"Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 320,
                            "name": "Identifier",
                            "src": "3732:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 298,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 321,
                            "name": "Identifier",
                            "src": "3740:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer BMI tokens\"",
                              "value": "Failed to transfer BMI tokens"
                            },
                            "id": 322,
                            "name": "Literal",
                            "src": "3749:31:0"
                          }
                        ],
                        "id": 323,
                        "name": "FunctionCall",
                        "src": "3732:49:0"
                      }
                    ],
                    "id": 324,
                    "name": "ExpressionStatement",
                    "src": "3732:49:0"
                  }
                ],
                "id": 325,
                "name": "Block",
                "src": "3350:438:0"
              }
            ],
            "id": 326,
            "name": "FunctionDefinition",
            "src": "3297:491:0"
          },
          {
            "attributes": {
              "functionSelector": "a7fa3c7f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFundsWithProfit",
              "scope": 554,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 466,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 327,
                        "name": "ElementaryTypeName",
                        "src": "3827:7:0"
                      }
                    ],
                    "id": 328,
                    "name": "VariableDeclaration",
                    "src": "3827:15:0"
                  }
                ],
                "id": 329,
                "name": "ParameterList",
                "src": "3826:17:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 330,
                "name": "ParameterList",
                "src": "3853:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                                  "typeString": "literal_string \"Funds are locked for 3 month\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 331,
                            "name": "Identifier",
                            "src": "3863:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 332,
                                    "name": "Identifier",
                                    "src": "3872:5:0"
                                  }
                                ],
                                "id": 333,
                                "name": "MemberAccess",
                                "src": "3872:15:0"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakingStartTime",
                                      "referencedDeclaration": 11,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 40,
                                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 334,
                                            "name": "Identifier",
                                            "src": "3890:12:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 328,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 335,
                                            "name": "Identifier",
                                            "src": "3903:7:0"
                                          }
                                        ],
                                        "id": 336,
                                        "name": "IndexAccess",
                                        "src": "3890:21:0"
                                      }
                                    ],
                                    "id": 337,
                                    "name": "MemberAccess",
                                    "src": "3890:38:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 24,
                                      "type": "uint256",
                                      "value": "THREE_MONTH"
                                    },
                                    "id": 338,
                                    "name": "Identifier",
                                    "src": "3931:11:0"
                                  }
                                ],
                                "id": 339,
                                "name": "BinaryOperation",
                                "src": "3890:52:0"
                              }
                            ],
                            "id": 340,
                            "name": "BinaryOperation",
                            "src": "3872:70:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "46756e647320617265206c6f636b656420666f722033206d6f6e7468",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Funds are locked for 3 month\"",
                              "value": "Funds are locked for 3 month"
                            },
                            "id": 341,
                            "name": "Literal",
                            "src": "3944:30:0"
                          }
                        ],
                        "id": 342,
                        "name": "FunctionCall",
                        "src": "3863:112:0"
                      }
                    ],
                    "id": 343,
                    "name": "ExpressionStatement",
                    "src": "3863:112:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                                  "typeString": "literal_string \"Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 344,
                            "name": "Identifier",
                            "src": "3985:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "ownerOfNFT",
                                      "referencedDeclaration": 3588,
                                      "type": "function (uint256) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "policyBook",
                                          "referencedDeclaration": 15,
                                          "type": "contract PolicyBook"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 40,
                                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                                  "value": "_stakersPool"
                                                },
                                                "id": 345,
                                                "name": "Identifier",
                                                "src": "3994:12:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 328,
                                                  "type": "uint256",
                                                  "value": "tokenID"
                                                },
                                                "id": 346,
                                                "name": "Identifier",
                                                "src": "4007:7:0"
                                              }
                                            ],
                                            "id": 347,
                                            "name": "IndexAccess",
                                            "src": "3994:21:0"
                                          }
                                        ],
                                        "id": 348,
                                        "name": "MemberAccess",
                                        "src": "3994:32:0"
                                      }
                                    ],
                                    "id": 349,
                                    "name": "MemberAccess",
                                    "src": "3994:43:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 328,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 350,
                                    "name": "Identifier",
                                    "src": "4038:7:0"
                                  }
                                ],
                                "id": 351,
                                "name": "FunctionCall",
                                "src": "3994:52:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5340,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 352,
                                    "name": "Identifier",
                                    "src": "4050:10:0"
                                  }
                                ],
                                "id": 353,
                                "name": "FunctionCall",
                                "src": "4050:12:0"
                              }
                            ],
                            "id": 354,
                            "name": "BinaryOperation",
                            "src": "3994:68:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not an NFT token owner\"",
                              "value": "Not an NFT token owner"
                            },
                            "id": 355,
                            "name": "Literal",
                            "src": "4064:24:0"
                          }
                        ],
                        "id": 356,
                        "name": "FunctionCall",
                        "src": "3985:104:0"
                      }
                    ],
                    "id": 357,
                    "name": "ExpressionStatement",
                    "src": "3985:104:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        359
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingInfo",
                          "scope": 465,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct BMIDAIStaking.StakingInfo",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "StakingInfo",
                              "referencedDeclaration": 16,
                              "type": "struct BMIDAIStaking.StakingInfo"
                            },
                            "id": 358,
                            "name": "UserDefinedTypeName",
                            "src": "4107:11:0"
                          }
                        ],
                        "id": 359,
                        "name": "VariableDeclaration",
                        "src": "4107:30:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 360,
                            "name": "Identifier",
                            "src": "4140:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 328,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 361,
                            "name": "Identifier",
                            "src": "4153:7:0"
                          }
                        ],
                        "id": 362,
                        "name": "IndexAccess",
                        "src": "4140:21:0"
                      }
                    ],
                    "id": 363,
                    "name": "VariableDeclarationStatement",
                    "src": "4107:54:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        365
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 465,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 364,
                            "name": "ElementaryTypeName",
                            "src": "4231:4:0"
                          }
                        ],
                        "id": 365,
                        "name": "VariableDeclaration",
                        "src": "4231:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6807,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 30,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 366,
                                "name": "Identifier",
                                "src": "4246:8:0"
                              }
                            ],
                            "id": 367,
                            "name": "MemberAccess",
                            "src": "4246:21:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 368,
                                    "name": "ElementaryTypeName",
                                    "src": "4268:7:0"
                                  }
                                ],
                                "id": 369,
                                "name": "ElementaryTypeNameExpression",
                                "src": "4268:7:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 370,
                                "name": "Identifier",
                                "src": "4276:18:0"
                              }
                            ],
                            "id": 371,
                            "name": "FunctionCall",
                            "src": "4268:27:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5340,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 372,
                                "name": "Identifier",
                                "src": "4297:10:0"
                              }
                            ],
                            "id": 373,
                            "name": "FunctionCall",
                            "src": "4297:12:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getProfit",
                                  "referencedDeclaration": 1373,
                                  "type": "function (uint256,uint256) external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 32,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 374,
                                    "name": "Identifier",
                                    "src": "4311:18:0"
                                  }
                                ],
                                "id": 375,
                                "name": "MemberAccess",
                                "src": "4311:28:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakingStartTime",
                                  "referencedDeclaration": 11,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 376,
                                        "name": "Identifier",
                                        "src": "4340:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 328,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 377,
                                        "name": "Identifier",
                                        "src": "4353:7:0"
                                      }
                                    ],
                                    "id": 378,
                                    "name": "IndexAccess",
                                    "src": "4340:21:0"
                                  }
                                ],
                                "id": 379,
                                "name": "MemberAccess",
                                "src": "4340:38:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 380,
                                        "name": "Identifier",
                                        "src": "4380:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 328,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 381,
                                        "name": "Identifier",
                                        "src": "4393:7:0"
                                      }
                                    ],
                                    "id": 382,
                                    "name": "IndexAccess",
                                    "src": "4380:21:0"
                                  }
                                ],
                                "id": 383,
                                "name": "MemberAccess",
                                "src": "4380:37:0"
                              }
                            ],
                            "id": 384,
                            "name": "FunctionCall",
                            "src": "4311:107:0"
                          }
                        ],
                        "id": 385,
                        "name": "FunctionCall",
                        "src": "4246:173:0"
                      }
                    ],
                    "id": 386,
                    "name": "VariableDeclarationStatement",
                    "src": "4231:188:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                                  "typeString": "literal_string \"Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 387,
                            "name": "Identifier",
                            "src": "4429:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 365,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 388,
                            "name": "Identifier",
                            "src": "4437:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer BMI tokens\"",
                              "value": "Failed to transfer BMI tokens"
                            },
                            "id": 389,
                            "name": "Literal",
                            "src": "4446:31:0"
                          }
                        ],
                        "id": 390,
                        "name": "FunctionCall",
                        "src": "4429:49:0"
                      }
                    ],
                    "id": 391,
                    "name": "ExpressionStatement",
                    "src": "4429:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 365,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 392,
                            "name": "Identifier",
                            "src": "4547:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 6807,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "contract IERC20",
                                      "value": "daiToken"
                                    },
                                    "id": 393,
                                    "name": "Identifier",
                                    "src": "4557:8:0"
                                  }
                                ],
                                "id": 394,
                                "name": "MemberAccess",
                                "src": "4557:21:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1374",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 395,
                                        "name": "ElementaryTypeName",
                                        "src": "4579:7:0"
                                      }
                                    ],
                                    "id": 396,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4579:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 32,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 397,
                                    "name": "Identifier",
                                    "src": "4587:18:0"
                                  }
                                ],
                                "id": 398,
                                "name": "FunctionCall",
                                "src": "4579:27:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                          "typeString": "contract PolicyBook"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 399,
                                        "name": "ElementaryTypeName",
                                        "src": "4608:7:0"
                                      }
                                    ],
                                    "id": 400,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4608:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBook",
                                      "referencedDeclaration": 15,
                                      "type": "contract PolicyBook"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 359,
                                          "type": "struct BMIDAIStaking.StakingInfo memory",
                                          "value": "stakingInfo"
                                        },
                                        "id": 401,
                                        "name": "Identifier",
                                        "src": "4616:11:0"
                                      }
                                    ],
                                    "id": 402,
                                    "name": "MemberAccess",
                                    "src": "4616:22:0"
                                  }
                                ],
                                "id": 403,
                                "name": "FunctionCall",
                                "src": "4608:31:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 359,
                                      "type": "struct BMIDAIStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 404,
                                    "name": "Identifier",
                                    "src": "4641:11:0"
                                  }
                                ],
                                "id": 405,
                                "name": "MemberAccess",
                                "src": "4641:27:0"
                              }
                            ],
                            "id": 406,
                            "name": "FunctionCall",
                            "src": "4557:112:0"
                          }
                        ],
                        "id": 407,
                        "name": "Assignment",
                        "src": "4547:122:0"
                      }
                    ],
                    "id": 408,
                    "name": "ExpressionStatement",
                    "src": "4547:122:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                                  "typeString": "literal_string \"Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 409,
                            "name": "Identifier",
                            "src": "4679:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 365,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 410,
                            "name": "Identifier",
                            "src": "4687:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer DAI tokens\"",
                              "value": "Failed to transfer DAI tokens"
                            },
                            "id": 411,
                            "name": "Literal",
                            "src": "4696:31:0"
                          }
                        ],
                        "id": 412,
                        "name": "FunctionCall",
                        "src": "4679:49:0"
                      }
                    ],
                    "id": 413,
                    "name": "ExpressionStatement",
                    "src": "4679:49:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 365,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 414,
                            "name": "Identifier",
                            "src": "4795:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transfer",
                                  "referencedDeclaration": 3913,
                                  "type": "function (address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBook",
                                      "referencedDeclaration": 15,
                                      "type": "contract PolicyBook"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 359,
                                          "type": "struct BMIDAIStaking.StakingInfo memory",
                                          "value": "stakingInfo"
                                        },
                                        "id": 415,
                                        "name": "Identifier",
                                        "src": "4805:11:0"
                                      }
                                    ],
                                    "id": 416,
                                    "name": "MemberAccess",
                                    "src": "4805:22:0"
                                  }
                                ],
                                "id": 417,
                                "name": "MemberAccess",
                                "src": "4805:31:0"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5340,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 418,
                                    "name": "Identifier",
                                    "src": "4837:10:0"
                                  }
                                ],
                                "id": 419,
                                "name": "FunctionCall",
                                "src": "4837:12:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 13,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 359,
                                      "type": "struct BMIDAIStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 420,
                                    "name": "Identifier",
                                    "src": "4851:11:0"
                                  }
                                ],
                                "id": 421,
                                "name": "MemberAccess",
                                "src": "4851:27:0"
                              }
                            ],
                            "id": 422,
                            "name": "FunctionCall",
                            "src": "4805:74:0"
                          }
                        ],
                        "id": 423,
                        "name": "Assignment",
                        "src": "4795:84:0"
                      }
                    ],
                    "id": 424,
                    "name": "ExpressionStatement",
                    "src": "4795:84:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                                  "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 425,
                            "name": "Identifier",
                            "src": "4889:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 365,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 426,
                            "name": "Identifier",
                            "src": "4897:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer bmiDAIx tokens\"",
                              "value": "Failed to transfer bmiDAIx tokens"
                            },
                            "id": 427,
                            "name": "Literal",
                            "src": "4906:35:0"
                          }
                        ],
                        "id": 428,
                        "name": "FunctionCall",
                        "src": "4889:53:0"
                      }
                    ],
                    "id": 429,
                    "name": "ExpressionStatement",
                    "src": "4889:53:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "burnNFT",
                              "referencedDeclaration": 5328,
                              "type": "function (address,uint256,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 15,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 430,
                                        "name": "Identifier",
                                        "src": "4953:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 328,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 431,
                                        "name": "Identifier",
                                        "src": "4966:7:0"
                                      }
                                    ],
                                    "id": 432,
                                    "name": "IndexAccess",
                                    "src": "4953:21:0"
                                  }
                                ],
                                "id": 433,
                                "name": "MemberAccess",
                                "src": "4953:32:0"
                              }
                            ],
                            "id": 434,
                            "name": "MemberAccess",
                            "src": "4953:40:0"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5340,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 435,
                                "name": "Identifier",
                                "src": "4994:10:0"
                              }
                            ],
                            "id": 436,
                            "name": "FunctionCall",
                            "src": "4994:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 328,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 437,
                            "name": "Identifier",
                            "src": "5008:7:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 438,
                            "name": "Literal",
                            "src": "5017:1:0"
                          }
                        ],
                        "id": 439,
                        "name": "FunctionCall",
                        "src": "4953:66:0"
                      }
                    ],
                    "id": 440,
                    "name": "ExpressionStatement",
                    "src": "4953:66:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "remove",
                              "referencedDeclaration": 8163,
                              "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 441,
                                    "name": "Identifier",
                                    "src": "5038:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 5340,
                                          "type": "function () view returns (address payable)",
                                          "value": "_msgSender"
                                        },
                                        "id": 442,
                                        "name": "Identifier",
                                        "src": "5052:10:0"
                                      }
                                    ],
                                    "id": 443,
                                    "name": "FunctionCall",
                                    "src": "5052:12:0"
                                  }
                                ],
                                "id": 444,
                                "name": "IndexAccess",
                                "src": "5038:27:0"
                              }
                            ],
                            "id": 445,
                            "name": "MemberAccess",
                            "src": "5038:34:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 328,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 446,
                            "name": "Identifier",
                            "src": "5073:7:0"
                          }
                        ],
                        "id": 447,
                        "name": "FunctionCall",
                        "src": "5038:43:0"
                      }
                    ],
                    "id": 448,
                    "name": "ExpressionStatement",
                    "src": "5038:43:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 58,
                              "type": "function (uint256,address)",
                              "value": "StakingNFTBurned"
                            },
                            "id": 449,
                            "name": "Identifier",
                            "src": "5097:16:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 328,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 450,
                            "name": "Identifier",
                            "src": "5114:7:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$2176",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 451,
                                    "name": "ElementaryTypeName",
                                    "src": "5123:7:0"
                                  }
                                ],
                                "id": 452,
                                "name": "ElementaryTypeNameExpression",
                                "src": "5123:7:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBook",
                                  "referencedDeclaration": 15,
                                  "type": "contract PolicyBook"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct BMIDAIStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 40,
                                          "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 453,
                                        "name": "Identifier",
                                        "src": "5131:12:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 328,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 454,
                                        "name": "Identifier",
                                        "src": "5144:7:0"
                                      }
                                    ],
                                    "id": 455,
                                    "name": "IndexAccess",
                                    "src": "5131:21:0"
                                  }
                                ],
                                "id": 456,
                                "name": "MemberAccess",
                                "src": "5131:32:0"
                              }
                            ],
                            "id": 457,
                            "name": "FunctionCall",
                            "src": "5123:41:0"
                          }
                        ],
                        "id": 458,
                        "name": "FunctionCall",
                        "src": "5097:68:0"
                      }
                    ],
                    "id": 459,
                    "name": "EmitStatement",
                    "src": "5092:73:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BMIDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 40,
                                  "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 460,
                                "name": "Identifier",
                                "src": "5183:12:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 328,
                                  "type": "uint256",
                                  "value": "tokenID"
                                },
                                "id": 461,
                                "name": "Identifier",
                                "src": "5196:7:0"
                              }
                            ],
                            "id": 462,
                            "name": "IndexAccess",
                            "src": "5183:21:0"
                          }
                        ],
                        "id": 463,
                        "name": "UnaryOperation",
                        "src": "5176:28:0"
                      }
                    ],
                    "id": 464,
                    "name": "ExpressionStatement",
                    "src": "5176:28:0"
                  }
                ],
                "id": 465,
                "name": "Block",
                "src": "3853:1366:0"
              }
            ],
            "id": 466,
            "name": "FunctionDefinition",
            "src": "3794:1425:0"
          },
          {
            "attributes": {
              "functionSelector": "96344eaf",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakingInfoByToken",
              "scope": 554,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 478,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 467,
                        "name": "ElementaryTypeName",
                        "src": "5260:7:0"
                      }
                    ],
                    "id": 468,
                    "name": "VariableDeclaration",
                    "src": "5260:15:0"
                  }
                ],
                "id": 469,
                "name": "ParameterList",
                "src": "5259:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 478,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct BMIDAIStaking.StakingInfo",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "StakingInfo",
                          "referencedDeclaration": 16,
                          "type": "struct BMIDAIStaking.StakingInfo"
                        },
                        "id": 470,
                        "name": "UserDefinedTypeName",
                        "src": "5298:11:0"
                      }
                    ],
                    "id": 471,
                    "name": "VariableDeclaration",
                    "src": "5298:18:0"
                  }
                ],
                "id": 472,
                "name": "ParameterList",
                "src": "5297:20:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 472
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct BMIDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "mapping(uint256 => struct BMIDAIStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 473,
                            "name": "Identifier",
                            "src": "5335:12:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 468,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 474,
                            "name": "Identifier",
                            "src": "5348:7:0"
                          }
                        ],
                        "id": 475,
                        "name": "IndexAccess",
                        "src": "5335:21:0"
                      }
                    ],
                    "id": 476,
                    "name": "Return",
                    "src": "5328:28:0"
                  }
                ],
                "id": 477,
                "name": "Block",
                "src": "5318:45:0"
              }
            ],
            "id": 478,
            "name": "FunctionDefinition",
            "src": "5232:131:0"
          },
          {
            "attributes": {
              "functionSelector": "12ed9d29",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "howManyStakings",
              "scope": 554,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 502,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 479,
                        "name": "ElementaryTypeName",
                        "src": "5394:7:0"
                      }
                    ],
                    "id": 480,
                    "name": "VariableDeclaration",
                    "src": "5394:13:0"
                  }
                ],
                "id": 481,
                "name": "ParameterList",
                "src": "5393:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 502,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 482,
                        "name": "ElementaryTypeName",
                        "src": "5430:7:0"
                      }
                    ],
                    "id": 483,
                    "name": "VariableDeclaration",
                    "src": "5430:7:0"
                  }
                ],
                "id": 484,
                "name": "ParameterList",
                "src": "5429:9:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                                  "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 485,
                            "name": "Identifier",
                            "src": "5449:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 480,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 486,
                                "name": "Identifier",
                                "src": "5457:5:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 487,
                                        "name": "ElementaryTypeName",
                                        "src": "5466:7:0"
                                      }
                                    ],
                                    "id": 488,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5466:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 489,
                                    "name": "Literal",
                                    "src": "5474:1:0"
                                  }
                                ],
                                "id": 490,
                                "name": "FunctionCall",
                                "src": "5466:10:0"
                              }
                            ],
                            "id": 491,
                            "name": "BinaryOperation",
                            "src": "5457:19:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC1155: balance query for the zero address\"",
                              "value": "ERC1155: balance query for the zero address"
                            },
                            "id": 492,
                            "name": "Literal",
                            "src": "5478:45:0"
                          }
                        ],
                        "id": 493,
                        "name": "FunctionCall",
                        "src": "5449:75:0"
                      }
                    ],
                    "id": 494,
                    "name": "ExpressionStatement",
                    "src": "5449:75:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 484
                    },
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": 8197,
                              "type": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct EnumerableSet.UintSet storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 36,
                                      "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                      "value": "_holderTokens"
                                    },
                                    "id": 495,
                                    "name": "Identifier",
                                    "src": "5542:13:0"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 480,
                                      "type": "address",
                                      "value": "owner"
                                    },
                                    "id": 496,
                                    "name": "Identifier",
                                    "src": "5556:5:0"
                                  }
                                ],
                                "id": 497,
                                "name": "IndexAccess",
                                "src": "5542:20:0"
                              }
                            ],
                            "id": 498,
                            "name": "MemberAccess",
                            "src": "5542:27:0"
                          }
                        ],
                        "id": 499,
                        "name": "FunctionCall",
                        "src": "5542:29:0"
                      }
                    ],
                    "id": 500,
                    "name": "Return",
                    "src": "5535:36:0"
                  }
                ],
                "id": 501,
                "name": "Block",
                "src": "5439:139:0"
              }
            ],
            "id": 502,
            "name": "FunctionDefinition",
            "src": "5369:209:0"
          },
          {
            "attributes": {
              "functionSelector": "69c54086",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getStakingTokensByOwner",
              "scope": 554,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "scope": 553,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 503,
                        "name": "ElementaryTypeName",
                        "src": "5617:7:0"
                      }
                    ],
                    "id": 504,
                    "name": "VariableDeclaration",
                    "src": "5617:13:0"
                  }
                ],
                "id": 505,
                "name": "ParameterList",
                "src": "5616:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 553,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 506,
                            "name": "ElementaryTypeName",
                            "src": "5653:7:0"
                          }
                        ],
                        "id": 507,
                        "name": "ArrayTypeName",
                        "src": "5653:9:0"
                      }
                    ],
                    "id": 508,
                    "name": "VariableDeclaration",
                    "src": "5653:16:0"
                  }
                ],
                "id": 509,
                "name": "ParameterList",
                "src": "5652:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        511
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "size",
                          "scope": 552,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 510,
                            "name": "ElementaryTypeName",
                            "src": "5681:7:0"
                          }
                        ],
                        "id": 511,
                        "name": "VariableDeclaration",
                        "src": "5681:12:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 502,
                              "type": "function (address) view returns (uint256)",
                              "value": "howManyStakings"
                            },
                            "id": 512,
                            "name": "Identifier",
                            "src": "5696:15:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 504,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 513,
                            "name": "Identifier",
                            "src": "5712:5:0"
                          }
                        ],
                        "id": 514,
                        "name": "FunctionCall",
                        "src": "5696:22:0"
                      }
                    ],
                    "id": 515,
                    "name": "VariableDeclarationStatement",
                    "src": "5681:37:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        520
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "tokens",
                          "scope": 552,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 518,
                                "name": "ElementaryTypeName",
                                "src": "5737:7:0"
                              }
                            ],
                            "id": 519,
                            "name": "ArrayTypeName",
                            "src": "5737:9:0"
                          }
                        ],
                        "id": 520,
                        "name": "VariableDeclaration",
                        "src": "5737:23:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 521,
                                    "name": "ElementaryTypeName",
                                    "src": "5767:7:0"
                                  }
                                ],
                                "id": 522,
                                "name": "ArrayTypeName",
                                "src": "5767:9:0"
                              }
                            ],
                            "id": 523,
                            "name": "NewExpression",
                            "src": "5763:13:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 511,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 524,
                            "name": "Identifier",
                            "src": "5777:4:0"
                          }
                        ],
                        "id": 525,
                        "name": "FunctionCall",
                        "src": "5763:19:0"
                      }
                    ],
                    "id": 526,
                    "name": "VariableDeclarationStatement",
                    "src": "5737:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            528
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 549,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 527,
                                "name": "ElementaryTypeName",
                                "src": "5798:7:0"
                              }
                            ],
                            "id": 528,
                            "name": "VariableDeclaration",
                            "src": "5798:9:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 529,
                            "name": "Literal",
                            "src": "5810:1:0"
                          }
                        ],
                        "id": 530,
                        "name": "VariableDeclarationStatement",
                        "src": "5798:13:0"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 528,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 531,
                            "name": "Identifier",
                            "src": "5813:1:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 511,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 532,
                            "name": "Identifier",
                            "src": "5817:4:0"
                          }
                        ],
                        "id": 533,
                        "name": "BinaryOperation",
                        "src": "5813:8:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 528,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 534,
                                "name": "Identifier",
                                "src": "5823:1:0"
                              }
                            ],
                            "id": 535,
                            "name": "UnaryOperation",
                            "src": "5823:3:0"
                          }
                        ],
                        "id": 536,
                        "name": "ExpressionStatement",
                        "src": "5823:3:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 520,
                                          "type": "uint256[] memory",
                                          "value": "tokens"
                                        },
                                        "id": 537,
                                        "name": "Identifier",
                                        "src": "5850:6:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 528,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 538,
                                        "name": "Identifier",
                                        "src": "5857:1:0"
                                      }
                                    ],
                                    "id": 539,
                                    "name": "IndexAccess",
                                    "src": "5850:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "at",
                                          "referencedDeclaration": 8217,
                                          "type": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct EnumerableSet.UintSet storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 36,
                                                  "type": "mapping(address => struct EnumerableSet.UintSet storage ref)",
                                                  "value": "_holderTokens"
                                                },
                                                "id": 540,
                                                "name": "Identifier",
                                                "src": "5862:13:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 504,
                                                  "type": "address",
                                                  "value": "owner"
                                                },
                                                "id": 541,
                                                "name": "Identifier",
                                                "src": "5876:5:0"
                                              }
                                            ],
                                            "id": 542,
                                            "name": "IndexAccess",
                                            "src": "5862:20:0"
                                          }
                                        ],
                                        "id": 543,
                                        "name": "MemberAccess",
                                        "src": "5862:23:0"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 528,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 544,
                                        "name": "Identifier",
                                        "src": "5886:1:0"
                                      }
                                    ],
                                    "id": 545,
                                    "name": "FunctionCall",
                                    "src": "5862:26:0"
                                  }
                                ],
                                "id": 546,
                                "name": "Assignment",
                                "src": "5850:38:0"
                              }
                            ],
                            "id": 547,
                            "name": "ExpressionStatement",
                            "src": "5850:38:0"
                          }
                        ],
                        "id": 548,
                        "name": "Block",
                        "src": "5836:63:0"
                      }
                    ],
                    "id": 549,
                    "name": "ForStatement",
                    "src": "5793:106:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 509
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 520,
                          "type": "uint256[] memory",
                          "value": "tokens"
                        },
                        "id": 550,
                        "name": "Identifier",
                        "src": "5916:6:0"
                      }
                    ],
                    "id": 551,
                    "name": "Return",
                    "src": "5909:13:0"
                  }
                ],
                "id": 552,
                "name": "Block",
                "src": "5671:268:0"
              }
            ],
            "id": 553,
            "name": "FunctionDefinition",
            "src": "5584:355:0"
          }
        ],
        "id": 554,
        "name": "ContractDefinition",
        "src": "300:5641:0"
      }
    ],
    "id": 555,
    "name": "SourceUnit",
    "src": "32:5910:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-26T15:28:29.537Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "_currentNFTMintID": {
        "details": "crutial to start from 2"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}