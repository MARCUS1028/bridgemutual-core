{
  "contractName": "DefiYieldGenerator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bmiDaiStakingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveAllDaiTokensForStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveAllBMITokensForStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakingStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedDAIAmount",
          "type": "uint256"
        }
      ],
      "name": "getProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveAllBMITokensForStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveAllDaiTokensForStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiDaiStakingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedDAIAmount\",\"type\":\"uint256\"}],\"name\":\"getProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":\"DefiYieldGenerator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0xf099b29ee740de399ef095c4c85d7ac1caa5723dbf47805fa3ee46401fc2ae99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f7fe997f7ce94e17934a67f1fdba12310ffb06e0d9ed84f427d82bb4e173132\",\"dweb:/ipfs/QmVuqRJJHA8x3zFzE7682aNj6v4meLEo8ejioZ99CQBUEX\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0xa4d48a8b7f3c70c70c3643a7c94ac0d73a1ca399d8d0e08e181bb2730cd429ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0218f4cfcfa57d8499531504346c7c5f831a1419e80b2a77442083dc843366e0\",\"dweb:/ipfs/Qma3NDpEmSDLsihYnVLQuHj4dePNGxyKG58EMV5hY5EQYC\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b61107b8061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063be22f54611610081578063d98d0c7e1161005b578063d98d0c7e14610131578063f2fde38b14610139578063f6b15fe61461014c576100c9565b8063be22f5461461010e578063d0a43afd14610116578063d77379f114610129576100c9565b80638da5cb5b116100b25780638da5cb5b146100e05780639effd687146100fe578063a2ac7ac614610106576100c9565b8063333399bc146100ce578063715018a6146100d8575b600080fd5b6100d661016c565b005b6100d6610312565b6100e8610412565b6040516100f59190610e61565b60405180910390f35b6100e861042e565b6100d661044a565b6100e86105e4565b6100d6610124366004610d2c565b610600565b6100e8610b09565b6100e8610b25565b6100d6610147366004610d2c565b610b41565b61015f61015a366004610e40565b610ccb565b6040516100f59190610fc4565b610174610d28565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146101fd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600254600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b39361027b939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610e82565b602060405180830381600087803b15801561029557600080fd5b505af11580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610d6b565b90508061030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610f56565b60405180910390fd5b50565b61031a610d28565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146103a357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b610452610d28565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146104db57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600354600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b393610559939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610e82565b602060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610d6b565b90508061030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610f8d565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b610608610d28565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461069157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107859190810190610d8b565b6040518263ffffffff1660e01b81526004016107a19190610ea8565b60206040518083038186803b1580156107b957600080fd5b505afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190610d4f565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108ed9190810190610d8b565b6040518263ffffffff1660e01b81526004016109099190610ea8565b60206040518083038186803b15801561092157600080fd5b505afa158015610935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109599190610d4f565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff16633d2886a06040518163ffffffff1660e01b815260040160006040518083038186803b1580156109fb57600080fd5b505afa158015610a0f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a559190810190610d8b565b6040518263ffffffff1660e01b8152600401610a719190610ea8565b60206040518083038186803b158015610a8957600080fd5b505afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190610d4f565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b610b49610d28565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610bd257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610c3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110206026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60045460009073ffffffffffffffffffffffffffffffffffffffff163314610d1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610ef9565b50600092915050565b3390565b600060208284031215610d3d578081fd5b8135610d4881610ffd565b9392505050565b600060208284031215610d60578081fd5b8151610d4881610ffd565b600060208284031215610d7c578081fd5b81518015158114610d48578182fd5b600060208284031215610d9c578081fd5b815167ffffffffffffffff80821115610db3578283fd5b818401915084601f830112610dc6578283fd5b815181811115610dd257fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610e0e57fe5b604052818152838201602001871015610e25578485fd5b610e36826020830160208701610fcd565b9695505050505050565b60008060408385031215610e52578081fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6000602082528251806020840152610ec7816040850160208701610fcd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602b908201527f446566695969656c6447656e657261746f723a2063616c6c6572206973206e6f60408201527f742061207374616b696e67000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f4661696c656420746f20617070726f76652044414920746f6b656e7300000000604082015260600190565b6020808252601c908201527f4661696c656420746f20617070726f766520424d4920746f6b656e7300000000604082015260600190565b90815260200190565b60005b83811015610fe8578181015183820152602001610fd0565b83811115610ff7576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461030f57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122050660c89abe3fd1726998a72205a95d0f8797dccb072bb4be3f1ea8746d06adc64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c8063be22f54611610081578063d98d0c7e1161005b578063d98d0c7e14610131578063f2fde38b14610139578063f6b15fe61461014c576100c9565b8063be22f5461461010e578063d0a43afd14610116578063d77379f114610129576100c9565b80638da5cb5b116100b25780638da5cb5b146100e05780639effd687146100fe578063a2ac7ac614610106576100c9565b8063333399bc146100ce578063715018a6146100d8575b600080fd5b6100d661016c565b005b6100d6610312565b6100e8610412565b6040516100f59190610e61565b60405180910390f35b6100e861042e565b6100d661044a565b6100e86105e4565b6100d6610124366004610d2c565b610600565b6100e8610b09565b6100e8610b25565b6100d6610147366004610d2c565b610b41565b61015f61015a366004610e40565b610ccb565b6040516100f59190610fc4565b610174610d28565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146101fd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600254600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b39361027b939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610e82565b602060405180830381600087803b15801561029557600080fd5b505af11580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610d6b565b90508061030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610f56565b60405180910390fd5b50565b61031a610d28565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146103a357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b610452610d28565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146104db57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600354600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b393610559939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610e82565b602060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610d6b565b90508061030f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610f8d565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b610608610d28565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461069157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561072b57600080fd5b505afa15801561073f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107859190810190610d8b565b6040518263ffffffff1660e01b81526004016107a19190610ea8565b60206040518083038186803b1580156107b957600080fd5b505afa1580156107cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f19190610d4f565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561089357600080fd5b505afa1580156108a7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108ed9190810190610d8b565b6040518263ffffffff1660e01b81526004016109099190610ea8565b60206040518083038186803b15801561092157600080fd5b505afa158015610935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109599190610d4f565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff16633d2886a06040518163ffffffff1660e01b815260040160006040518083038186803b1580156109fb57600080fd5b505afa158015610a0f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a559190810190610d8b565b6040518263ffffffff1660e01b8152600401610a719190610ea8565b60206040518083038186803b158015610a8957600080fd5b505afa158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190610d4f565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b610b49610d28565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610bd257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610c3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806110206026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60045460009073ffffffffffffffffffffffffffffffffffffffff163314610d1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030690610ef9565b50600092915050565b3390565b600060208284031215610d3d578081fd5b8135610d4881610ffd565b9392505050565b600060208284031215610d60578081fd5b8151610d4881610ffd565b600060208284031215610d7c578081fd5b81518015158114610d48578182fd5b600060208284031215610d9c578081fd5b815167ffffffffffffffff80821115610db3578283fd5b818401915084601f830112610dc6578283fd5b815181811115610dd257fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610e0e57fe5b604052818152838201602001871015610e25578485fd5b610e36826020830160208701610fcd565b9695505050505050565b60008060408385031215610e52578081fd5b50508035926020909101359150565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6000602082528251806020840152610ec7816040850160208701610fcd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252602b908201527f446566695969656c6447656e657261746f723a2063616c6c6572206973206e6f60408201527f742061207374616b696e67000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f4661696c656420746f20617070726f76652044414920746f6b656e7300000000604082015260600190565b6020808252601c908201527f4661696c656420746f20617070726f766520424d4920746f6b656e7300000000604082015260600190565b90815260200190565b60005b83811015610fe8578181015183820152602001610fd0565b83811115610ff7576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461030f57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122050660c89abe3fd1726998a72205a95d0f8797dccb072bb4be3f1ea8746d06adc64736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5577:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:37",
                "type": ""
              }
            ],
            "src": "14:259:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:37",
                "type": ""
              }
            ],
            "src": "278:263:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:37"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:37",
                "type": ""
              }
            ],
            "src": "546:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "954:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1025:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1038:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1029:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1097:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1070:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1070:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1122:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1243",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:37",
                "type": ""
              }
            ],
            "src": "848:285:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:868:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1275:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1284:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1292:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1277:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1277:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1250:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1259:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1271:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:30:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1324:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:16:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1314:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1349:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1359:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1353:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1389:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1386:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1464:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1449:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:22:37"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1443:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1528:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1498:2:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1502:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:13:37"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1509:7:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1480:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1554:23:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1574:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1568:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:9:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1558:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1604:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1606:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1606:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1592:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1600:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1626:23:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1640:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:9:37"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1630:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1658:130:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1684:6:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1708:4:37",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:17:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1715:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1692:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1692:90:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:103:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:112:37"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1662:10:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1849:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1806:10:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1818:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1803:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1826:10:37"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1823:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1800:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:46:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1797:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1880:10:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1869:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1869:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1907:6:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:22:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1972:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1981:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1989:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1974:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1974:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1974:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1945:2:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1949:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1941:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1941:15:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1958:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1937:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1963:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1934:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:37:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1931:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2033:2:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2037:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:11:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2046:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2054:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:15:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2059:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2007:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2075:16:37",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2085:6:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1195:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1206:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1218:6:37",
                "type": ""
              }
            ],
            "src": "1138:959:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:171:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2235:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2244:6:37"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2252:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2237:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2237:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2237:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2210:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2206:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2231:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2202:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2199:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2270:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2293:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2280:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2270:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2312:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2339:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2350:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2322:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2312:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2147:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2158:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2170:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2178:6:37",
                "type": ""
              }
            ],
            "src": "2102:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2466:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2476:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2488:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2476:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2518:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2533:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2541:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2529:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2529:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2435:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2457:4:37",
                "type": ""
              }
            ],
            "src": "2365:226:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2725:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2735:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2747:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2758:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2743:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2735:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2777:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2792:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2800:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2788:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2788:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2770:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2770:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2770:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2864:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2875:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2880:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2853:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2853:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2853:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2686:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2697:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2705:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2716:4:37",
                "type": ""
              }
            ],
            "src": "2596:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3025:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3035:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3047:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3058:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3043:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3043:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3035:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3077:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3092:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3100:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3088:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3088:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3070:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3070:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3070:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1243__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2994:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3005:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3016:4:37",
                "type": ""
              }
            ],
            "src": "2898:252:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3271:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3281:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3293:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3304:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3289:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3289:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3281:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3323:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3338:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3346:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3334:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3334:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3316:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3316:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3316:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$6914__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3240:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3251:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3262:4:37",
                "type": ""
              }
            ],
            "src": "3155:241:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3522:321:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3539:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3550:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3532:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3532:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3562:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3582:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3576:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3576:13:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3566:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3609:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3620:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3605:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3605:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3625:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3598:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3598:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3667:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3675:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3663:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3663:15:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3684:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3695:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3680:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3680:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3700:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3641:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:66:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3641:66:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3716:121:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3732:9:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3751:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3759:2:37",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3747:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3747:15:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3764:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3743:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3743:88:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3728:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3728:104:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3834:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3724:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3724:113:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3716:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3491:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3502:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3513:4:37",
                "type": ""
              }
            ],
            "src": "3401:442:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4022:233:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4039:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4050:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4032:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4032:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4032:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4073:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4084:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4069:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4069:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4089:2:37",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4062:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4062:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4062:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4112:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4123:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4108:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4108:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4128:34:37",
                        "type": "",
                        "value": "DefiYieldGenerator: caller is no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4101:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4101:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4101:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4183:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4194:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4179:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4179:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4199:13:37",
                        "type": "",
                        "value": "t a staking"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4172:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4172:41:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4172:41:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4222:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4234:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4230:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4222:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_32c7a10378fd7e109e052ffbce3d0564219705e67bd7ca2015fabd91541d13cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3999:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4013:4:37",
                "type": ""
              }
            ],
            "src": "3848:407:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4434:178:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4451:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4462:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4444:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4444:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4444:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4485:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4496:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4481:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4481:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4501:2:37",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4474:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4474:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4474:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4524:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4535:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4520:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4520:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4540:30:37",
                        "type": "",
                        "value": "Failed to approve DAI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4513:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4513:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4513:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4580:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4592:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4603:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4588:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4588:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4580:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4411:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4425:4:37",
                "type": ""
              }
            ],
            "src": "4260:352:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4791:178:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4808:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4819:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4801:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4801:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4801:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4842:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4853:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4838:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4838:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4858:2:37",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4831:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4831:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4831:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4881:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4892:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4877:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4877:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4897:30:37",
                        "type": "",
                        "value": "Failed to approve BMI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4870:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4870:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4870:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4937:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4949:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4960:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4945:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4945:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4937:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4768:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4782:4:37",
                "type": ""
              }
            ],
            "src": "4617:352:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5075:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5085:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5097:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5108:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5093:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5093:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5085:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5127:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5138:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5120:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5120:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5120:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5044:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5055:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5066:4:37",
                "type": ""
              }
            ],
            "src": "4974:177:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5209:205:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5219:10:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5228:1:37",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5223:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5288:63:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5313:3:37"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5318:1:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5309:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5309:11:37"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5332:3:37"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5337:1:37"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5328:3:37"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5328:11:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5322:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5322:18:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5302:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5302:39:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5302:39:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5249:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5252:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5246:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5246:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5260:19:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5262:15:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5271:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5274:2:37",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5267:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5267:10:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5262:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5242:3:37",
                    "statements": []
                  },
                  "src": "5238:113:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5377:31:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5390:3:37"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5395:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5386:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5386:16:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5404:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5379:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5379:27:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5379:27:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5366:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5369:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5363:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5363:13:37"
                  },
                  "nodeType": "YulIf",
                  "src": "5360:2:37"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5187:3:37",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5192:3:37",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5197:6:37",
                "type": ""
              }
            ],
            "src": "5156:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5466:109:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5553:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5562:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5565:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5555:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5555:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5555:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5489:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5500:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5507:42:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5496:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5496:54:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5486:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5486:65:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5479:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5479:73:37"
                  },
                  "nodeType": "YulIf",
                  "src": "5476:2:37"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5455:5:37",
                "type": ""
              }
            ],
            "src": "5419:156:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1243(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_2)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1243__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$6914__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_32c7a10378fd7e109e052ffbce3d0564219705e67bd7ca2015fabd91541d13cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"DefiYieldGenerator: caller is no\")\n        mstore(add(headStart, 96), \"t a staking\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to approve DAI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to approve BMI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "237:1415:4:-:0;;;;;;;;;;;;-1:-1:-1;882:17:24;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:24;-1:-1:-1;;;;;924:18:24;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:24;957:43;;924:6;;957:43;848:159;237:1415:4;;598:104:22;685:10;598:104;:::o;237:1415:4:-;;;;;;;",
  "deployedSourceMap": "237:1415:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:208;;;:::i;:::-;;1706:145:24;;;:::i;1083:77::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:35:4;;;:::i;1282:208::-;;;:::i;383:22::-;;;:::i;629:433::-;;;;;;:::i;:::-;;:::i;411:22::-;;;:::i;334:42::-;;;:::i;2000:240:24:-;;;;;;:::i;:::-;;:::i;1508:142:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1068:208::-;1297:12:24;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:8:4::1;::::0;1180:20:::1;::::0;;1163:47:::1;::::0;;;;1148:12:::1;::::0;1163:8:::1;::::0;;::::1;::::0;:16:::1;::::0;:47:::1;::::0;1180:20;::::1;::::0;317:10:::1;::::0;1163:47:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1148:62;;1229:7;1221:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1356:1:24;1068:208:4:o:0;1706:145:24:-;1297:12;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;::::1;1796:6:::0;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;;::::1;::::0;;1706:145::o;1083:77::-;1121:7;1147:6;;;1083:77;:::o;439:35:4:-;;;;;;:::o;1282:208::-;1297:12:24;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:8:4::1;::::0;1394:20:::1;::::0;;1377:47:::1;::::0;;;;1362:12:::1;::::0;1377:8:::1;::::0;;::::1;::::0;:16:::1;::::0;:47:::1;::::0;1394:20;::::1;::::0;317:10:::1;::::0;1377:47:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:62;;1443:7;1435:48;;;;;;;;;;;;:::i;383:22::-:0;;;;;;:::o;629:433::-;1297:12:24;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:17:4::1;:38:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;824:31:::1;::::0;;;;;;;793:30:::1;::::0;718:38;;824:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;824:31:4;;;;;;;;718:38;824:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;793:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;775:8;;:82;;;;;;;;;;;;;;;;;;885:18;:30;;;916:18;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;885:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:8;;:82;;;;;;;;;;;;;;;;;;982:18;:30;;;1013:18;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;982:73;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;959:20;:96:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;629:433:4:o;411:22::-;;;;;;:::o;334:42::-;;;;;;:::o;2000:240:24:-;1297:12;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:22:::1;::::0;::::1;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;::::1;::::0;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2000:240::o;1508:142:4:-;537:20;;1608:7;;537:20;;523:10;:34;514:91;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1642:1:4::1;1508:142:::0;;;;:::o;598:104:22:-;685:10;598:104;:::o;14:259:37:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:37:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;1138:959;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1330:9;1324:16;1359:18;1400:2;1392:6;1389:14;1386:2;;;1421:6;1413;1406:22;1386:2;1464:6;1453:9;1449:22;1439:32;;1509:7;1502:4;1498:2;1494:13;1490:27;1480:2;;1536:6;1528;1521:22;1480:2;1574;1568:9;1600:2;1592:6;1589:14;1586:2;;;1606:9;1586:2;1646;1640:9;1785:2;1715:66;1708:4;1700:6;1696:17;1692:90;1684:6;1680:103;1676:112;1838:6;1826:10;1823:22;1818:2;1806:10;1803:18;1800:46;1797:2;;;1849:9;1797:2;1876;1869:22;1900;;;1941:15;;;1958:2;1937:24;1934:37;-1:-1:-1;1931:2:37;;;1989:6;1981;1974:22;1931:2;2007:59;2059:6;2054:2;2046:6;2042:15;2037:2;2033;2029:11;2007:59;:::i;:::-;2085:6;1229:868;-1:-1:-1;;;;;;1229:868:37:o;2102:258::-;;;2231:2;2219:9;2210:7;2206:23;2202:32;2199:2;;;2252:6;2244;2237:22;2199:2;-1:-1:-1;;2280:23:37;;;2350:2;2335:18;;;2322:32;;-1:-1:-1;2189:171:37:o;2365:226::-;2541:42;2529:55;;;;2511:74;;2499:2;2484:18;;2466:125::o;2596:297::-;2800:42;2788:55;;;;2770:74;;2875:2;2860:18;;2853:34;2758:2;2743:18;;2725:168::o;3401:442::-;;3550:2;3539:9;3532:21;3582:6;3576:13;3625:6;3620:2;3609:9;3605:18;3598:34;3641:66;3700:6;3695:2;3684:9;3680:18;3675:2;3667:6;3663:15;3641:66;:::i;:::-;3759:2;3747:15;3764:66;3743:88;3728:104;;;;3834:2;3724:113;;3522:321;-1:-1:-1;;3522:321:37:o;3848:407::-;4050:2;4032:21;;;4089:2;4069:18;;;4062:30;4128:34;4123:2;4108:18;;4101:62;4199:13;4194:2;4179:18;;4172:41;4245:3;4230:19;;4022:233::o;4260:352::-;4462:2;4444:21;;;4501:2;4481:18;;;4474:30;4540;4535:2;4520:18;;4513:58;4603:2;4588:18;;4434:178::o;4617:352::-;4819:2;4801:21;;;4858:2;4838:18;;;4831:30;4897;4892:2;4877:18;;4870:58;4960:2;4945:18;;4791:178::o;4974:177::-;5120:25;;;5108:2;5093:18;;5075:76::o;5156:258::-;5228:1;5238:113;5252:6;5249:1;5246:13;5238:113;;;5328:11;;;5322:18;5309:11;;;5302:39;5274:2;5267:10;5238:113;;;5369:6;5366:1;5363:13;5360:2;;;5404:1;5395:6;5390:3;5386:16;5379:27;5360:2;;5209:205;;;:::o;5419:156::-;5507:42;5500:5;5496:54;5489:5;5486:65;5476:2;;5565:1;5562;5555:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./ContractsRegistry.sol\";\n\ncontract DefiYieldGenerator is Ownable {\n    uint256 constant private MAX_INT = 2**256 - 1;\n\n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    address public bmiDaiStakingAddress;\n\n    modifier onlyStaking() {\n        require (msg.sender == bmiDaiStakingAddress, \"DefiYieldGenerator: caller is not a staking\");\n        _;\n    }\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n        \n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        bmiDaiStakingAddress = _contractsRegistry.getContract(_contractsRegistry.getBmiDAIStakingName());\n    }\n\n    function approveAllDaiTokensForStakingWithdrowal() external onlyOwner {\n        bool success = daiToken.approve(bmiDaiStakingAddress, MAX_INT);\n\n        require(success, \"Failed to approve DAI tokens\");\n    }\n\n    function approveAllBMITokensForStakingWithdrowal() external onlyOwner {\n        bool success = bmiToken.approve(bmiDaiStakingAddress, MAX_INT);\n\n        require(success, \"Failed to approve BMI tokens\");\n    }\n    \n// TODO\n    function getProfit(uint256 stakingStartTime, uint256 stakedDAIAmount) external onlyStaking returns (uint256) {        \n        return 0;\n    }\n}",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
    "exportedSymbols": {
      "AccessControl": [
        5723
      ],
      "Address": [
        7371
      ],
      "Context": [
        5440
      ],
      "ContractsRegistry": [
        1243
      ],
      "DefiYieldGenerator": [
        1374
      ],
      "EnumerableSet": [
        8306
      ],
      "IERC20": [
        6914
      ],
      "Ownable": [
        5832
      ]
    },
    "id": 1375,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1245,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "id": 1246,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1247,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 5833,
        "src": "91:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1248,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 6915,
        "src": "144:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 1249,
        "nodeType": "ImportDirective",
        "scope": 1375,
        "sourceUnit": 1244,
        "src": "202:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1250,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5832,
              "src": "268:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5832",
                "typeString": "contract Ownable"
              }
            },
            "id": 1251,
            "nodeType": "InheritanceSpecifier",
            "src": "268:7:4"
          }
        ],
        "contractDependencies": [
          5440,
          5832
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1374,
        "linearizedBaseContracts": [
          1374,
          5832,
          5440
        ],
        "name": "DefiYieldGenerator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1258,
            "mutability": "constant",
            "name": "MAX_INT",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "282:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1252,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 1257,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 1255,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 1253,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "317:1:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 1254,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "320:3:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "317:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 1256,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "326:1:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "317:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 1260,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "334:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 1259,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1243,
              "src": "334:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 1262,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "383:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6914",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1261,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6914,
              "src": "383:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6914",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 1264,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "411:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6914",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1263,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6914,
              "src": "411:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6914",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9effd687",
            "id": 1266,
            "mutability": "mutable",
            "name": "bmiDaiStakingAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1374,
            "src": "439:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "439:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "504:119:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1269,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "523:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "523:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1271,
                          "name": "bmiDaiStakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1266,
                          "src": "537:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "523:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446566695969656c6447656e657261746f723a2063616c6c6572206973206e6f742061207374616b696e67",
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "559:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32c7a10378fd7e109e052ffbce3d0564219705e67bd7ca2015fabd91541d13cc",
                          "typeString": "literal_string \"DefiYieldGenerator: caller is not a staking\""
                        },
                        "value": "DefiYieldGenerator: caller is not a staking"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32c7a10378fd7e109e052ffbce3d0564219705e67bd7ca2015fabd91541d13cc",
                          "typeString": "literal_string \"DefiYieldGenerator: caller is not a staking\""
                        }
                      ],
                      "id": 1268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "514:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "514:91:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1275,
                  "nodeType": "ExpressionStatement",
                  "src": "514:91:4"
                },
                {
                  "id": 1276,
                  "nodeType": "PlaceholderStatement",
                  "src": "615:1:4"
                }
              ]
            },
            "id": 1278,
            "name": "onlyStaking",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:2:4"
            },
            "src": "481:142:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "708:354:4",
              "statements": [
                {
                  "expression": {
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1285,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1260,
                      "src": "718:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1286,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "738:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "718:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "718:38:4"
                },
                {
                  "expression": {
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1289,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "775:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6914",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1293,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "824:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1100,
                                "src": "824:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "824:31:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1291,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "793:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1173,
                            "src": "793:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "793:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1290,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6914,
                        "src": "786:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6914_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "786:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6914",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "775:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6914",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "775:82:4"
                },
                {
                  "expression": {
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1300,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "867:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6914",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1304,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1280,
                                  "src": "916:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1108,
                                "src": "916:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "916:31:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1302,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "885:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1173,
                            "src": "885:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1301,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6914,
                        "src": "878:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6914_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "878:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6914",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "867:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6914",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "867:82:4"
                },
                {
                  "expression": {
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1311,
                      "name": "bmiDaiStakingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "959:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1314,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "1013:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getBmiDAIStakingName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1132,
                            "src": "1013:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function () pure external returns (string memory)"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1013:41:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 1312,
                          "name": "_contractsRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1280,
                          "src": "982:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                            "typeString": "contract ContractsRegistry"
                          }
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1173,
                        "src": "982:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) view external returns (address)"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "982:73:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "959:96:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "959:96:4"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1283,
                "modifierName": {
                  "id": 1282,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5781,
                  "src": "698:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "698:9:4"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "651:36:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1243,
                    "src": "651:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1243",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "650:38:4"
            },
            "returnParameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "708:0:4"
            },
            "scope": 1374,
            "src": "629:433:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1339,
              "nodeType": "Block",
              "src": "1138:138:4",
              "statements": [
                {
                  "assignments": [
                    1327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1339,
                      "src": "1148:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1330,
                        "name": "bmiDaiStakingAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "1180:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1331,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "1202:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1328,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "1163:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6914",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6883,
                      "src": "1163:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1148:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1335,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1327,
                        "src": "1229:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20617070726f76652044414920746f6b656e73",
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1238:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                          "typeString": "literal_string \"Failed to approve DAI tokens\""
                        },
                        "value": "Failed to approve DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                          "typeString": "literal_string \"Failed to approve DAI tokens\""
                        }
                      ],
                      "id": 1334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1221:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:48:4"
                }
              ]
            },
            "functionSelector": "333399bc",
            "id": 1340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1324,
                "modifierName": {
                  "id": 1323,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5781,
                  "src": "1128:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1128:9:4"
              }
            ],
            "name": "approveAllDaiTokensForStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:2:4"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:0:4"
            },
            "scope": 1374,
            "src": "1068:208:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1358,
              "nodeType": "Block",
              "src": "1352:138:4",
              "statements": [
                {
                  "assignments": [
                    1346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1346,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1358,
                      "src": "1362:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1345,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1362:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1352,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1349,
                        "name": "bmiDaiStakingAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1266,
                        "src": "1394:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1350,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "1416:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1347,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "1377:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6914",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6883,
                      "src": "1377:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1362:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1354,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1346,
                        "src": "1443:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20617070726f766520424d4920746f6b656e73",
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1452:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                          "typeString": "literal_string \"Failed to approve BMI tokens\""
                        },
                        "value": "Failed to approve BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                          "typeString": "literal_string \"Failed to approve BMI tokens\""
                        }
                      ],
                      "id": 1353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1435:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1357,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:48:4"
                }
              ]
            },
            "functionSelector": "a2ac7ac6",
            "id": 1359,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1343,
                "modifierName": {
                  "id": 1342,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5781,
                  "src": "1342:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1342:9:4"
              }
            ],
            "name": "approveAllBMITokensForStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:4"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:0:4"
            },
            "scope": 1374,
            "src": "1282:208:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "1617:33:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1642:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1369,
                  "id": 1371,
                  "nodeType": "Return",
                  "src": "1635:8:4"
                }
              ]
            },
            "functionSelector": "f6b15fe6",
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1366,
                "modifierName": {
                  "id": 1365,
                  "name": "onlyStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1278,
                  "src": "1587:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1587:11:4"
              }
            ],
            "name": "getProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1361,
                  "mutability": "mutable",
                  "name": "stakingStartTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1527:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "stakedDAIAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1553:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1526:51:4"
            },
            "returnParameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "1608:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1607:9:4"
            },
            "scope": 1374,
            "src": "1508:142:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1375,
        "src": "237:1415:4"
      }
    ],
    "src": "32:1620:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
      "exportedSymbols": {
        "AccessControl": [
          5723
        ],
        "Address": [
          7371
        ],
        "Context": [
          5440
        ],
        "ContractsRegistry": [
          1243
        ],
        "DefiYieldGenerator": [
          1374
        ],
        "EnumerableSet": [
          8306
        ],
        "IERC20": [
          6914
        ],
        "Ownable": [
          5832
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1245,
        "name": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1246,
        "name": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 5833,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 1375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1247,
        "name": "ImportDirective",
        "src": "91:52:4"
      },
      {
        "attributes": {
          "SourceUnit": 6915,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 1375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1248,
        "name": "ImportDirective",
        "src": "144:56:4"
      },
      {
        "attributes": {
          "SourceUnit": 1244,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 1375,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1249,
        "name": "ImportDirective",
        "src": "202:33:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            5440,
            5832
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1374,
            5832,
            5440
          ],
          "name": "DefiYieldGenerator",
          "scope": 1375
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5832,
                  "type": "contract Ownable"
                },
                "id": 1250,
                "name": "UserDefinedTypeName",
                "src": "268:7:4"
              }
            ],
            "id": 1251,
            "name": "InheritanceSpecifier",
            "src": "268:7:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "MAX_INT",
              "scope": 1374,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1252,
                "name": "ElementaryTypeName",
                "src": "282:7:4"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "-",
                  "type": "int_const 1157...(70 digits omitted)...9935"
                },
                "children": [
                  {
                    "attributes": {
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "operator": "**",
                      "type": "int_const 1157...(70 digits omitted)...9936"
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "32",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 2",
                          "value": "2"
                        },
                        "id": 1253,
                        "name": "Literal",
                        "src": "317:1:4"
                      },
                      {
                        "attributes": {
                          "hexvalue": "323536",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 256",
                          "value": "256"
                        },
                        "id": 1254,
                        "name": "Literal",
                        "src": "320:3:4"
                      }
                    ],
                    "id": 1255,
                    "name": "BinaryOperation",
                    "src": "317:6:4"
                  },
                  {
                    "attributes": {
                      "hexvalue": "31",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 1",
                      "value": "1"
                    },
                    "id": 1256,
                    "name": "Literal",
                    "src": "326:1:4"
                  }
                ],
                "id": 1257,
                "name": "BinaryOperation",
                "src": "317:10:4"
              }
            ],
            "id": 1258,
            "name": "VariableDeclaration",
            "src": "282:45:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 1374,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1243,
                  "type": "contract ContractsRegistry"
                },
                "id": 1259,
                "name": "UserDefinedTypeName",
                "src": "334:17:4"
              }
            ],
            "id": 1260,
            "name": "VariableDeclaration",
            "src": "334:42:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 1374,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6914,
                  "type": "contract IERC20"
                },
                "id": 1261,
                "name": "UserDefinedTypeName",
                "src": "383:6:4"
              }
            ],
            "id": 1262,
            "name": "VariableDeclaration",
            "src": "383:22:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 1374,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6914,
                  "type": "contract IERC20"
                },
                "id": 1263,
                "name": "UserDefinedTypeName",
                "src": "411:6:4"
              }
            ],
            "id": 1264,
            "name": "VariableDeclaration",
            "src": "411:22:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "9effd687",
              "mutability": "mutable",
              "name": "bmiDaiStakingAddress",
              "scope": 1374,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1265,
                "name": "ElementaryTypeName",
                "src": "439:7:4"
              }
            ],
            "id": 1266,
            "name": "VariableDeclaration",
            "src": "439:35:4"
          },
          {
            "attributes": {
              "name": "onlyStaking",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1267,
                "name": "ParameterList",
                "src": "501:2:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_32c7a10378fd7e109e052ffbce3d0564219705e67bd7ca2015fabd91541d13cc",
                                  "typeString": "literal_string \"DefiYieldGenerator: caller is not a staking\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1268,
                            "name": "Identifier",
                            "src": "514:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1269,
                                    "name": "Identifier",
                                    "src": "523:3:4"
                                  }
                                ],
                                "id": 1270,
                                "name": "MemberAccess",
                                "src": "523:10:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1266,
                                  "type": "address",
                                  "value": "bmiDaiStakingAddress"
                                },
                                "id": 1271,
                                "name": "Identifier",
                                "src": "537:20:4"
                              }
                            ],
                            "id": 1272,
                            "name": "BinaryOperation",
                            "src": "523:34:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "446566695969656c6447656e657261746f723a2063616c6c6572206973206e6f742061207374616b696e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"DefiYieldGenerator: caller is not a staking\"",
                              "value": "DefiYieldGenerator: caller is not a staking"
                            },
                            "id": 1273,
                            "name": "Literal",
                            "src": "559:45:4"
                          }
                        ],
                        "id": 1274,
                        "name": "FunctionCall",
                        "src": "514:91:4"
                      }
                    ],
                    "id": 1275,
                    "name": "ExpressionStatement",
                    "src": "514:91:4"
                  },
                  {
                    "id": 1276,
                    "name": "PlaceholderStatement",
                    "src": "615:1:4"
                  }
                ],
                "id": 1277,
                "name": "Block",
                "src": "504:119:4"
              }
            ],
            "id": 1278,
            "name": "ModifierDefinition",
            "src": "481:142:4"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 1374,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 1321,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1243,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 1279,
                        "name": "UserDefinedTypeName",
                        "src": "651:17:4"
                      }
                    ],
                    "id": 1280,
                    "name": "VariableDeclaration",
                    "src": "651:36:4"
                  }
                ],
                "id": 1281,
                "name": "ParameterList",
                "src": "650:38:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1284,
                "name": "ParameterList",
                "src": "708:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5781,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1282,
                    "name": "Identifier",
                    "src": "698:9:4"
                  }
                ],
                "id": 1283,
                "name": "ModifierInvocation",
                "src": "698:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1260,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 1285,
                            "name": "Identifier",
                            "src": "718:17:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1280,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 1286,
                            "name": "Identifier",
                            "src": "738:18:4"
                          }
                        ],
                        "id": 1287,
                        "name": "Assignment",
                        "src": "718:38:4"
                      }
                    ],
                    "id": 1288,
                    "name": "ExpressionStatement",
                    "src": "718:38:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1262,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 1289,
                            "name": "Identifier",
                            "src": "775:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6914,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1290,
                                "name": "Identifier",
                                "src": "786:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1173,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1280,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1291,
                                        "name": "Identifier",
                                        "src": "793:18:4"
                                      }
                                    ],
                                    "id": 1292,
                                    "name": "MemberAccess",
                                    "src": "793:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1100,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1280,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1293,
                                            "name": "Identifier",
                                            "src": "824:18:4"
                                          }
                                        ],
                                        "id": 1294,
                                        "name": "MemberAccess",
                                        "src": "824:29:4"
                                      }
                                    ],
                                    "id": 1295,
                                    "name": "FunctionCall",
                                    "src": "824:31:4"
                                  }
                                ],
                                "id": 1296,
                                "name": "FunctionCall",
                                "src": "793:63:4"
                              }
                            ],
                            "id": 1297,
                            "name": "FunctionCall",
                            "src": "786:71:4"
                          }
                        ],
                        "id": 1298,
                        "name": "Assignment",
                        "src": "775:82:4"
                      }
                    ],
                    "id": 1299,
                    "name": "ExpressionStatement",
                    "src": "775:82:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1264,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 1300,
                            "name": "Identifier",
                            "src": "867:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6914,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1301,
                                "name": "Identifier",
                                "src": "878:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1173,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1280,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1302,
                                        "name": "Identifier",
                                        "src": "885:18:4"
                                      }
                                    ],
                                    "id": 1303,
                                    "name": "MemberAccess",
                                    "src": "885:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1108,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1280,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1304,
                                            "name": "Identifier",
                                            "src": "916:18:4"
                                          }
                                        ],
                                        "id": 1305,
                                        "name": "MemberAccess",
                                        "src": "916:29:4"
                                      }
                                    ],
                                    "id": 1306,
                                    "name": "FunctionCall",
                                    "src": "916:31:4"
                                  }
                                ],
                                "id": 1307,
                                "name": "FunctionCall",
                                "src": "885:63:4"
                              }
                            ],
                            "id": 1308,
                            "name": "FunctionCall",
                            "src": "878:71:4"
                          }
                        ],
                        "id": 1309,
                        "name": "Assignment",
                        "src": "867:82:4"
                      }
                    ],
                    "id": 1310,
                    "name": "ExpressionStatement",
                    "src": "867:82:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1266,
                              "type": "address",
                              "value": "bmiDaiStakingAddress"
                            },
                            "id": 1311,
                            "name": "Identifier",
                            "src": "959:20:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getContract",
                                  "referencedDeclaration": 1173,
                                  "type": "function (string memory) view external returns (address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1280,
                                      "type": "contract ContractsRegistry",
                                      "value": "_contractsRegistry"
                                    },
                                    "id": 1312,
                                    "name": "Identifier",
                                    "src": "982:18:4"
                                  }
                                ],
                                "id": 1313,
                                "name": "MemberAccess",
                                "src": "982:30:4"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "string memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getBmiDAIStakingName",
                                      "referencedDeclaration": 1132,
                                      "type": "function () pure external returns (string memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1280,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1314,
                                        "name": "Identifier",
                                        "src": "1013:18:4"
                                      }
                                    ],
                                    "id": 1315,
                                    "name": "MemberAccess",
                                    "src": "1013:39:4"
                                  }
                                ],
                                "id": 1316,
                                "name": "FunctionCall",
                                "src": "1013:41:4"
                              }
                            ],
                            "id": 1317,
                            "name": "FunctionCall",
                            "src": "982:73:4"
                          }
                        ],
                        "id": 1318,
                        "name": "Assignment",
                        "src": "959:96:4"
                      }
                    ],
                    "id": 1319,
                    "name": "ExpressionStatement",
                    "src": "959:96:4"
                  }
                ],
                "id": 1320,
                "name": "Block",
                "src": "708:354:4"
              }
            ],
            "id": 1321,
            "name": "FunctionDefinition",
            "src": "629:433:4"
          },
          {
            "attributes": {
              "functionSelector": "333399bc",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveAllDaiTokensForStakingWithdrowal",
              "scope": 1374,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1322,
                "name": "ParameterList",
                "src": "1116:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1325,
                "name": "ParameterList",
                "src": "1138:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5781,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1323,
                    "name": "Identifier",
                    "src": "1128:9:4"
                  }
                ],
                "id": 1324,
                "name": "ModifierInvocation",
                "src": "1128:9:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1327
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1339,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1326,
                            "name": "ElementaryTypeName",
                            "src": "1148:4:4"
                          }
                        ],
                        "id": 1327,
                        "name": "VariableDeclaration",
                        "src": "1148:12:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 6883,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1262,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 1328,
                                "name": "Identifier",
                                "src": "1163:8:4"
                              }
                            ],
                            "id": 1329,
                            "name": "MemberAccess",
                            "src": "1163:16:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1266,
                              "type": "address",
                              "value": "bmiDaiStakingAddress"
                            },
                            "id": 1330,
                            "name": "Identifier",
                            "src": "1180:20:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1258,
                              "type": "uint256",
                              "value": "MAX_INT"
                            },
                            "id": 1331,
                            "name": "Identifier",
                            "src": "1202:7:4"
                          }
                        ],
                        "id": 1332,
                        "name": "FunctionCall",
                        "src": "1163:47:4"
                      }
                    ],
                    "id": 1333,
                    "name": "VariableDeclarationStatement",
                    "src": "1148:62:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                                  "typeString": "literal_string \"Failed to approve DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1334,
                            "name": "Identifier",
                            "src": "1221:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1327,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1335,
                            "name": "Identifier",
                            "src": "1229:7:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f20617070726f76652044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to approve DAI tokens\"",
                              "value": "Failed to approve DAI tokens"
                            },
                            "id": 1336,
                            "name": "Literal",
                            "src": "1238:30:4"
                          }
                        ],
                        "id": 1337,
                        "name": "FunctionCall",
                        "src": "1221:48:4"
                      }
                    ],
                    "id": 1338,
                    "name": "ExpressionStatement",
                    "src": "1221:48:4"
                  }
                ],
                "id": 1339,
                "name": "Block",
                "src": "1138:138:4"
              }
            ],
            "id": 1340,
            "name": "FunctionDefinition",
            "src": "1068:208:4"
          },
          {
            "attributes": {
              "functionSelector": "a2ac7ac6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveAllBMITokensForStakingWithdrowal",
              "scope": 1374,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1341,
                "name": "ParameterList",
                "src": "1330:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1344,
                "name": "ParameterList",
                "src": "1352:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5781,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1342,
                    "name": "Identifier",
                    "src": "1342:9:4"
                  }
                ],
                "id": 1343,
                "name": "ModifierInvocation",
                "src": "1342:9:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1346
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1358,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1345,
                            "name": "ElementaryTypeName",
                            "src": "1362:4:4"
                          }
                        ],
                        "id": 1346,
                        "name": "VariableDeclaration",
                        "src": "1362:12:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 6883,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1264,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 1347,
                                "name": "Identifier",
                                "src": "1377:8:4"
                              }
                            ],
                            "id": 1348,
                            "name": "MemberAccess",
                            "src": "1377:16:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1266,
                              "type": "address",
                              "value": "bmiDaiStakingAddress"
                            },
                            "id": 1349,
                            "name": "Identifier",
                            "src": "1394:20:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1258,
                              "type": "uint256",
                              "value": "MAX_INT"
                            },
                            "id": 1350,
                            "name": "Identifier",
                            "src": "1416:7:4"
                          }
                        ],
                        "id": 1351,
                        "name": "FunctionCall",
                        "src": "1377:47:4"
                      }
                    ],
                    "id": 1352,
                    "name": "VariableDeclarationStatement",
                    "src": "1362:62:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                                  "typeString": "literal_string \"Failed to approve BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1353,
                            "name": "Identifier",
                            "src": "1435:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1346,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1354,
                            "name": "Identifier",
                            "src": "1443:7:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f20617070726f766520424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to approve BMI tokens\"",
                              "value": "Failed to approve BMI tokens"
                            },
                            "id": 1355,
                            "name": "Literal",
                            "src": "1452:30:4"
                          }
                        ],
                        "id": 1356,
                        "name": "FunctionCall",
                        "src": "1435:48:4"
                      }
                    ],
                    "id": 1357,
                    "name": "ExpressionStatement",
                    "src": "1435:48:4"
                  }
                ],
                "id": 1358,
                "name": "Block",
                "src": "1352:138:4"
              }
            ],
            "id": 1359,
            "name": "FunctionDefinition",
            "src": "1282:208:4"
          },
          {
            "attributes": {
              "functionSelector": "f6b15fe6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "getProfit",
              "scope": 1374,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "stakingStartTime",
                      "scope": 1373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1360,
                        "name": "ElementaryTypeName",
                        "src": "1527:7:4"
                      }
                    ],
                    "id": 1361,
                    "name": "VariableDeclaration",
                    "src": "1527:24:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "stakedDAIAmount",
                      "scope": 1373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1362,
                        "name": "ElementaryTypeName",
                        "src": "1553:7:4"
                      }
                    ],
                    "id": 1363,
                    "name": "VariableDeclaration",
                    "src": "1553:23:4"
                  }
                ],
                "id": 1364,
                "name": "ParameterList",
                "src": "1526:51:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1367,
                        "name": "ElementaryTypeName",
                        "src": "1608:7:4"
                      }
                    ],
                    "id": 1368,
                    "name": "VariableDeclaration",
                    "src": "1608:7:4"
                  }
                ],
                "id": 1369,
                "name": "ParameterList",
                "src": "1607:9:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1278,
                      "type": "modifier ()",
                      "value": "onlyStaking"
                    },
                    "id": 1365,
                    "name": "Identifier",
                    "src": "1587:11:4"
                  }
                ],
                "id": 1366,
                "name": "ModifierInvocation",
                "src": "1587:11:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1369
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 1370,
                        "name": "Literal",
                        "src": "1642:1:4"
                      }
                    ],
                    "id": 1371,
                    "name": "Return",
                    "src": "1635:8:4"
                  }
                ],
                "id": 1372,
                "name": "Block",
                "src": "1617:33:4"
              }
            ],
            "id": 1373,
            "name": "FunctionDefinition",
            "src": "1508:142:4"
          }
        ],
        "id": 1374,
        "name": "ContractDefinition",
        "src": "237:1415:4"
      }
    ],
    "id": 1375,
    "name": "SourceUnit",
    "src": "32:1620:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE107471050bDD394907808C4ad14022a72858B0D",
      "transactionHash": "0x7c46c34188627c1fffa1a4a7ceb24c39932bd67ec65f4f4d29814972706ad4a3"
    },
    "1611324659295": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5b4536a8de996EF62642c261Af66b1460a748603",
      "transactionHash": "0x406934d02057164b8a580a4937567f77e6e3e45440c340a237b5e4e2e5e1eead"
    },
    "1611567605761": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9474821F5e6b17232392a111D227849032986C66",
      "transactionHash": "0xb318b49f0d0be565fd6e999e00dec9c139b8cd89ac40bfcd673fb8a0f0af435e"
    },
    "1611595333470": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x534CdfA65d7f86695801F67231af76d1504557E2",
      "transactionHash": "0xdfca181f1f9f0048ade20d28e9a56ef1541e4d4326bb4ed133444f8ec49accc0"
    },
    "1611598410813": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb5d68ff7bdE19819eE58C3A4ca88B1917CbcE1e3",
      "transactionHash": "0xb8a4982d4522688f171835d6f7846298dd4b6e9c22592e4049fae15a406af3b4"
    },
    "1611652294247": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x4B35EfA363d23D10a2447bb5bBcBbDCe4C8A248c",
      "transactionHash": "0xe75c67d211731bd68bd5be30b74361f5177585f94774a0c0ade3cb4f3553da71"
    },
    "1611667724718": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf739fa5219FD0bb3Fc92FB8F203d46D7e7D7ACc4",
      "transactionHash": "0x550a3cbbb4f734eb481f9bb67240690e7f7f5cde8eaa30d3631420e868a35f92"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-26T15:28:36.412Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}