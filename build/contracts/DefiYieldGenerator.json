{
  "contractName": "DefiYieldGenerator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bmiDaiStakingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveAllDAITokensForStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveAllBMITokensForStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakingStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakedDAIAmount",
          "type": "uint256"
        }
      ],
      "name": "getProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveAllBMITokensForStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveAllDAITokensForStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiDaiStakingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedDAIAmount\",\"type\":\"uint256\"}],\"name\":\"getProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":\"DefiYieldGenerator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0x21e65a457945a7daadd0c72f45d71778dcfa708d713ae270b072891b39ac3c2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98106396e3c27cd034b21e0a29707b80a93cb0b1b28c40755702f1c0aabfa504\",\"dweb:/ipfs/QmZ9pPmSkCuytrx1pFYUF22kf18nT7N2bzqCoSLdADUuDr\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0x7bd36a4dc7eea5fed1f640cb35be604358c05d2c070028188035b0940515fc1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da24b251837742a087453dc5f63e26e2b158ab9c968e39c7cd27bd9cd8bac781\",\"dweb:/ipfs/QmWEsnJBe3gFuXLoKaHT9mugR3Wd9GfjA4MDGcLby75f6F\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5594:42",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:42",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:42",
                "type": ""
              }
            ],
            "src": "14:259:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:42",
                "type": ""
              }
            ],
            "src": "278:263:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:42"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:42",
                "type": ""
              }
            ],
            "src": "546:297:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:189:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "954:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1025:36:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1038:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:23:42"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1029:5:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1097:5:42"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1070:26:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:33:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1070:33:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:15:42",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1122:5:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1346",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:42",
                "type": ""
              }
            ],
            "src": "848:285:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:868:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1275:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1284:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1292:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1277:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1277:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1250:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1259:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1271:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:30:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1324:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:16:42"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1314:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1349:28:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1359:18:42",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1353:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1389:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:14:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1386:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:32:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:42"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1464:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1449:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:22:42"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1443:2:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1528:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1498:2:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1502:4:42",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:13:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1509:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:27:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:35:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1480:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1554:23:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1574:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1568:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:9:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1558:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1604:13:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1606:7:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:9:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1606:9:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1592:6:42"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1600:2:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:14:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1626:23:42",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1640:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:9:42"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1630:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1658:130:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1684:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:6:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1708:4:42",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:17:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1715:66:42",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1692:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1692:90:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:103:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:112:42"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1662:10:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:13:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1849:7:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:9:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:9:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1806:10:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1818:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1803:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:18:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1826:10:42"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1823:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:22:42"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1800:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:46:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1797:2:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:42",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1880:10:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1869:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:22:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1869:22:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1907:6:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:22:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:22:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1972:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1981:6:42"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1989:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1974:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1974:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1974:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1945:2:42"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1949:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1941:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1941:15:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1958:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1937:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:24:42"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1963:7:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1934:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:37:42"
                  },
                  "nodeType": "YulIf",
                  "src": "1931:2:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2033:2:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2037:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:11:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2046:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2054:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:15:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2059:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2007:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:59:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:59:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2075:16:42",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2085:6:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1195:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1206:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1218:6:42",
                "type": ""
              }
            ],
            "src": "1138:959:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:171:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2235:26:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2244:6:42"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2252:6:42"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2237:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2237:22:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2237:22:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2210:7:42"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2206:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:23:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2231:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2202:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:42"
                  },
                  "nodeType": "YulIf",
                  "src": "2199:2:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2270:33:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2293:9:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2280:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:23:42"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2270:6:42"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2312:42:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2339:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2350:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:18:42"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2322:12:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:32:42"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2312:6:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2147:9:42",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2158:7:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2170:6:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2178:6:42",
                "type": ""
              }
            ],
            "src": "2102:258:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2466:125:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2476:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2488:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2499:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2484:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2476:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2518:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2533:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2541:42:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2529:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2529:55:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2511:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:74:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2511:74:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2435:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2457:4:42",
                "type": ""
              }
            ],
            "src": "2365:226:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2733:168:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2743:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2755:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2766:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2751:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2751:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2743:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2785:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2800:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2808:42:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2796:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2796:55:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2778:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2778:74:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2778:74:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2872:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2883:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2868:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2868:18:42"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2888:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2861:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2861:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2861:34:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2694:9:42",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2705:6:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2713:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2724:4:42",
                "type": ""
              }
            ],
            "src": "2596:305:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3033:125:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3043:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3055:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3066:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3051:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3051:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3043:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3085:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3100:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3108:42:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3096:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3096:55:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:74:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3078:74:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1346__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3002:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3013:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3024:4:42",
                "type": ""
              }
            ],
            "src": "2906:252:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3279:125:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3289:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3301:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3312:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3297:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3289:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3331:9:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3346:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3354:42:42",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3342:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3342:55:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3324:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3324:74:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3324:74:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$9500__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3248:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3259:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3270:4:42",
                "type": ""
              }
            ],
            "src": "3163:241:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3530:321:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3547:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3558:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3540:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:21:42"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3570:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3590:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3584:5:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3584:13:42"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3574:6:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3617:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3628:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3613:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3613:18:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3633:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3606:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3606:34:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3606:34:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3675:6:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3683:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3671:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3671:15:42"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3692:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3703:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3688:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3688:18:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3708:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3649:21:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3649:66:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3649:66:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3724:121:42",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3740:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3759:6:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3767:2:42",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3755:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3755:15:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3772:66:42",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3751:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3751:88:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3736:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3736:104:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3842:2:42",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3732:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3732:113:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3724:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3499:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3510:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3521:4:42",
                "type": ""
              }
            ],
            "src": "3409:442:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4030:178:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4047:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4058:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4040:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4040:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4040:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4081:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4092:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4077:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4077:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4097:2:42",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4070:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4070:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4070:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4120:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4131:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4116:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4116:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4136:30:42",
                        "type": "",
                        "value": "Failed to approve DAI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:58:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4109:58:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4176:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4188:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4199:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4184:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4184:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4176:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4007:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4021:4:42",
                "type": ""
              }
            ],
            "src": "3856:352:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4387:242:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4404:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4415:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4397:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4397:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4397:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4438:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4449:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4434:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4434:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4454:2:42",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4427:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4427:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4427:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4477:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4488:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4473:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4473:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4493:34:42",
                        "type": "",
                        "value": "DefiYieldGenerator: caller is no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4466:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4466:62:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4466:62:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4548:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4559:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4544:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4544:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4564:22:42",
                        "type": "",
                        "value": "t a staking contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4537:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4537:50:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4537:50:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4596:27:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4608:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4619:3:42",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4604:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4604:19:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4596:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce44ce2f00876d7842994a3555e35deaf98c2e180cbf261a06a508d2e5cad440__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4364:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4378:4:42",
                "type": ""
              }
            ],
            "src": "4213:416:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4808:178:42",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4825:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4836:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4818:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4818:21:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4818:21:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4859:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4870:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4855:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4855:18:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4875:2:42",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4848:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4848:30:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4848:30:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4898:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4909:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4894:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:18:42"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4914:30:42",
                        "type": "",
                        "value": "Failed to approve BMI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4887:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:58:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4887:58:42"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4954:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4966:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4977:2:42",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4962:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4962:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4954:4:42"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4785:9:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4799:4:42",
                "type": ""
              }
            ],
            "src": "4634:352:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5092:76:42",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5102:26:42",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5114:9:42"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5125:2:42",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5110:3:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5110:18:42"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5102:4:42"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5144:9:42"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5155:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5137:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5137:25:42"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5137:25:42"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5061:9:42",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5072:6:42",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5083:4:42",
                "type": ""
              }
            ],
            "src": "4991:177:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5226:205:42",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5236:10:42",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5245:1:42",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5240:1:42",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5305:63:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5330:3:42"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5335:1:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5326:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5326:11:42"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "5349:3:42"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5354:1:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5345:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5345:11:42"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5339:5:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5339:18:42"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5319:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5319:39:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5319:39:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5266:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5269:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5263:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:13:42"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5277:19:42",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5279:15:42",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5288:1:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5291:2:42",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5284:3:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5284:10:42"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5279:1:42"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5259:3:42",
                    "statements": []
                  },
                  "src": "5255:113:42"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5394:31:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5407:3:42"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5412:6:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5403:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5403:16:42"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5421:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5396:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5396:27:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5396:27:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5383:1:42"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5386:6:42"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5380:2:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5380:13:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5377:2:42"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5204:3:42",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5209:3:42",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5214:6:42",
                "type": ""
              }
            ],
            "src": "5173:258:42"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5483:109:42",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5570:16:42",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5579:1:42",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5582:1:42",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5572:6:42"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5572:12:42"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5572:12:42"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5506:5:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5517:5:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5524:42:42",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5513:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5513:54:42"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5503:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:65:42"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:42"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:73:42"
                  },
                  "nodeType": "YulIf",
                  "src": "5493:2:42"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5472:5:42",
                "type": ""
              }
            ],
            "src": "5436:156:42"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1346(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_2)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1346__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$9500__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to approve DAI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce44ce2f00876d7842994a3555e35deaf98c2e180cbf261a06a508d2e5cad440__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"DefiYieldGenerator: caller is no\")\n        mstore(add(headStart, 96), \"t a staking contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to approve BMI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 42,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "237:1435:4:-:0;;;;;;;;;;;;-1:-1:-1;882:17:26;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:26;-1:-1:-1;;;;;924:18:26;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:26;957:43;;924:6;;957:43;848:159;237:1435:4;;598:104:24;685:10;598:104;:::o;237:1435:4:-;;;;;;;",
  "deployedSourceMap": "237:1435:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:202;;;:::i;:::-;;1706:145:26;;;:::i;1083:77::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:35:4;;;:::i;1285:202::-;;;:::i;383:22::-;;;:::i;638:433::-;;;;;;:::i;:::-;;:::i;411:22::-;;;:::i;334:42::-;;;:::i;2000:240:26:-;;;;;;:::i;:::-;;:::i;1505:165:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1077:202::-;537:20;;;;523:10;:34;514:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1174:8:::1;::::0;1159:12:::1;::::0;1174:8:::1;;:16;1191:12;:10;:12::i;:::-;317:10;1174:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1159:54;;1232:7;1224:48;;;;;;;;;;;;:::i;:::-;624:1;1077:202::o:0;1706:145:26:-;1297:12;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;::::1;1796:6:::0;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;;::::1;::::0;;1706:145::o;1083:77::-;1121:7;1147:6;;;1083:77;:::o;439:35:4:-;;;;;;:::o;1285:202::-;537:20;;;;523:10;:34;514:100;;;;;;;;;;;;:::i;:::-;1382:8:::1;::::0;1367:12:::1;::::0;1382:8:::1;;:16;1399:12;:10;:12::i;:::-;317:10;1382:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1367:54;;1440:7;1432:48;;;;;;;;;;;;:::i;383:22::-:0;;;;;;:::o;638:433::-;1297:12:26;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:17:4::1;:38:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;833:31:::1;::::0;;;;;;;802:30:::1;::::0;727:38;;833:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;833:31:4;;;;;;;;727:38;833:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;802:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;784:8;;:82;;;;;;;;;;;;;;;;;;894:18;:30;;;925:18;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;894:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;876:8;;:82;;;;;;;;;;;;;;;;;;991:18;:30;;;1022:18;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;991:73;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;968:20;:96:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;638:433:4:o;411:22::-;;;;;;:::o;334:42::-;;;;;;:::o;2000:240:26:-;1297:12;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:22:::1;::::0;::::1;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;::::1;::::0;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2000:240::o;1505:165:4:-;537:20;;1628:7;;537:20;;523:10;:34;514:100;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1662:1:4::1;1505:165:::0;;;;:::o;598:104:24:-;685:10;598:104;:::o;14:259:42:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:42:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;1138:959;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1330:9;1324:16;1359:18;1400:2;1392:6;1389:14;1386:2;;;1421:6;1413;1406:22;1386:2;1464:6;1453:9;1449:22;1439:32;;1509:7;1502:4;1498:2;1494:13;1490:27;1480:2;;1536:6;1528;1521:22;1480:2;1574;1568:9;1600:2;1592:6;1589:14;1586:2;;;1606:9;1586:2;1646;1640:9;1785:2;1715:66;1708:4;1700:6;1696:17;1692:90;1684:6;1680:103;1676:112;1838:6;1826:10;1823:22;1818:2;1806:10;1803:18;1800:46;1797:2;;;1849:9;1797:2;1876;1869:22;1900;;;1941:15;;;1958:2;1937:24;1934:37;-1:-1:-1;1931:2:42;;;1989:6;1981;1974:22;1931:2;2007:59;2059:6;2054:2;2046:6;2042:15;2037:2;2033;2029:11;2007:59;:::i;:::-;2085:6;1229:868;-1:-1:-1;;;;;;1229:868:42:o;2102:258::-;;;2231:2;2219:9;2210:7;2206:23;2202:32;2199:2;;;2252:6;2244;2237:22;2199:2;-1:-1:-1;;2280:23:42;;;2350:2;2335:18;;;2322:32;;-1:-1:-1;2189:171:42:o;2365:226::-;2541:42;2529:55;;;;2511:74;;2499:2;2484:18;;2466:125::o;2596:305::-;2808:42;2796:55;;;;2778:74;;2883:2;2868:18;;2861:34;2766:2;2751:18;;2733:168::o;3409:442::-;;3558:2;3547:9;3540:21;3590:6;3584:13;3633:6;3628:2;3617:9;3613:18;3606:34;3649:66;3708:6;3703:2;3692:9;3688:18;3683:2;3675:6;3671:15;3649:66;:::i;:::-;3767:2;3755:15;3772:66;3751:88;3736:104;;;;3842:2;3732:113;;3530:321;-1:-1:-1;;3530:321:42:o;3856:352::-;4058:2;4040:21;;;4097:2;4077:18;;;4070:30;4136;4131:2;4116:18;;4109:58;4199:2;4184:18;;4030:178::o;4213:416::-;4415:2;4397:21;;;4454:2;4434:18;;;4427:30;4493:34;4488:2;4473:18;;4466:62;4564:22;4559:2;4544:18;;4537:50;4619:3;4604:19;;4387:242::o;4634:352::-;4836:2;4818:21;;;4875:2;4855:18;;;4848:30;4914;4909:2;4894:18;;4887:58;4977:2;4962:18;;4808:178::o;4991:177::-;5137:25;;;5125:2;5110:18;;5092:76::o;5173:258::-;5245:1;5255:113;5269:6;5266:1;5263:13;5255:113;;;5345:11;;;5339:18;5326:11;;;5319:39;5291:2;5284:10;5255:113;;;5386:6;5383:1;5380:13;5377:2;;;5421:1;5412:6;5407:3;5403:16;5396:27;5377:2;;5226:205;;;:::o;5436:156::-;5524:42;5517:5;5513:54;5506:5;5503:65;5493:2;;5582:1;5579;5572:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./ContractsRegistry.sol\";\n\ncontract DefiYieldGenerator is Ownable {\n    uint256 constant private MAX_INT = 2**256 - 1;\n\n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    address public bmiDaiStakingAddress;\n\n    modifier onlyStaking() {\n        require (msg.sender == bmiDaiStakingAddress, \"DefiYieldGenerator: caller is not a staking contract\");\n        _;\n    }\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n        \n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        bmiDaiStakingAddress = _contractsRegistry.getContract(_contractsRegistry.getBMIDAIStakingName());\n    }\n\n    function approveAllDAITokensForStakingWithdrowal() external onlyStaking {\n        bool success = daiToken.approve(_msgSender(), MAX_INT);\n\n        require(success, \"Failed to approve DAI tokens\");\n    }\n\n    function approveAllBMITokensForStakingWithdrowal() external onlyStaking {\n        bool success = bmiToken.approve(_msgSender(), MAX_INT);\n\n        require(success, \"Failed to approve BMI tokens\");\n    }\n    \n// TODO\n    function getProfit(\n        uint256 stakingStartTime, \n        uint256 stakedDAIAmount\n    ) external onlyStaking returns (uint256) {        \n        return 0;\n    }\n}",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
    "exportedSymbols": {
      "AccessControl": [
        7245
      ],
      "Address": [
        9957
      ],
      "Context": [
        6962
      ],
      "ContractsRegistry": [
        1346
      ],
      "DefiYieldGenerator": [
        1479
      ],
      "EnumerableSet": [
        10892
      ],
      "IERC20": [
        9500
      ],
      "Ownable": [
        7354
      ]
    },
    "id": 1480,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1348,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "id": 1349,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1350,
        "nodeType": "ImportDirective",
        "scope": 1480,
        "sourceUnit": 7355,
        "src": "91:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1351,
        "nodeType": "ImportDirective",
        "scope": 1480,
        "sourceUnit": 9501,
        "src": "144:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 1352,
        "nodeType": "ImportDirective",
        "scope": 1480,
        "sourceUnit": 1347,
        "src": "202:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1353,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7354,
              "src": "268:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7354",
                "typeString": "contract Ownable"
              }
            },
            "id": 1354,
            "nodeType": "InheritanceSpecifier",
            "src": "268:7:4"
          }
        ],
        "contractDependencies": [
          6962,
          7354
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1479,
        "linearizedBaseContracts": [
          1479,
          7354,
          6962
        ],
        "name": "DefiYieldGenerator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1361,
            "mutability": "constant",
            "name": "MAX_INT",
            "nodeType": "VariableDeclaration",
            "scope": 1479,
            "src": "282:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1355,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 1360,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 1358,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 1356,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "317:1:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 1357,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "320:3:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "317:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 1359,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "326:1:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "317:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 1363,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1479,
            "src": "334:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 1362,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1346,
              "src": "334:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 1365,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1479,
            "src": "383:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$9500",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1364,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9500,
              "src": "383:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$9500",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 1367,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1479,
            "src": "411:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$9500",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1366,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9500,
              "src": "411:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$9500",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9effd687",
            "id": 1369,
            "mutability": "mutable",
            "name": "bmiDaiStakingAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1479,
            "src": "439:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1368,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "439:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1380,
              "nodeType": "Block",
              "src": "504:128:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1372,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "523:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "523:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1374,
                          "name": "bmiDaiStakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1369,
                          "src": "537:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "523:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446566695969656c6447656e657261746f723a2063616c6c6572206973206e6f742061207374616b696e6720636f6e7472616374",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "559:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce44ce2f00876d7842994a3555e35deaf98c2e180cbf261a06a508d2e5cad440",
                          "typeString": "literal_string \"DefiYieldGenerator: caller is not a staking contract\""
                        },
                        "value": "DefiYieldGenerator: caller is not a staking contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce44ce2f00876d7842994a3555e35deaf98c2e180cbf261a06a508d2e5cad440",
                          "typeString": "literal_string \"DefiYieldGenerator: caller is not a staking contract\""
                        }
                      ],
                      "id": 1371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "514:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "514:100:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "514:100:4"
                },
                {
                  "id": 1379,
                  "nodeType": "PlaceholderStatement",
                  "src": "624:1:4"
                }
              ]
            },
            "id": 1381,
            "name": "onlyStaking",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:2:4"
            },
            "src": "481:151:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1423,
              "nodeType": "Block",
              "src": "717:354:4",
              "statements": [
                {
                  "expression": {
                    "id": 1390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1388,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "727:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1389,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "747:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "727:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 1391,
                  "nodeType": "ExpressionStatement",
                  "src": "727:38:4"
                },
                {
                  "expression": {
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1392,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1365,
                      "src": "784:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9500",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1396,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1383,
                                  "src": "833:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1187,
                                "src": "833:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "833:31:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1394,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "802:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1276,
                            "src": "802:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "802:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1393,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9500,
                        "src": "795:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$9500_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "795:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9500",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "784:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9500",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1402,
                  "nodeType": "ExpressionStatement",
                  "src": "784:82:4"
                },
                {
                  "expression": {
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1403,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "876:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9500",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1407,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1383,
                                  "src": "925:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1195,
                                "src": "925:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "925:31:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1405,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "894:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1276,
                            "src": "894:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "894:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1404,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9500,
                        "src": "887:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$9500_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "887:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$9500",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "876:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$9500",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "876:82:4"
                },
                {
                  "expression": {
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1414,
                      "name": "bmiDaiStakingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1369,
                      "src": "968:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1417,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "1022:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getBMIDAIStakingName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1219,
                            "src": "1022:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function () pure external returns (string memory)"
                            }
                          },
                          "id": 1419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1022:41:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 1415,
                          "name": "_contractsRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1383,
                          "src": "991:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                            "typeString": "contract ContractsRegistry"
                          }
                        },
                        "id": 1416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1276,
                        "src": "991:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) view external returns (address)"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "991:73:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "968:96:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1422,
                  "nodeType": "ExpressionStatement",
                  "src": "968:96:4"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 1424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1386,
                "modifierName": {
                  "id": 1385,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7303,
                  "src": "707:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "707:9:4"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1424,
                  "src": "660:36:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1346,
                    "src": "660:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1346",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:38:4"
            },
            "returnParameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:4"
            },
            "scope": 1479,
            "src": "638:433:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1443,
              "nodeType": "Block",
              "src": "1149:130:4",
              "statements": [
                {
                  "assignments": [
                    1430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1430,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1443,
                      "src": "1159:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1429,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1159:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1437,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1433,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6950,
                          "src": "1191:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1191:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1435,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "1205:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1431,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1365,
                        "src": "1174:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9500",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9469,
                      "src": "1174:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1159:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1439,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1430,
                        "src": "1232:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20617070726f76652044414920746f6b656e73",
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1241:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                          "typeString": "literal_string \"Failed to approve DAI tokens\""
                        },
                        "value": "Failed to approve DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                          "typeString": "literal_string \"Failed to approve DAI tokens\""
                        }
                      ],
                      "id": 1438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1224:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:48:4"
                }
              ]
            },
            "functionSelector": "5d3581cd",
            "id": 1444,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1427,
                "modifierName": {
                  "id": 1426,
                  "name": "onlyStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1381,
                  "src": "1137:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1137:11:4"
              }
            ],
            "name": "approveAllDAITokensForStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:2:4"
            },
            "returnParameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:4"
            },
            "scope": 1479,
            "src": "1077:202:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1463,
              "nodeType": "Block",
              "src": "1357:130:4",
              "statements": [
                {
                  "assignments": [
                    1450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1450,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1463,
                      "src": "1367:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1449,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1367:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1457,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1453,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6950,
                          "src": "1399:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1399:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1455,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "1413:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1451,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1367,
                        "src": "1382:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9500",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9469,
                      "src": "1382:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1367:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1459,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "1440:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20617070726f766520424d4920746f6b656e73",
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1449:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                          "typeString": "literal_string \"Failed to approve BMI tokens\""
                        },
                        "value": "Failed to approve BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                          "typeString": "literal_string \"Failed to approve BMI tokens\""
                        }
                      ],
                      "id": 1458,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1432:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1462,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:48:4"
                }
              ]
            },
            "functionSelector": "a2ac7ac6",
            "id": 1464,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1447,
                "modifierName": {
                  "id": 1446,
                  "name": "onlyStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1381,
                  "src": "1345:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1345:11:4"
              }
            ],
            "name": "approveAllBMITokensForStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:2:4"
            },
            "returnParameters": {
              "id": 1448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:0:4"
            },
            "scope": 1479,
            "src": "1285:202:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "1637:33:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1662:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1474,
                  "id": 1476,
                  "nodeType": "Return",
                  "src": "1655:8:4"
                }
              ]
            },
            "functionSelector": "f6b15fe6",
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1471,
                "modifierName": {
                  "id": 1470,
                  "name": "onlyStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1381,
                  "src": "1607:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:11:4"
              }
            ],
            "name": "getProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1466,
                  "mutability": "mutable",
                  "name": "stakingStartTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1533:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1468,
                  "mutability": "mutable",
                  "name": "stakedDAIAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1568:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1523:74:4"
            },
            "returnParameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1473,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "1628:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1627:9:4"
            },
            "scope": 1479,
            "src": "1505:165:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1480,
        "src": "237:1435:4"
      }
    ],
    "src": "32:1640:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
      "exportedSymbols": {
        "AccessControl": [
          7245
        ],
        "Address": [
          9957
        ],
        "Context": [
          6962
        ],
        "ContractsRegistry": [
          1346
        ],
        "DefiYieldGenerator": [
          1479
        ],
        "EnumerableSet": [
          10892
        ],
        "IERC20": [
          9500
        ],
        "Ownable": [
          7354
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1348,
        "name": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1349,
        "name": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 7355,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 1480,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1350,
        "name": "ImportDirective",
        "src": "91:52:4"
      },
      {
        "attributes": {
          "SourceUnit": 9501,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 1480,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1351,
        "name": "ImportDirective",
        "src": "144:56:4"
      },
      {
        "attributes": {
          "SourceUnit": 1347,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 1480,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1352,
        "name": "ImportDirective",
        "src": "202:33:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            6962,
            7354
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1479,
            7354,
            6962
          ],
          "name": "DefiYieldGenerator",
          "scope": 1480
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 7354,
                  "type": "contract Ownable"
                },
                "id": 1353,
                "name": "UserDefinedTypeName",
                "src": "268:7:4"
              }
            ],
            "id": 1354,
            "name": "InheritanceSpecifier",
            "src": "268:7:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "MAX_INT",
              "scope": 1479,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1355,
                "name": "ElementaryTypeName",
                "src": "282:7:4"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "-",
                  "type": "int_const 1157...(70 digits omitted)...9935"
                },
                "children": [
                  {
                    "attributes": {
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "operator": "**",
                      "type": "int_const 1157...(70 digits omitted)...9936"
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "32",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 2",
                          "value": "2"
                        },
                        "id": 1356,
                        "name": "Literal",
                        "src": "317:1:4"
                      },
                      {
                        "attributes": {
                          "hexvalue": "323536",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 256",
                          "value": "256"
                        },
                        "id": 1357,
                        "name": "Literal",
                        "src": "320:3:4"
                      }
                    ],
                    "id": 1358,
                    "name": "BinaryOperation",
                    "src": "317:6:4"
                  },
                  {
                    "attributes": {
                      "hexvalue": "31",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 1",
                      "value": "1"
                    },
                    "id": 1359,
                    "name": "Literal",
                    "src": "326:1:4"
                  }
                ],
                "id": 1360,
                "name": "BinaryOperation",
                "src": "317:10:4"
              }
            ],
            "id": 1361,
            "name": "VariableDeclaration",
            "src": "282:45:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 1479,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1346,
                  "type": "contract ContractsRegistry"
                },
                "id": 1362,
                "name": "UserDefinedTypeName",
                "src": "334:17:4"
              }
            ],
            "id": 1363,
            "name": "VariableDeclaration",
            "src": "334:42:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 1479,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 9500,
                  "type": "contract IERC20"
                },
                "id": 1364,
                "name": "UserDefinedTypeName",
                "src": "383:6:4"
              }
            ],
            "id": 1365,
            "name": "VariableDeclaration",
            "src": "383:22:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 1479,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 9500,
                  "type": "contract IERC20"
                },
                "id": 1366,
                "name": "UserDefinedTypeName",
                "src": "411:6:4"
              }
            ],
            "id": 1367,
            "name": "VariableDeclaration",
            "src": "411:22:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "9effd687",
              "mutability": "mutable",
              "name": "bmiDaiStakingAddress",
              "scope": 1479,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1368,
                "name": "ElementaryTypeName",
                "src": "439:7:4"
              }
            ],
            "id": 1369,
            "name": "VariableDeclaration",
            "src": "439:35:4"
          },
          {
            "attributes": {
              "name": "onlyStaking",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1370,
                "name": "ParameterList",
                "src": "501:2:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ce44ce2f00876d7842994a3555e35deaf98c2e180cbf261a06a508d2e5cad440",
                                  "typeString": "literal_string \"DefiYieldGenerator: caller is not a staking contract\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1371,
                            "name": "Identifier",
                            "src": "514:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1372,
                                    "name": "Identifier",
                                    "src": "523:3:4"
                                  }
                                ],
                                "id": 1373,
                                "name": "MemberAccess",
                                "src": "523:10:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1369,
                                  "type": "address",
                                  "value": "bmiDaiStakingAddress"
                                },
                                "id": 1374,
                                "name": "Identifier",
                                "src": "537:20:4"
                              }
                            ],
                            "id": 1375,
                            "name": "BinaryOperation",
                            "src": "523:34:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "446566695969656c6447656e657261746f723a2063616c6c6572206973206e6f742061207374616b696e6720636f6e7472616374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"DefiYieldGenerator: caller is not a staking contract\"",
                              "value": "DefiYieldGenerator: caller is not a staking contract"
                            },
                            "id": 1376,
                            "name": "Literal",
                            "src": "559:54:4"
                          }
                        ],
                        "id": 1377,
                        "name": "FunctionCall",
                        "src": "514:100:4"
                      }
                    ],
                    "id": 1378,
                    "name": "ExpressionStatement",
                    "src": "514:100:4"
                  },
                  {
                    "id": 1379,
                    "name": "PlaceholderStatement",
                    "src": "624:1:4"
                  }
                ],
                "id": 1380,
                "name": "Block",
                "src": "504:128:4"
              }
            ],
            "id": 1381,
            "name": "ModifierDefinition",
            "src": "481:151:4"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 1479,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 1424,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1346,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 1382,
                        "name": "UserDefinedTypeName",
                        "src": "660:17:4"
                      }
                    ],
                    "id": 1383,
                    "name": "VariableDeclaration",
                    "src": "660:36:4"
                  }
                ],
                "id": 1384,
                "name": "ParameterList",
                "src": "659:38:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1387,
                "name": "ParameterList",
                "src": "717:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7303,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1385,
                    "name": "Identifier",
                    "src": "707:9:4"
                  }
                ],
                "id": 1386,
                "name": "ModifierInvocation",
                "src": "707:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1363,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 1388,
                            "name": "Identifier",
                            "src": "727:17:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1383,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 1389,
                            "name": "Identifier",
                            "src": "747:18:4"
                          }
                        ],
                        "id": 1390,
                        "name": "Assignment",
                        "src": "727:38:4"
                      }
                    ],
                    "id": 1391,
                    "name": "ExpressionStatement",
                    "src": "727:38:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1365,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 1392,
                            "name": "Identifier",
                            "src": "784:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9500,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1393,
                                "name": "Identifier",
                                "src": "795:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1276,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1383,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1394,
                                        "name": "Identifier",
                                        "src": "802:18:4"
                                      }
                                    ],
                                    "id": 1395,
                                    "name": "MemberAccess",
                                    "src": "802:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1187,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1383,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1396,
                                            "name": "Identifier",
                                            "src": "833:18:4"
                                          }
                                        ],
                                        "id": 1397,
                                        "name": "MemberAccess",
                                        "src": "833:29:4"
                                      }
                                    ],
                                    "id": 1398,
                                    "name": "FunctionCall",
                                    "src": "833:31:4"
                                  }
                                ],
                                "id": 1399,
                                "name": "FunctionCall",
                                "src": "802:63:4"
                              }
                            ],
                            "id": 1400,
                            "name": "FunctionCall",
                            "src": "795:71:4"
                          }
                        ],
                        "id": 1401,
                        "name": "Assignment",
                        "src": "784:82:4"
                      }
                    ],
                    "id": 1402,
                    "name": "ExpressionStatement",
                    "src": "784:82:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1367,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 1403,
                            "name": "Identifier",
                            "src": "876:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9500,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1404,
                                "name": "Identifier",
                                "src": "887:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1276,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1383,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1405,
                                        "name": "Identifier",
                                        "src": "894:18:4"
                                      }
                                    ],
                                    "id": 1406,
                                    "name": "MemberAccess",
                                    "src": "894:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1195,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1383,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1407,
                                            "name": "Identifier",
                                            "src": "925:18:4"
                                          }
                                        ],
                                        "id": 1408,
                                        "name": "MemberAccess",
                                        "src": "925:29:4"
                                      }
                                    ],
                                    "id": 1409,
                                    "name": "FunctionCall",
                                    "src": "925:31:4"
                                  }
                                ],
                                "id": 1410,
                                "name": "FunctionCall",
                                "src": "894:63:4"
                              }
                            ],
                            "id": 1411,
                            "name": "FunctionCall",
                            "src": "887:71:4"
                          }
                        ],
                        "id": 1412,
                        "name": "Assignment",
                        "src": "876:82:4"
                      }
                    ],
                    "id": 1413,
                    "name": "ExpressionStatement",
                    "src": "876:82:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1369,
                              "type": "address",
                              "value": "bmiDaiStakingAddress"
                            },
                            "id": 1414,
                            "name": "Identifier",
                            "src": "968:20:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "getContract",
                                  "referencedDeclaration": 1276,
                                  "type": "function (string memory) view external returns (address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1383,
                                      "type": "contract ContractsRegistry",
                                      "value": "_contractsRegistry"
                                    },
                                    "id": 1415,
                                    "name": "Identifier",
                                    "src": "991:18:4"
                                  }
                                ],
                                "id": 1416,
                                "name": "MemberAccess",
                                "src": "991:30:4"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "string memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getBMIDAIStakingName",
                                      "referencedDeclaration": 1219,
                                      "type": "function () pure external returns (string memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1383,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1417,
                                        "name": "Identifier",
                                        "src": "1022:18:4"
                                      }
                                    ],
                                    "id": 1418,
                                    "name": "MemberAccess",
                                    "src": "1022:39:4"
                                  }
                                ],
                                "id": 1419,
                                "name": "FunctionCall",
                                "src": "1022:41:4"
                              }
                            ],
                            "id": 1420,
                            "name": "FunctionCall",
                            "src": "991:73:4"
                          }
                        ],
                        "id": 1421,
                        "name": "Assignment",
                        "src": "968:96:4"
                      }
                    ],
                    "id": 1422,
                    "name": "ExpressionStatement",
                    "src": "968:96:4"
                  }
                ],
                "id": 1423,
                "name": "Block",
                "src": "717:354:4"
              }
            ],
            "id": 1424,
            "name": "FunctionDefinition",
            "src": "638:433:4"
          },
          {
            "attributes": {
              "functionSelector": "5d3581cd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveAllDAITokensForStakingWithdrowal",
              "scope": 1479,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1425,
                "name": "ParameterList",
                "src": "1125:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1428,
                "name": "ParameterList",
                "src": "1149:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1381,
                      "type": "modifier ()",
                      "value": "onlyStaking"
                    },
                    "id": 1426,
                    "name": "Identifier",
                    "src": "1137:11:4"
                  }
                ],
                "id": 1427,
                "name": "ModifierInvocation",
                "src": "1137:11:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1430
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1443,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1429,
                            "name": "ElementaryTypeName",
                            "src": "1159:4:4"
                          }
                        ],
                        "id": 1430,
                        "name": "VariableDeclaration",
                        "src": "1159:12:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 9469,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1365,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 1431,
                                "name": "Identifier",
                                "src": "1174:8:4"
                              }
                            ],
                            "id": 1432,
                            "name": "MemberAccess",
                            "src": "1174:16:4"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6950,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 1433,
                                "name": "Identifier",
                                "src": "1191:10:4"
                              }
                            ],
                            "id": 1434,
                            "name": "FunctionCall",
                            "src": "1191:12:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1361,
                              "type": "uint256",
                              "value": "MAX_INT"
                            },
                            "id": 1435,
                            "name": "Identifier",
                            "src": "1205:7:4"
                          }
                        ],
                        "id": 1436,
                        "name": "FunctionCall",
                        "src": "1174:39:4"
                      }
                    ],
                    "id": 1437,
                    "name": "VariableDeclarationStatement",
                    "src": "1159:54:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                                  "typeString": "literal_string \"Failed to approve DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1438,
                            "name": "Identifier",
                            "src": "1224:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1430,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1439,
                            "name": "Identifier",
                            "src": "1232:7:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f20617070726f76652044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to approve DAI tokens\"",
                              "value": "Failed to approve DAI tokens"
                            },
                            "id": 1440,
                            "name": "Literal",
                            "src": "1241:30:4"
                          }
                        ],
                        "id": 1441,
                        "name": "FunctionCall",
                        "src": "1224:48:4"
                      }
                    ],
                    "id": 1442,
                    "name": "ExpressionStatement",
                    "src": "1224:48:4"
                  }
                ],
                "id": 1443,
                "name": "Block",
                "src": "1149:130:4"
              }
            ],
            "id": 1444,
            "name": "FunctionDefinition",
            "src": "1077:202:4"
          },
          {
            "attributes": {
              "functionSelector": "a2ac7ac6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveAllBMITokensForStakingWithdrowal",
              "scope": 1479,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1445,
                "name": "ParameterList",
                "src": "1333:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1448,
                "name": "ParameterList",
                "src": "1357:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1381,
                      "type": "modifier ()",
                      "value": "onlyStaking"
                    },
                    "id": 1446,
                    "name": "Identifier",
                    "src": "1345:11:4"
                  }
                ],
                "id": 1447,
                "name": "ModifierInvocation",
                "src": "1345:11:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1450
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1463,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1449,
                            "name": "ElementaryTypeName",
                            "src": "1367:4:4"
                          }
                        ],
                        "id": 1450,
                        "name": "VariableDeclaration",
                        "src": "1367:12:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 9469,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1367,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 1451,
                                "name": "Identifier",
                                "src": "1382:8:4"
                              }
                            ],
                            "id": 1452,
                            "name": "MemberAccess",
                            "src": "1382:16:4"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6950,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 1453,
                                "name": "Identifier",
                                "src": "1399:10:4"
                              }
                            ],
                            "id": 1454,
                            "name": "FunctionCall",
                            "src": "1399:12:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1361,
                              "type": "uint256",
                              "value": "MAX_INT"
                            },
                            "id": 1455,
                            "name": "Identifier",
                            "src": "1413:7:4"
                          }
                        ],
                        "id": 1456,
                        "name": "FunctionCall",
                        "src": "1382:39:4"
                      }
                    ],
                    "id": 1457,
                    "name": "VariableDeclarationStatement",
                    "src": "1367:54:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                                  "typeString": "literal_string \"Failed to approve BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1458,
                            "name": "Identifier",
                            "src": "1432:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1450,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1459,
                            "name": "Identifier",
                            "src": "1440:7:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f20617070726f766520424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to approve BMI tokens\"",
                              "value": "Failed to approve BMI tokens"
                            },
                            "id": 1460,
                            "name": "Literal",
                            "src": "1449:30:4"
                          }
                        ],
                        "id": 1461,
                        "name": "FunctionCall",
                        "src": "1432:48:4"
                      }
                    ],
                    "id": 1462,
                    "name": "ExpressionStatement",
                    "src": "1432:48:4"
                  }
                ],
                "id": 1463,
                "name": "Block",
                "src": "1357:130:4"
              }
            ],
            "id": 1464,
            "name": "FunctionDefinition",
            "src": "1285:202:4"
          },
          {
            "attributes": {
              "functionSelector": "f6b15fe6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "getProfit",
              "scope": 1479,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "stakingStartTime",
                      "scope": 1478,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1465,
                        "name": "ElementaryTypeName",
                        "src": "1533:7:4"
                      }
                    ],
                    "id": 1466,
                    "name": "VariableDeclaration",
                    "src": "1533:24:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "stakedDAIAmount",
                      "scope": 1478,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1467,
                        "name": "ElementaryTypeName",
                        "src": "1568:7:4"
                      }
                    ],
                    "id": 1468,
                    "name": "VariableDeclaration",
                    "src": "1568:23:4"
                  }
                ],
                "id": 1469,
                "name": "ParameterList",
                "src": "1523:74:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1478,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1472,
                        "name": "ElementaryTypeName",
                        "src": "1628:7:4"
                      }
                    ],
                    "id": 1473,
                    "name": "VariableDeclaration",
                    "src": "1628:7:4"
                  }
                ],
                "id": 1474,
                "name": "ParameterList",
                "src": "1627:9:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1381,
                      "type": "modifier ()",
                      "value": "onlyStaking"
                    },
                    "id": 1470,
                    "name": "Identifier",
                    "src": "1607:11:4"
                  }
                ],
                "id": 1471,
                "name": "ModifierInvocation",
                "src": "1607:11:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1474
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 1475,
                        "name": "Literal",
                        "src": "1662:1:4"
                      }
                    ],
                    "id": 1476,
                    "name": "Return",
                    "src": "1655:8:4"
                  }
                ],
                "id": 1477,
                "name": "Block",
                "src": "1637:33:4"
              }
            ],
            "id": 1478,
            "name": "FunctionDefinition",
            "src": "1505:165:4"
          }
        ],
        "id": 1479,
        "name": "ContractDefinition",
        "src": "237:1435:4"
      }
    ],
    "id": 1480,
    "name": "SourceUnit",
    "src": "32:1640:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "1611837765988": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x99a24f09AA1f0405049b5E49E0761Ed740D80F1B",
      "transactionHash": "0xbb3a50934b18bfbf4836ede3303796c6c927e1ff80c96caa1562ba549a77b5f0"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-28T13:35:33.577Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}