{
  "contractName": "DefiYieldGenerator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bmiDaiStaking",
      "outputs": [
        {
          "internalType": "contract IBmiDaiStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveAllDaiTokensForStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveAllBMITokensForStakingWithdrowal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "updateProfitBMITokensFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveAllBMITokensForStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveAllDaiTokensForStakingWithdrowal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiDaiStaking\",\"outputs\":[{\"internalType\":\"contract IBmiDaiStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"updateProfitBMITokensFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":\"DefiYieldGenerator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0xb8225305e29d5f75bade2c49c113bda3f3490507e0fc2045a55903f78c65433a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d74fb8143d515fbafcb3a3796bb43538f22789b7bfb737ec3201adb9c9be4435\",\"dweb:/ipfs/QmZFNDkbzQAELkX6CGBRk7MFGGTmm94Xi52PyNWUTiyz7e\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0x52531d7de8a1ff5ba1b9400b21b48ac7702a1f36e1eb4bdb00d6fe71ee8a0f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae8e3ce77eaf3324302fa6f29f5eb5fcebef4ea059d5d5aad9b40b61c34bdf96\",\"dweb:/ipfs/QmV2QJAc9JbYLHjVkPcCNJSNscaBiKB6RuMbVFTH8m1W6D\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IBmiDaiStaking.sol\":{\"keccak256\":\"0x34502897414f2a033f6b63a1ab6bfd0bf95d28a0b96ad8e1f20c7c8298882115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd54b297c8662239c9a8115c07144b2176518394dde5b8b90e55a9873b2af63e\",\"dweb:/ipfs/QmZrzbwxnkCxB9ifW8KqZL95Mw3UEgJQBsXdCWaW26JmCV\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x783163967130219e112777f0f5a42e1bdafad6f8ef31c14a559f4e3880ef7e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb53118a776b2e05e349de00b8a9b0c62b6d1e59e6160e298e3b176b70ebcca\",\"dweb:/ipfs/QmQw8yc7Y4CmJzBs5N49N6JAkoKgCzMLweHSrngmhKhqCw\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x5dffaaf6e0ece56b03c76eb5d57e758485fc2cca0c46913a2ee2135a5c518493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2aca8141f40390bbd21022d61fac04651cb3ff91dc7702c2654d36d79b188c\",\"dweb:/ipfs/Qmf6xXSP2yasVTD9RaG1rgnY85bPCAtNnBsXxzA1bvHgJa\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b61118f8061007d6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a2ac7ac611610081578063d77379f11161005b578063d77379f11461013c578063d98d0c7e14610144578063f2fde38b1461014c576100c9565b8063a2ac7ac614610119578063be22f54614610121578063d0a43afd14610129576100c9565b8063537a436e116100b2578063537a436e146100eb578063715018a6146101095780638da5cb5b14610111576100c9565b806318022438146100ce578063333399bc146100e3575b600080fd5b6100e16100dc366004610fac565b61015f565b005b6100e161028a565b6100f3610430565b6040516101009190610fc4565b60405180910390f35b6100e161044c565b6100f361054c565b6100e1610568565b6100f3610702565b6100e1610137366004610e31565b61071e565b6100f3610c27565b6100f3610c43565b6100e161015a366004610e31565b610c5f565b610167610df3565b600480546040517f076befe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163076befe7916101bc918691016110ca565b60806040518083038186803b1580156101d457600080fd5b505afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190610f45565b60045490915073ffffffffffffffffffffffffffffffffffffffff1663cc1993918361023784610de9565b6040518363ffffffff1660e01b81526004016102549291906110d3565b600060405180830381600087803b15801561026e57600080fd5b505af1158015610282573d6000803e3d6000fd5b505050505050565b610292610def565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461031b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600254600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b393610399939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610fe5565b602060405180830381600087803b1580156103b357600080fd5b505af11580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610e70565b90508061042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061105c565b60405180910390fd5b50565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b610454610def565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146104dd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b610570610def565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146105f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600354600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b393610677939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610fe5565b602060405180830381600087803b15801561069157600080fd5b505af11580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c99190610e70565b90508061042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042490611093565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b610726610def565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146107af57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561084957600080fd5b505afa15801561085d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108a39190810190610e90565b6040518263ffffffff1660e01b81526004016108bf919061100b565b60206040518083038186803b1580156108d757600080fd5b505afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190610e54565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b1580156109b157600080fd5b505afa1580156109c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a0b9190810190610e90565b6040518263ffffffff1660e01b8152600401610a27919061100b565b60206040518083038186803b158015610a3f57600080fd5b505afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a779190610e54565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff16633d2886a06040518163ffffffff1660e01b815260040160006040518083038186803b158015610b1957600080fd5b505afa158015610b2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b739190810190610e90565b6040518263ffffffff1660e01b8152600401610b8f919061100b565b60206040518083038186803b158015610ba757600080fd5b505afa158015610bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdf9190610e54565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b610c67610def565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610cf057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610d5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806111346026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50600090565b3390565b60405180608001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600060208284031215610e42578081fd5b8135610e4d81611111565b9392505050565b600060208284031215610e65578081fd5b8151610e4d81611111565b600060208284031215610e81578081fd5b81518015158114610e4d578182fd5b600060208284031215610ea1578081fd5b815167ffffffffffffffff80821115610eb8578283fd5b818401915084601f830112610ecb578283fd5b815181811115610ed757fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610f1357fe5b604052818152838201602001871015610f2a578485fd5b610f3b8260208301602087016110e1565b9695505050505050565b600060808284031215610f56578081fd5b6040516080810181811067ffffffffffffffff82111715610f7357fe5b806040525082518152602083015160208201526040830151610f9481611111565b60408201526060928301519281019290925250919050565b600060208284031215610fbd578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600060208252825180602084015261102a8160408501602087016110e1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252601c908201527f4661696c656420746f20617070726f76652044414920746f6b656e7300000000604082015260600190565b6020808252601c908201527f4661696c656420746f20617070726f766520424d4920746f6b656e7300000000604082015260600190565b90815260200190565b918252602082015260400190565b60005b838110156110fc5781810151838201526020016110e4565b8381111561110b576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461042d57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220859952bc78b2b5643ff278d60915ce649080a8af6156b74a66be3579d372ad8664736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a2ac7ac611610081578063d77379f11161005b578063d77379f11461013c578063d98d0c7e14610144578063f2fde38b1461014c576100c9565b8063a2ac7ac614610119578063be22f54614610121578063d0a43afd14610129576100c9565b8063537a436e116100b2578063537a436e146100eb578063715018a6146101095780638da5cb5b14610111576100c9565b806318022438146100ce578063333399bc146100e3575b600080fd5b6100e16100dc366004610fac565b61015f565b005b6100e161028a565b6100f3610430565b6040516101009190610fc4565b60405180910390f35b6100e161044c565b6100f361054c565b6100e1610568565b6100f3610702565b6100e1610137366004610e31565b61071e565b6100f3610c27565b6100f3610c43565b6100e161015a366004610e31565b610c5f565b610167610df3565b600480546040517f076befe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169163076befe7916101bc918691016110ca565b60806040518083038186803b1580156101d457600080fd5b505afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c9190610f45565b60045490915073ffffffffffffffffffffffffffffffffffffffff1663cc1993918361023784610de9565b6040518363ffffffff1660e01b81526004016102549291906110d3565b600060405180830381600087803b15801561026e57600080fd5b505af1158015610282573d6000803e3d6000fd5b505050505050565b610292610def565b60005473ffffffffffffffffffffffffffffffffffffffff90811691161461031b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600254600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b393610399939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610fe5565b602060405180830381600087803b1580156103b357600080fd5b505af11580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190610e70565b90508061042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061105c565b60405180910390fd5b50565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b610454610def565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146104dd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b610570610def565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146105f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600354600480546040517f095ea7b300000000000000000000000000000000000000000000000000000000815260009373ffffffffffffffffffffffffffffffffffffffff9081169363095ea7b393610677939216917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9101610fe5565b602060405180830381600087803b15801561069157600080fd5b505af11580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c99190610e70565b90508061042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042490611093565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b610726610def565b60005473ffffffffffffffffffffffffffffffffffffffff9081169116146107af57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561084957600080fd5b505afa15801561085d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108a39190810190610e90565b6040518263ffffffff1660e01b81526004016108bf919061100b565b60206040518083038186803b1580156108d757600080fd5b505afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190610e54565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b1580156109b157600080fd5b505afa1580156109c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a0b9190810190610e90565b6040518263ffffffff1660e01b8152600401610a27919061100b565b60206040518083038186803b158015610a3f57600080fd5b505afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a779190610e54565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663358177738273ffffffffffffffffffffffffffffffffffffffff16633d2886a06040518163ffffffff1660e01b815260040160006040518083038186803b158015610b1957600080fd5b505afa158015610b2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b739190810190610e90565b6040518263ffffffff1660e01b8152600401610b8f919061100b565b60206040518083038186803b158015610ba757600080fd5b505afa158015610bbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdf9190610e54565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905550565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b610c67610def565b60005473ffffffffffffffffffffffffffffffffffffffff908116911614610cf057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8116610d5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806111346026913960400191505060405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50600090565b3390565b60405180608001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600060208284031215610e42578081fd5b8135610e4d81611111565b9392505050565b600060208284031215610e65578081fd5b8151610e4d81611111565b600060208284031215610e81578081fd5b81518015158114610e4d578182fd5b600060208284031215610ea1578081fd5b815167ffffffffffffffff80821115610eb8578283fd5b818401915084601f830112610ecb578283fd5b815181811115610ed757fe5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610f1357fe5b604052818152838201602001871015610f2a578485fd5b610f3b8260208301602087016110e1565b9695505050505050565b600060808284031215610f56578081fd5b6040516080810181811067ffffffffffffffff82111715610f7357fe5b806040525082518152602083015160208201526040830151610f9481611111565b60408201526060928301519281019290925250919050565b600060208284031215610fbd578081fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600060208252825180602084015261102a8160408501602087016110e1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6020808252601c908201527f4661696c656420746f20617070726f76652044414920746f6b656e7300000000604082015260600190565b6020808252601c908201527f4661696c656420746f20617070726f766520424d4920746f6b656e7300000000604082015260600190565b90815260200190565b918252602082015260400190565b60005b838110156110fc5781810151838201526020016110e4565b8381111561110b576000848401525b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461042d57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220859952bc78b2b5643ff278d60915ce649080a8af6156b74a66be3579d372ad8664736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6304:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:37",
                "type": ""
              }
            ],
            "src": "14:259:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:37",
                "type": ""
              }
            ],
            "src": "278:263:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "624:219:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "679:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "687:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "672:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "645:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "637:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "634:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "705:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "718:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "709:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "787:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "796:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "804:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "789:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "789:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "789:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "756:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:5:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:6:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:13:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "763:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "763:21:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "753:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "753:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "746:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:40:37"
                  },
                  "nodeType": "YulIf",
                  "src": "743:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "822:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "832:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "822:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:37",
                "type": ""
              }
            ],
            "src": "546:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "954:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1025:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1051:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1038:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1038:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1029:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1097:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1070:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1070:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1070:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1112:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1122:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1112:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1206",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:37",
                "type": ""
              }
            ],
            "src": "848:285:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:868:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1275:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1284:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1292:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1277:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1277:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1250:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1259:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1271:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1310:30:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1330:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1324:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:16:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1314:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1349:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1359:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1353:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1404:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1413:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1421:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1406:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1406:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1406:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1400:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1389:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1386:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1439:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1453:9:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1464:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1449:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:22:37"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1443:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1519:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1528:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1536:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1498:2:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1502:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:13:37"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1509:7:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1490:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1490:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1480:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1554:23:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1574:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1568:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:9:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1558:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1604:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1606:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1606:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1592:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1600:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1589:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1586:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1626:23:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1640:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:9:37"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1630:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1658:130:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1684:6:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1700:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1708:4:37",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:17:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1715:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1692:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1692:90:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1680:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:103:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1785:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1676:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1676:112:37"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1662:10:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1847:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "1849:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1849:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1849:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1806:10:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1818:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1803:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1803:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1826:10:37"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1823:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1800:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:46:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1797:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1876:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1880:10:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1869:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1869:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1907:6:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1915:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1900:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:22:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1972:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1981:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1989:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1974:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1974:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1974:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1945:2:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1949:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1941:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1941:15:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1958:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1937:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1963:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1934:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:37:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1931:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2033:2:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2037:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2029:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:11:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2046:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2054:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:15:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2059:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2007:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2075:16:37",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2085:6:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1195:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1206:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1218:6:37",
                "type": ""
              }
            ],
            "src": "1138:959:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2212:585:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2259:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2268:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2276:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2261:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2261:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2261:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2233:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2242:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2229:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2229:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2254:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2225:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2225:33:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2222:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2294:23:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2314:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2308:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:9:37"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2298:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2326:34:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2348:6:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2356:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2344:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:16:37"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2330:10:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2435:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2437:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2437:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2437:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2378:10:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2390:18:37",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2375:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:34:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2414:10:37"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2426:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2411:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2411:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2372:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:62:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2369:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2464:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2468:10:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2495:6:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2509:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2503:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2503:16:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2488:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2488:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2488:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2540:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2548:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2536:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2536:15:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2563:9:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2574:2:37",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2559:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2559:18:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2553:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2553:25:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2529:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2529:50:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2529:50:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2588:38:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2611:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2622:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2601:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2601:25:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2592:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2662:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2635:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2635:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2635:33:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2688:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2696:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2684:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2684:15:37"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2701:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2677:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2677:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2677:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2727:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2735:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2723:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2723:15:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2750:9:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2761:2:37",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2746:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2746:18:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2740:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2740:25:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2716:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:50:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2716:50:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2775:16:37",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2785:6:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2775:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_StakingInfo_$2844_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2178:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2189:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2201:6:37",
                "type": ""
              }
            ],
            "src": "2102:695:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2872:120:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2918:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2927:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2935:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2920:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2920:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2920:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2893:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2902:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2889:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2889:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2914:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2885:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2882:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2953:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2976:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2963:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2963:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2838:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2849:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2861:6:37",
                "type": ""
              }
            ],
            "src": "2802:190:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3098:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3108:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3120:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3131:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3116:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3116:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3108:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3150:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3165:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3173:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3161:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3161:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3143:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3143:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3143:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3067:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3078:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3089:4:37",
                "type": ""
              }
            ],
            "src": "2997:226:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3357:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3367:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3379:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3390:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3375:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3367:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3409:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3424:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3432:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3420:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3420:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3402:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3402:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3402:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3496:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3507:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3492:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3492:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3512:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3485:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3485:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3485:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3318:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3329:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3337:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3348:4:37",
                "type": ""
              }
            ],
            "src": "3228:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3657:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3667:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3679:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3690:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3675:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3675:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3667:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3709:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3724:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3720:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3702:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1206__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3626:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3637:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3648:4:37",
                "type": ""
              }
            ],
            "src": "3530:252:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3911:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3921:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3933:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3944:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3929:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3929:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3921:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3963:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3978:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3986:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3974:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3974:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3956:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3956:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3956:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IBmiDaiStaking_$2876__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3880:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3891:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3902:4:37",
                "type": ""
              }
            ],
            "src": "3787:249:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4157:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4167:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4179:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4190:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4175:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4175:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4167:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4209:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4224:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4232:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4220:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4220:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4202:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4202:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4202:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$6274__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4126:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4137:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4148:4:37",
                "type": ""
              }
            ],
            "src": "4041:241:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4408:321:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4425:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4436:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4418:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4418:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4448:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4468:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4462:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4462:13:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4452:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4495:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4506:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4491:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4491:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4511:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4484:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4484:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4553:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4561:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4549:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4549:15:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4570:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4581:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4566:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4566:18:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4586:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4527:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4527:66:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4527:66:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4602:121:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4618:9:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4637:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4645:2:37",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4633:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4633:15:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4650:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4629:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4629:88:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4614:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4614:104:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4720:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4610:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4610:113:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4602:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4377:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4388:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4399:4:37",
                "type": ""
              }
            ],
            "src": "4287:442:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4908:178:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4925:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4936:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4918:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4918:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4959:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4970:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4955:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4955:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4975:2:37",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4948:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4948:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4948:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4998:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5009:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5014:30:37",
                        "type": "",
                        "value": "Failed to approve DAI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4987:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4987:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4987:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5054:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5066:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5077:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5062:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5062:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5054:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4885:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4899:4:37",
                "type": ""
              }
            ],
            "src": "4734:352:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5265:178:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5282:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5293:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5275:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5275:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5275:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5316:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5327:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5312:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5312:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5332:2:37",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5305:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5305:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5305:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5355:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5366:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5351:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5351:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5371:30:37",
                        "type": "",
                        "value": "Failed to approve BMI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5344:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5344:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5411:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5423:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5434:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5419:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5419:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5411:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5242:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5256:4:37",
                "type": ""
              }
            ],
            "src": "5091:352:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5549:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5559:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5571:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5582:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5567:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5559:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5601:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5612:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5594:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5594:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5594:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5518:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5529:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5540:4:37",
                "type": ""
              }
            ],
            "src": "5448:177:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5759:119:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5769:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5781:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5792:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5777:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5777:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5769:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5811:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5822:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5804:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5804:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5849:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5860:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5845:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5845:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5865:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5838:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5838:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5838:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5720:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5731:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5739:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5750:4:37",
                "type": ""
              }
            ],
            "src": "5630:248:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:205:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5946:10:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5955:1:37",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5950:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6015:63:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6040:3:37"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6045:1:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6036:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6036:11:37"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6059:3:37"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6064:1:37"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6055:3:37"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6055:11:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6049:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6049:18:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6029:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6029:39:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6029:39:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5976:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5979:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5973:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5973:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5987:19:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5989:15:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5998:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6001:2:37",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5994:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5994:10:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5989:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5969:3:37",
                    "statements": []
                  },
                  "src": "5965:113:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6104:31:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6117:3:37"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6122:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6113:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6113:16:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6131:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6106:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6106:27:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6106:27:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6093:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6096:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6090:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6090:13:37"
                  },
                  "nodeType": "YulIf",
                  "src": "6087:2:37"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5914:3:37",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5919:3:37",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5924:6:37",
                "type": ""
              }
            ],
            "src": "5883:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6193:109:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6280:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6289:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6292:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6282:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6282:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6282:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6216:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6227:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6234:42:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6223:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6223:54:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6213:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6213:65:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6206:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6206:73:37"
                  },
                  "nodeType": "YulIf",
                  "src": "6203:2:37"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6182:5:37",
                "type": ""
              }
            ],
            "src": "6146:156:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1206(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_2)\n        if gt(length, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_struct$_StakingInfo_$2844_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 128)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, mload(headStart))\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n        let value := mload(add(headStart, 64))\n        validator_revert_t_address(value)\n        mstore(add(memPtr, 64), value)\n        mstore(add(memPtr, 96), mload(add(headStart, 96)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1206__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IBmiDaiStaking_$2876__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$6274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to approve DAI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Failed to approve BMI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "280:1590:4:-:0;;;;;;;;;;;;-1:-1:-1;882:17:23;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:23;-1:-1:-1;;;;;924:18:23;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:23;957:43;;924:6;;957:43;848:159;280:1590:4;;598:104:21;685:10;598:104;:::o;280:1590:4:-;;;;;;;",
  "deployedSourceMap": "280:1590:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:303;;;;;;:::i;:::-;;:::i;:::-;;972:210;;;:::i;482:35::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1706:145:23;;;:::i;1083:77::-;;;:::i;1188:210:4:-;;;:::i;426:22::-;;;:::i;524:442::-;;;;;;:::i;:::-;;:::i;454:22::-;;;:::i;377:42::-;;;:::i;2000:240:23:-;;;;;;:::i;:::-;;:::i;1416:303:4:-;1538:45;;:::i;:::-;1586:13;;;:46;;;;;:13;;;;;:37;;:46;;1624:7;;1586:46;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1643:13;;1538:94;;-1:-1:-1;1643:13:4;;:31;1675:7;1684:27;1538:94;1684:14;:27::i;:::-;1643:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:303;;:::o;972:210::-;1297:12:23;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:8:4::1;::::0;1092:13:::1;::::0;;1067:49:::1;::::0;;;;1052:12:::1;::::0;1067:8:::1;::::0;;::::1;::::0;:16:::1;::::0;:49:::1;::::0;1092:13;::::1;::::0;360:10:::1;::::0;1067:49:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1052:64;;1135:7;1127:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1356:1:23;972:210:4:o:0;482:35::-;;;;;;:::o;1706:145:23:-;1297:12;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;::::1;1796:6:::0;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;;::::1;::::0;;1706:145::o;1083:77::-;1121:7;1147:6;;;1083:77;:::o;1188:210:4:-;1297:12:23;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:8:4::1;::::0;1308:13:::1;::::0;;1283:49:::1;::::0;;;;1268:12:::1;::::0;1283:8:::1;::::0;;::::1;::::0;:16:::1;::::0;:49:::1;::::0;1308:13;::::1;::::0;360:10:::1;::::0;1283:49:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1268:64;;1351:7;1343:48;;;;;;;;;;;;:::i;426:22::-:0;;;;;;:::o;524:442::-;1297:12:23;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:17:4::1;:38:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;719:31:::1;::::0;;;;;;;688:30:::1;::::0;613:38;;719:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;719:31:4;;;;;;;;613:38;719:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;688:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;670:8;;:82;;;;;;;;;;;;;;;;;;780:18;:30;;;811:18;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;780:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;762:8;;:82;;;;;;;;;;;;;;;;;;885:18;:30;;;916:18;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;885:73;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;854:13;:105:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;524:442:4:o;454:22::-;;;;;;:::o;377:42::-;;;;;;:::o;2000:240:23:-;1297:12;:10;:12::i;:::-;1287:6;;:22;:6;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2088:22:::1;::::0;::::1;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;::::1;::::0;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2000:240::o;1733:135:4:-;-1:-1:-1;1826:7:4;;1733:135::o;598:104:21:-;685:10;598:104;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:259:37:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:37:o;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:297::-;;666:2;654:9;645:7;641:23;637:32;634:2;;;687:6;679;672:22;634:2;724:9;718:16;777:5;770:13;763:21;756:5;753:32;743:2;;804:6;796;789:22;1138:959;;1271:2;1259:9;1250:7;1246:23;1242:32;1239:2;;;1292:6;1284;1277:22;1239:2;1330:9;1324:16;1359:18;1400:2;1392:6;1389:14;1386:2;;;1421:6;1413;1406:22;1386:2;1464:6;1453:9;1449:22;1439:32;;1509:7;1502:4;1498:2;1494:13;1490:27;1480:2;;1536:6;1528;1521:22;1480:2;1574;1568:9;1600:2;1592:6;1589:14;1586:2;;;1606:9;1586:2;1646;1640:9;1785:2;1715:66;1708:4;1700:6;1696:17;1692:90;1684:6;1680:103;1676:112;1838:6;1826:10;1823:22;1818:2;1806:10;1803:18;1800:46;1797:2;;;1849:9;1797:2;1876;1869:22;1900;;;1941:15;;;1958:2;1937:24;1934:37;-1:-1:-1;1931:2:37;;;1989:6;1981;1974:22;1931:2;2007:59;2059:6;2054:2;2046:6;2042:15;2037:2;2033;2029:11;2007:59;:::i;:::-;2085:6;1229:868;-1:-1:-1;;;;;;1229:868:37:o;2102:695::-;;2254:3;2242:9;2233:7;2229:23;2225:33;2222:2;;;2276:6;2268;2261:22;2222:2;2314;2308:9;2356:3;2348:6;2344:16;2426:6;2414:10;2411:22;2390:18;2378:10;2375:34;2372:62;2369:2;;;2437:9;2369:2;2468:10;2464:2;2457:22;;2509:9;2503:16;2495:6;2488:32;2574:2;2563:9;2559:18;2553:25;2548:2;2540:6;2536:15;2529:50;2622:2;2611:9;2607:18;2601:25;2635:33;2662:5;2635:33;:::i;:::-;2696:2;2684:15;;2677:30;2761:2;2746:18;;;2740:25;2723:15;;;2716:50;;;;-1:-1:-1;2688:6:37;2212:585;-1:-1:-1;2212:585:37:o;2802:190::-;;2914:2;2902:9;2893:7;2889:23;2885:32;2882:2;;;2935:6;2927;2920:22;2882:2;-1:-1:-1;2963:23:37;;2872:120;-1:-1:-1;2872:120:37:o;2997:226::-;3173:42;3161:55;;;;3143:74;;3131:2;3116:18;;3098:125::o;3228:297::-;3432:42;3420:55;;;;3402:74;;3507:2;3492:18;;3485:34;3390:2;3375:18;;3357:168::o;4287:442::-;;4436:2;4425:9;4418:21;4468:6;4462:13;4511:6;4506:2;4495:9;4491:18;4484:34;4527:66;4586:6;4581:2;4570:9;4566:18;4561:2;4553:6;4549:15;4527:66;:::i;:::-;4645:2;4633:15;4650:66;4629:88;4614:104;;;;4720:2;4610:113;;4408:321;-1:-1:-1;;4408:321:37:o;4734:352::-;4936:2;4918:21;;;4975:2;4955:18;;;4948:30;5014;5009:2;4994:18;;4987:58;5077:2;5062:18;;4908:178::o;5091:352::-;5293:2;5275:21;;;5332:2;5312:18;;;5305:30;5371;5366:2;5351:18;;5344:58;5434:2;5419:18;;5265:178::o;5448:177::-;5594:25;;;5582:2;5567:18;;5549:76::o;5630:248::-;5804:25;;;5860:2;5845:18;;5838:34;5792:2;5777:18;;5759:119::o;5883:258::-;5955:1;5965:113;5979:6;5976:1;5973:13;5965:113;;;6055:11;;;6049:18;6036:11;;;6029:39;6001:2;5994:10;5965:113;;;6096:6;6093:1;6090:13;6087:2;;;6131:1;6122:6;6117:3;6113:16;6106:27;6087:2;;5936:205;;;:::o;6146:156::-;6234:42;6227:5;6223:54;6216:5;6213:65;6203:2;;6292:1;6289;6282:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./interfaces/IBmiDaiStaking.sol\";\n\nimport \"./ContractsRegistry.sol\";\n\ncontract DefiYieldGenerator is Ownable {\n    uint256 constant private MAX_INT = 2**256 - 1;\n\n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    IBmiDaiStaking public bmiDaiStaking;\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n        \n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        bmiDaiStaking = IBmiDaiStaking(_contractsRegistry.getContract(_contractsRegistry.getBmiDAIStakingName()));\n    }\n\n    function approveAllDaiTokensForStakingWithdrowal() external onlyOwner {\n        bool success = daiToken.approve(address(bmiDaiStaking), MAX_INT);\n\n        require(success, \"Failed to approve DAI tokens\");\n    }\n\n    function approveAllBMITokensForStakingWithdrowal() external onlyOwner {\n        bool success = bmiToken.approve(address(bmiDaiStaking), MAX_INT);\n\n        require(success, \"Failed to approve BMI tokens\");\n    }\n    \n// TODO\n    function updateProfitBMITokensFor(uint256 tokenID) external {\n        // Add bmi tokens to this address, then =>\n\n        IBmiDaiStaking.StakingInfo memory stakingInfo = bmiDaiStaking.getStakingInfoByTokenID(tokenID);\n\n        bmiDaiStaking.increaseBmiProfit(tokenID, generateProfit(stakingInfo));\n    }\n\n// TODO\n    function generateProfit(IBmiDaiStaking.StakingInfo memory stakingInfo) private pure returns (uint256) {        \n        return 0;\n    }\n}",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
    "exportedSymbols": {
      "AccessControl": [
        5068
      ],
      "Address": [
        6731
      ],
      "Context": [
        4785
      ],
      "ContractsRegistry": [
        1206
      ],
      "DefiYieldGenerator": [
        1354
      ],
      "EnumerableSet": [
        7666
      ],
      "IBmiDaiStaking": [
        2876
      ],
      "IERC20": [
        6274
      ],
      "IPolicyBook": [
        3036
      ],
      "IPolicyBookFabric": [
        3085
      ],
      "Ownable": [
        5177
      ]
    },
    "id": 1355,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1208,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "id": 1209,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1210,
        "nodeType": "ImportDirective",
        "scope": 1355,
        "sourceUnit": 5178,
        "src": "91:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1211,
        "nodeType": "ImportDirective",
        "scope": 1355,
        "sourceUnit": 6275,
        "src": "144:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IBmiDaiStaking.sol",
        "file": "./interfaces/IBmiDaiStaking.sol",
        "id": 1212,
        "nodeType": "ImportDirective",
        "scope": 1355,
        "sourceUnit": 2877,
        "src": "202:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 1213,
        "nodeType": "ImportDirective",
        "scope": 1355,
        "sourceUnit": 1207,
        "src": "245:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1214,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5177,
              "src": "311:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5177",
                "typeString": "contract Ownable"
              }
            },
            "id": 1215,
            "nodeType": "InheritanceSpecifier",
            "src": "311:7:4"
          }
        ],
        "contractDependencies": [
          4785,
          5177
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1354,
        "linearizedBaseContracts": [
          1354,
          5177,
          4785
        ],
        "name": "DefiYieldGenerator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1222,
            "mutability": "constant",
            "name": "MAX_INT",
            "nodeType": "VariableDeclaration",
            "scope": 1354,
            "src": "325:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1216,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "325:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 1221,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 1219,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "32",
                  "id": 1217,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "360:1:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "323536",
                  "id": 1218,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "363:3:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "360:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "31",
                "id": 1220,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "369:1:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "360:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 1224,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 1354,
            "src": "377:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 1223,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1206,
              "src": "377:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 1226,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1354,
            "src": "426:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1225,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6274,
              "src": "426:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 1228,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 1354,
            "src": "454:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1227,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6274,
              "src": "454:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "537a436e",
            "id": 1230,
            "mutability": "mutable",
            "name": "bmiDaiStaking",
            "nodeType": "VariableDeclaration",
            "scope": 1354,
            "src": "482:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
              "typeString": "contract IBmiDaiStaking"
            },
            "typeName": {
              "id": 1229,
              "name": "IBmiDaiStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2876,
              "src": "482:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                "typeString": "contract IBmiDaiStaking"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "603:363:4",
              "statements": [
                {
                  "expression": {
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1237,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "613:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1238,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "633:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "613:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 1240,
                  "nodeType": "ExpressionStatement",
                  "src": "613:38:4"
                },
                {
                  "expression": {
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1241,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1226,
                      "src": "670:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1245,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "719:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1004,
                                "src": "719:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "719:31:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1243,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1232,
                              "src": "688:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "688:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "688:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1242,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6274,
                        "src": "681:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "681:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "670:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "670:82:4"
                },
                {
                  "expression": {
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1252,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1228,
                      "src": "762:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1256,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "811:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1012,
                                "src": "811:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "811:31:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1254,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1232,
                              "src": "780:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "780:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "780:63:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1253,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6274,
                        "src": "773:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "773:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "762:82:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "762:82:4"
                },
                {
                  "expression": {
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1263,
                      "name": "bmiDaiStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "854:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                        "typeString": "contract IBmiDaiStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1267,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "916:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 1268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBmiDAIStakingName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1036,
                                "src": "916:39:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "916:41:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1265,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1232,
                              "src": "885:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 1266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "885:30:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:73:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1264,
                        "name": "IBmiDaiStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2876,
                        "src": "870:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBmiDaiStaking_$2876_$",
                          "typeString": "type(contract IBmiDaiStaking)"
                        }
                      },
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "870:89:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                        "typeString": "contract IBmiDaiStaking"
                      }
                    },
                    "src": "854:105:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                      "typeString": "contract IBmiDaiStaking"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "854:105:4"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 1275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1235,
                "modifierName": {
                  "id": 1234,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5126,
                  "src": "593:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "593:9:4"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "546:36:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1206,
                    "src": "546:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "545:38:4"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "603:0:4"
            },
            "scope": 1354,
            "src": "524:442:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1296,
              "nodeType": "Block",
              "src": "1042:140:4",
              "statements": [
                {
                  "assignments": [
                    1281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1296,
                      "src": "1052:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1052:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1290,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1286,
                            "name": "bmiDaiStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "1092:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                              "typeString": "contract IBmiDaiStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                              "typeString": "contract IBmiDaiStaking"
                            }
                          ],
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1084:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1284,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1084:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1084:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1288,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "1108:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1282,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "1067:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6274",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6243,
                      "src": "1067:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1052:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1292,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "1135:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20617070726f76652044414920746f6b656e73",
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1144:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                          "typeString": "literal_string \"Failed to approve DAI tokens\""
                        },
                        "value": "Failed to approve DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                          "typeString": "literal_string \"Failed to approve DAI tokens\""
                        }
                      ],
                      "id": 1291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1127:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:48:4"
                }
              ]
            },
            "functionSelector": "333399bc",
            "id": 1297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1278,
                "modifierName": {
                  "id": 1277,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5126,
                  "src": "1032:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1032:9:4"
              }
            ],
            "name": "approveAllDaiTokensForStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:4"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1042:0:4"
            },
            "scope": 1354,
            "src": "972:210:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "1258:140:4",
              "statements": [
                {
                  "assignments": [
                    1303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1303,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "1268:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1302,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1312,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1308,
                            "name": "bmiDaiStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "1308:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                              "typeString": "contract IBmiDaiStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                              "typeString": "contract IBmiDaiStaking"
                            }
                          ],
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1300:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1306,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1300:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1300:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1310,
                        "name": "MAX_INT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "1324:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1304,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "1283:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6274",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6243,
                      "src": "1283:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1268:64:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1314,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "1351:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f20617070726f766520424d4920746f6b656e73",
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1360:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                          "typeString": "literal_string \"Failed to approve BMI tokens\""
                        },
                        "value": "Failed to approve BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                          "typeString": "literal_string \"Failed to approve BMI tokens\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1343:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:48:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:48:4"
                }
              ]
            },
            "functionSelector": "a2ac7ac6",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1300,
                "modifierName": {
                  "id": 1299,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5126,
                  "src": "1248:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1248:9:4"
              }
            ],
            "name": "approveAllBMITokensForStakingWithdrowal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:2:4"
            },
            "returnParameters": {
              "id": 1301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:4"
            },
            "scope": 1354,
            "src": "1188:210:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1342,
              "nodeType": "Block",
              "src": "1476:243:4",
              "statements": [
                {
                  "assignments": [
                    1327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "stakingInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "1538:45:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                        "typeString": "struct IBmiDaiStaking.StakingInfo"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "IBmiDaiStaking.StakingInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2844,
                        "src": "1538:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$2844_storage_ptr",
                          "typeString": "struct IBmiDaiStaking.StakingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1332,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1330,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "1624:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1328,
                        "name": "bmiDaiStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1230,
                        "src": "1586:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                          "typeString": "contract IBmiDaiStaking"
                        }
                      },
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStakingInfoByTokenID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2875,
                      "src": "1586:37:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_StakingInfo_$2844_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct IBmiDaiStaking.StakingInfo memory)"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                      "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1538:94:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1336,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "1675:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1338,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1327,
                            "src": "1699:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                              "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                              "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                            }
                          ],
                          "id": 1337,
                          "name": "generateProfit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "1684:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_StakingInfo_$2844_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct IBmiDaiStaking.StakingInfo memory) pure returns (uint256)"
                          }
                        },
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1684:27:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1333,
                        "name": "bmiDaiStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1230,
                        "src": "1643:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                          "typeString": "contract IBmiDaiStaking"
                        }
                      },
                      "id": 1335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseBmiProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2868,
                      "src": "1643:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:69:4"
                }
              ]
            },
            "functionSelector": "18022438",
            "id": 1343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProfitBMITokensFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1343,
                  "src": "1450:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1449:17:4"
            },
            "returnParameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1476:0:4"
            },
            "scope": 1354,
            "src": "1416:303:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1352,
              "nodeType": "Block",
              "src": "1835:33:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1860:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1349,
                  "id": 1351,
                  "nodeType": "Return",
                  "src": "1853:8:4"
                }
              ]
            },
            "id": 1353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "stakingInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1353,
                  "src": "1757:45:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                    "typeString": "struct IBmiDaiStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 1344,
                    "name": "IBmiDaiStaking.StakingInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2844,
                    "src": "1757:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$2844_storage_ptr",
                      "typeString": "struct IBmiDaiStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:47:4"
            },
            "returnParameters": {
              "id": 1349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1348,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1353,
                  "src": "1826:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:9:4"
            },
            "scope": 1354,
            "src": "1733:135:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1355,
        "src": "280:1590:4"
      }
    ],
    "src": "32:1838:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
      "exportedSymbols": {
        "AccessControl": [
          5068
        ],
        "Address": [
          6731
        ],
        "Context": [
          4785
        ],
        "ContractsRegistry": [
          1206
        ],
        "DefiYieldGenerator": [
          1354
        ],
        "EnumerableSet": [
          7666
        ],
        "IBmiDaiStaking": [
          2876
        ],
        "IERC20": [
          6274
        ],
        "IPolicyBook": [
          3036
        ],
        "IPolicyBookFabric": [
          3085
        ],
        "Ownable": [
          5177
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1208,
        "name": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1209,
        "name": "PragmaDirective",
        "src": "56:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 5178,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 1355,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1210,
        "name": "ImportDirective",
        "src": "91:52:4"
      },
      {
        "attributes": {
          "SourceUnit": 6275,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 1355,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1211,
        "name": "ImportDirective",
        "src": "144:56:4"
      },
      {
        "attributes": {
          "SourceUnit": 2877,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IBmiDaiStaking.sol",
          "file": "./interfaces/IBmiDaiStaking.sol",
          "scope": 1355,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1212,
        "name": "ImportDirective",
        "src": "202:41:4"
      },
      {
        "attributes": {
          "SourceUnit": 1207,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 1355,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1213,
        "name": "ImportDirective",
        "src": "245:33:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            4785,
            5177
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1354,
            5177,
            4785
          ],
          "name": "DefiYieldGenerator",
          "scope": 1355
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5177,
                  "type": "contract Ownable"
                },
                "id": 1214,
                "name": "UserDefinedTypeName",
                "src": "311:7:4"
              }
            ],
            "id": 1215,
            "name": "InheritanceSpecifier",
            "src": "311:7:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "MAX_INT",
              "scope": 1354,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1216,
                "name": "ElementaryTypeName",
                "src": "325:7:4"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                    "typeString": "int_const 1157...(70 digits omitted)...9935"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "-",
                  "type": "int_const 1157...(70 digits omitted)...9935"
                },
                "children": [
                  {
                    "attributes": {
                      "commonType": {
                        "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                        "typeString": "int_const 1157...(70 digits omitted)...9936"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "operator": "**",
                      "type": "int_const 1157...(70 digits omitted)...9936"
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "32",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 2",
                          "value": "2"
                        },
                        "id": 1217,
                        "name": "Literal",
                        "src": "360:1:4"
                      },
                      {
                        "attributes": {
                          "hexvalue": "323536",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 256",
                          "value": "256"
                        },
                        "id": 1218,
                        "name": "Literal",
                        "src": "363:3:4"
                      }
                    ],
                    "id": 1219,
                    "name": "BinaryOperation",
                    "src": "360:6:4"
                  },
                  {
                    "attributes": {
                      "hexvalue": "31",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 1",
                      "value": "1"
                    },
                    "id": 1220,
                    "name": "Literal",
                    "src": "369:1:4"
                  }
                ],
                "id": 1221,
                "name": "BinaryOperation",
                "src": "360:10:4"
              }
            ],
            "id": 1222,
            "name": "VariableDeclaration",
            "src": "325:45:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 1354,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1206,
                  "type": "contract ContractsRegistry"
                },
                "id": 1223,
                "name": "UserDefinedTypeName",
                "src": "377:17:4"
              }
            ],
            "id": 1224,
            "name": "VariableDeclaration",
            "src": "377:42:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 1354,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6274,
                  "type": "contract IERC20"
                },
                "id": 1225,
                "name": "UserDefinedTypeName",
                "src": "426:6:4"
              }
            ],
            "id": 1226,
            "name": "VariableDeclaration",
            "src": "426:22:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 1354,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6274,
                  "type": "contract IERC20"
                },
                "id": 1227,
                "name": "UserDefinedTypeName",
                "src": "454:6:4"
              }
            ],
            "id": 1228,
            "name": "VariableDeclaration",
            "src": "454:22:4"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "537a436e",
              "mutability": "mutable",
              "name": "bmiDaiStaking",
              "scope": 1354,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IBmiDaiStaking",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IBmiDaiStaking",
                  "referencedDeclaration": 2876,
                  "type": "contract IBmiDaiStaking"
                },
                "id": 1229,
                "name": "UserDefinedTypeName",
                "src": "482:14:4"
              }
            ],
            "id": 1230,
            "name": "VariableDeclaration",
            "src": "482:35:4"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 1354,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 1275,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1206,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 1231,
                        "name": "UserDefinedTypeName",
                        "src": "546:17:4"
                      }
                    ],
                    "id": 1232,
                    "name": "VariableDeclaration",
                    "src": "546:36:4"
                  }
                ],
                "id": 1233,
                "name": "ParameterList",
                "src": "545:38:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1236,
                "name": "ParameterList",
                "src": "603:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5126,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1234,
                    "name": "Identifier",
                    "src": "593:9:4"
                  }
                ],
                "id": 1235,
                "name": "ModifierInvocation",
                "src": "593:9:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1224,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 1237,
                            "name": "Identifier",
                            "src": "613:17:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1232,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 1238,
                            "name": "Identifier",
                            "src": "633:18:4"
                          }
                        ],
                        "id": 1239,
                        "name": "Assignment",
                        "src": "613:38:4"
                      }
                    ],
                    "id": 1240,
                    "name": "ExpressionStatement",
                    "src": "613:38:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1226,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 1241,
                            "name": "Identifier",
                            "src": "670:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6274,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1242,
                                "name": "Identifier",
                                "src": "681:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1077,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1232,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1243,
                                        "name": "Identifier",
                                        "src": "688:18:4"
                                      }
                                    ],
                                    "id": 1244,
                                    "name": "MemberAccess",
                                    "src": "688:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1004,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1232,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1245,
                                            "name": "Identifier",
                                            "src": "719:18:4"
                                          }
                                        ],
                                        "id": 1246,
                                        "name": "MemberAccess",
                                        "src": "719:29:4"
                                      }
                                    ],
                                    "id": 1247,
                                    "name": "FunctionCall",
                                    "src": "719:31:4"
                                  }
                                ],
                                "id": 1248,
                                "name": "FunctionCall",
                                "src": "688:63:4"
                              }
                            ],
                            "id": 1249,
                            "name": "FunctionCall",
                            "src": "681:71:4"
                          }
                        ],
                        "id": 1250,
                        "name": "Assignment",
                        "src": "670:82:4"
                      }
                    ],
                    "id": 1251,
                    "name": "ExpressionStatement",
                    "src": "670:82:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1228,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 1252,
                            "name": "Identifier",
                            "src": "762:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6274,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1253,
                                "name": "Identifier",
                                "src": "773:6:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1077,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1232,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1254,
                                        "name": "Identifier",
                                        "src": "780:18:4"
                                      }
                                    ],
                                    "id": 1255,
                                    "name": "MemberAccess",
                                    "src": "780:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1012,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1232,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1256,
                                            "name": "Identifier",
                                            "src": "811:18:4"
                                          }
                                        ],
                                        "id": 1257,
                                        "name": "MemberAccess",
                                        "src": "811:29:4"
                                      }
                                    ],
                                    "id": 1258,
                                    "name": "FunctionCall",
                                    "src": "811:31:4"
                                  }
                                ],
                                "id": 1259,
                                "name": "FunctionCall",
                                "src": "780:63:4"
                              }
                            ],
                            "id": 1260,
                            "name": "FunctionCall",
                            "src": "773:71:4"
                          }
                        ],
                        "id": 1261,
                        "name": "Assignment",
                        "src": "762:82:4"
                      }
                    ],
                    "id": 1262,
                    "name": "ExpressionStatement",
                    "src": "762:82:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IBmiDaiStaking"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1230,
                              "type": "contract IBmiDaiStaking",
                              "value": "bmiDaiStaking"
                            },
                            "id": 1263,
                            "name": "Identifier",
                            "src": "854:13:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IBmiDaiStaking",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2876,
                                  "type": "type(contract IBmiDaiStaking)",
                                  "value": "IBmiDaiStaking"
                                },
                                "id": 1264,
                                "name": "Identifier",
                                "src": "870:14:4"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1077,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1232,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 1265,
                                        "name": "Identifier",
                                        "src": "885:18:4"
                                      }
                                    ],
                                    "id": 1266,
                                    "name": "MemberAccess",
                                    "src": "885:30:4"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBmiDAIStakingName",
                                          "referencedDeclaration": 1036,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1232,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 1267,
                                            "name": "Identifier",
                                            "src": "916:18:4"
                                          }
                                        ],
                                        "id": 1268,
                                        "name": "MemberAccess",
                                        "src": "916:39:4"
                                      }
                                    ],
                                    "id": 1269,
                                    "name": "FunctionCall",
                                    "src": "916:41:4"
                                  }
                                ],
                                "id": 1270,
                                "name": "FunctionCall",
                                "src": "885:73:4"
                              }
                            ],
                            "id": 1271,
                            "name": "FunctionCall",
                            "src": "870:89:4"
                          }
                        ],
                        "id": 1272,
                        "name": "Assignment",
                        "src": "854:105:4"
                      }
                    ],
                    "id": 1273,
                    "name": "ExpressionStatement",
                    "src": "854:105:4"
                  }
                ],
                "id": 1274,
                "name": "Block",
                "src": "603:363:4"
              }
            ],
            "id": 1275,
            "name": "FunctionDefinition",
            "src": "524:442:4"
          },
          {
            "attributes": {
              "functionSelector": "333399bc",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveAllDaiTokensForStakingWithdrowal",
              "scope": 1354,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1276,
                "name": "ParameterList",
                "src": "1020:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1279,
                "name": "ParameterList",
                "src": "1042:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5126,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1277,
                    "name": "Identifier",
                    "src": "1032:9:4"
                  }
                ],
                "id": 1278,
                "name": "ModifierInvocation",
                "src": "1032:9:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1281
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1296,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1280,
                            "name": "ElementaryTypeName",
                            "src": "1052:4:4"
                          }
                        ],
                        "id": 1281,
                        "name": "VariableDeclaration",
                        "src": "1052:12:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 6243,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1226,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 1282,
                                "name": "Identifier",
                                "src": "1067:8:4"
                              }
                            ],
                            "id": 1283,
                            "name": "MemberAccess",
                            "src": "1067:16:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                                      "typeString": "contract IBmiDaiStaking"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1284,
                                    "name": "ElementaryTypeName",
                                    "src": "1084:7:4"
                                  }
                                ],
                                "id": 1285,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1084:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1230,
                                  "type": "contract IBmiDaiStaking",
                                  "value": "bmiDaiStaking"
                                },
                                "id": 1286,
                                "name": "Identifier",
                                "src": "1092:13:4"
                              }
                            ],
                            "id": 1287,
                            "name": "FunctionCall",
                            "src": "1084:22:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1222,
                              "type": "uint256",
                              "value": "MAX_INT"
                            },
                            "id": 1288,
                            "name": "Identifier",
                            "src": "1108:7:4"
                          }
                        ],
                        "id": 1289,
                        "name": "FunctionCall",
                        "src": "1067:49:4"
                      }
                    ],
                    "id": 1290,
                    "name": "VariableDeclarationStatement",
                    "src": "1052:64:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7b14d5a1a6cb4f9b9c241bce50c693699673170ad40aaaa545df6b86e1ef40d9",
                                  "typeString": "literal_string \"Failed to approve DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1291,
                            "name": "Identifier",
                            "src": "1127:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1281,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1292,
                            "name": "Identifier",
                            "src": "1135:7:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f20617070726f76652044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to approve DAI tokens\"",
                              "value": "Failed to approve DAI tokens"
                            },
                            "id": 1293,
                            "name": "Literal",
                            "src": "1144:30:4"
                          }
                        ],
                        "id": 1294,
                        "name": "FunctionCall",
                        "src": "1127:48:4"
                      }
                    ],
                    "id": 1295,
                    "name": "ExpressionStatement",
                    "src": "1127:48:4"
                  }
                ],
                "id": 1296,
                "name": "Block",
                "src": "1042:140:4"
              }
            ],
            "id": 1297,
            "name": "FunctionDefinition",
            "src": "972:210:4"
          },
          {
            "attributes": {
              "functionSelector": "a2ac7ac6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveAllBMITokensForStakingWithdrowal",
              "scope": 1354,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1298,
                "name": "ParameterList",
                "src": "1236:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1301,
                "name": "ParameterList",
                "src": "1258:0:4"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5126,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1299,
                    "name": "Identifier",
                    "src": "1248:9:4"
                  }
                ],
                "id": 1300,
                "name": "ModifierInvocation",
                "src": "1248:9:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1303
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1318,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1302,
                            "name": "ElementaryTypeName",
                            "src": "1268:4:4"
                          }
                        ],
                        "id": 1303,
                        "name": "VariableDeclaration",
                        "src": "1268:12:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 6243,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1228,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 1304,
                                "name": "Identifier",
                                "src": "1283:8:4"
                              }
                            ],
                            "id": 1305,
                            "name": "MemberAccess",
                            "src": "1283:16:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                                      "typeString": "contract IBmiDaiStaking"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1306,
                                    "name": "ElementaryTypeName",
                                    "src": "1300:7:4"
                                  }
                                ],
                                "id": 1307,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1300:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1230,
                                  "type": "contract IBmiDaiStaking",
                                  "value": "bmiDaiStaking"
                                },
                                "id": 1308,
                                "name": "Identifier",
                                "src": "1308:13:4"
                              }
                            ],
                            "id": 1309,
                            "name": "FunctionCall",
                            "src": "1300:22:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1222,
                              "type": "uint256",
                              "value": "MAX_INT"
                            },
                            "id": 1310,
                            "name": "Identifier",
                            "src": "1324:7:4"
                          }
                        ],
                        "id": 1311,
                        "name": "FunctionCall",
                        "src": "1283:49:4"
                      }
                    ],
                    "id": 1312,
                    "name": "VariableDeclarationStatement",
                    "src": "1268:64:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f73bf93c96d9002862961f2d9996227c3754e3fab7c0e2cf56fc3b1bf5a1e501",
                                  "typeString": "literal_string \"Failed to approve BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1313,
                            "name": "Identifier",
                            "src": "1343:7:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1303,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1314,
                            "name": "Identifier",
                            "src": "1351:7:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f20617070726f766520424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to approve BMI tokens\"",
                              "value": "Failed to approve BMI tokens"
                            },
                            "id": 1315,
                            "name": "Literal",
                            "src": "1360:30:4"
                          }
                        ],
                        "id": 1316,
                        "name": "FunctionCall",
                        "src": "1343:48:4"
                      }
                    ],
                    "id": 1317,
                    "name": "ExpressionStatement",
                    "src": "1343:48:4"
                  }
                ],
                "id": 1318,
                "name": "Block",
                "src": "1258:140:4"
              }
            ],
            "id": 1319,
            "name": "FunctionDefinition",
            "src": "1188:210:4"
          },
          {
            "attributes": {
              "functionSelector": "18022438",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updateProfitBMITokensFor",
              "scope": 1354,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 1343,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1320,
                        "name": "ElementaryTypeName",
                        "src": "1450:7:4"
                      }
                    ],
                    "id": 1321,
                    "name": "VariableDeclaration",
                    "src": "1450:15:4"
                  }
                ],
                "id": 1322,
                "name": "ParameterList",
                "src": "1449:17:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1323,
                "name": "ParameterList",
                "src": "1476:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1327
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingInfo",
                          "scope": 1342,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct IBmiDaiStaking.StakingInfo",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "IBmiDaiStaking.StakingInfo",
                              "referencedDeclaration": 2844,
                              "type": "struct IBmiDaiStaking.StakingInfo"
                            },
                            "id": 1326,
                            "name": "UserDefinedTypeName",
                            "src": "1538:26:4"
                          }
                        ],
                        "id": 1327,
                        "name": "VariableDeclaration",
                        "src": "1538:45:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "struct IBmiDaiStaking.StakingInfo memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getStakingInfoByTokenID",
                              "referencedDeclaration": 2875,
                              "type": "function (uint256) view external returns (struct IBmiDaiStaking.StakingInfo memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1230,
                                  "type": "contract IBmiDaiStaking",
                                  "value": "bmiDaiStaking"
                                },
                                "id": 1328,
                                "name": "Identifier",
                                "src": "1586:13:4"
                              }
                            ],
                            "id": 1329,
                            "name": "MemberAccess",
                            "src": "1586:37:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1321,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 1330,
                            "name": "Identifier",
                            "src": "1624:7:4"
                          }
                        ],
                        "id": 1331,
                        "name": "FunctionCall",
                        "src": "1586:46:4"
                      }
                    ],
                    "id": 1332,
                    "name": "VariableDeclarationStatement",
                    "src": "1538:94:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increaseBmiProfit",
                              "referencedDeclaration": 2868,
                              "type": "function (uint256,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1230,
                                  "type": "contract IBmiDaiStaking",
                                  "value": "bmiDaiStaking"
                                },
                                "id": 1333,
                                "name": "Identifier",
                                "src": "1643:13:4"
                              }
                            ],
                            "id": 1335,
                            "name": "MemberAccess",
                            "src": "1643:31:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1321,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 1336,
                            "name": "Identifier",
                            "src": "1675:7:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                                      "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1353,
                                  "type": "function (struct IBmiDaiStaking.StakingInfo memory) pure returns (uint256)",
                                  "value": "generateProfit"
                                },
                                "id": 1337,
                                "name": "Identifier",
                                "src": "1684:14:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1327,
                                  "type": "struct IBmiDaiStaking.StakingInfo memory",
                                  "value": "stakingInfo"
                                },
                                "id": 1338,
                                "name": "Identifier",
                                "src": "1699:11:4"
                              }
                            ],
                            "id": 1339,
                            "name": "FunctionCall",
                            "src": "1684:27:4"
                          }
                        ],
                        "id": 1340,
                        "name": "FunctionCall",
                        "src": "1643:69:4"
                      }
                    ],
                    "id": 1341,
                    "name": "ExpressionStatement",
                    "src": "1643:69:4"
                  }
                ],
                "id": 1342,
                "name": "Block",
                "src": "1476:243:4"
              }
            ],
            "id": 1343,
            "name": "FunctionDefinition",
            "src": "1416:303:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "generateProfit",
              "scope": 1354,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "stakingInfo",
                      "scope": 1353,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct IBmiDaiStaking.StakingInfo",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IBmiDaiStaking.StakingInfo",
                          "referencedDeclaration": 2844,
                          "type": "struct IBmiDaiStaking.StakingInfo"
                        },
                        "id": 1344,
                        "name": "UserDefinedTypeName",
                        "src": "1757:26:4"
                      }
                    ],
                    "id": 1345,
                    "name": "VariableDeclaration",
                    "src": "1757:45:4"
                  }
                ],
                "id": 1346,
                "name": "ParameterList",
                "src": "1756:47:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1353,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1347,
                        "name": "ElementaryTypeName",
                        "src": "1826:7:4"
                      }
                    ],
                    "id": 1348,
                    "name": "VariableDeclaration",
                    "src": "1826:7:4"
                  }
                ],
                "id": 1349,
                "name": "ParameterList",
                "src": "1825:9:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1349
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 1350,
                        "name": "Literal",
                        "src": "1860:1:4"
                      }
                    ],
                    "id": 1351,
                    "name": "Return",
                    "src": "1853:8:4"
                  }
                ],
                "id": 1352,
                "name": "Block",
                "src": "1835:33:4"
              }
            ],
            "id": 1353,
            "name": "FunctionDefinition",
            "src": "1733:135:4"
          }
        ],
        "id": 1354,
        "name": "ContractDefinition",
        "src": "280:1590:4"
      }
    ],
    "id": 1355,
    "name": "SourceUnit",
    "src": "32:1838:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "1611324659295": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5b4536a8de996EF62642c261Af66b1460a748603",
      "transactionHash": "0x406934d02057164b8a580a4937567f77e6e3e45440c340a237b5e4e2e5e1eead"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-22T16:22:26.248Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}