{
  "contractName": "LiquidityMiningNFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidiyMiningAddr",
          "type": "address"
        }
      ],
      "name": "mintNFTsForLM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidiyMiningAddr\",\"type\":\"address\"}],\"name\":\"mintNFTsForLM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/LiquidityMiningNFT.sol\":\"LiquidityMiningNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/LiquidityMiningNFT.sol\":{\"keccak256\":\"0x8f79e7363147de2d56dbd734863fed3e55a6c521483e4d324110e27f431c34aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aef7bd5fa71a66b04ff8687786ce7a92c13e128dd5697ac9a752c3858ac624e8\",\"dweb:/ipfs/Qmf1iUQfEWEssJmcdnji4W4zkHpg8cK4oV6sXCDtzKgw9b\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xe7fff2c63a8ae715484391eb8626588e27194d7b5b1bf4b60e413b7e1f84b3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0712ac4fd76480553208b1a85e88333d909f87f58df9679e0672df2ac1e93450\",\"dweb:/ipfs/Qmbj7gRTwzkvGvF4dcyFz6zjXEXNZsQCvvEha5RCK2mEtt\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001d8538038062001d85833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052508291506200010290506301ffc9a760e01b62000139565b6200010d81620001be565b6200011f636cdb3d1360e11b62000139565b620001316303a24d0760e21b62000139565b505062000283565b6001600160e01b0319808216141562000199576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b8051620001d3906003906020840190620001d7565b5050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200020f57600085556200025a565b82601f106200022a57805160ff19168380011785556200025a565b828001600101855582156200025a579182015b828111156200025a5782518255916020019190600101906200023d565b50620002689291506200026c565b5090565b5b808211156200026857600081556001016200026d565b611af280620002936000396000f3fe608060405234801561001057600080fd5b50600436106100a25760003560e01c80634e1273f411610076578063a22cb4651161005b578063a22cb46514610530578063e985e9c51461055e578063f242432a1461058c576100a2565b80634e1273f41461039357806359b5522a1461050a576100a2565b8062fdd58e146100a757806301ffc9a7146100e55780630e89341c146101385780632eb2c2d6146101ca575b600080fd5b6100d3600480360360408110156100bd57600080fd5b506001600160a01b038135169060200135610657565b60408051918252519081900360200190f35b610124600480360360208110156100fb57600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166106c6565b604080519115158252519081900360200190f35b6101556004803603602081101561014e57600080fd5b50356106fd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018f578181015183820152602001610177565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610391600480360360a08110156101e057600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561021457600080fd5b82018360208201111561022657600080fd5b8035906020019184602083028401116401000000008311171561024857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561029857600080fd5b8201836020820111156102aa57600080fd5b803590602001918460208302840111640100000000831117156102cc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561031c57600080fd5b82018360208201111561032e57600080fd5b8035906020019184600183028401116401000000008311171561035057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107b3945050505050565b005b6104ba600480360360408110156103a957600080fd5b8101906020810181356401000000008111156103c457600080fd5b8201836020820111156103d657600080fd5b803590602001918460208302840111640100000000831117156103f857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184602083028401116401000000008311171561047c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610ab1945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104f65781810151838201526020016104de565b505050509050019250505060405180910390f35b6103916004803603602081101561052057600080fd5b50356001600160a01b0316610c2f565b6103916004803603604081101561054657600080fd5b506001600160a01b0381351690602001351515610ce4565b6101246004803603604081101561057457600080fd5b506001600160a01b0381358116916020013516610df1565b610391600480360360a08110156105a257600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156105e257600080fd5b8201836020820111156105f457600080fd5b8035906020019184600183028401116401000000008311171561061657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e1f945050505050565b60006001600160a01b03831661069e5760405162461bcd60e51b815260040180806020018281038252602b81526020018061191c602b913960400191505060405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a75780601f1061077c576101008083540402835291602001916107a7565b820191906000526020600020905b81548152906001019060200180831161078a57829003601f168201915b50505050509050919050565b81518351146107f35760405162461bcd60e51b8152600401808060200182810382526028815260200180611a746028913960400191505060405180910390fd5b6001600160a01b0384166108385760405162461bcd60e51b81526004018080602001828103825260258152602001806119a16025913960400191505060405180910390fd5b610840610fea565b6001600160a01b0316856001600160a01b0316148061086b575061086b85610866610fea565b610df1565b6108a65760405162461bcd60e51b81526004018080602001828103825260328152602001806119c66032913960400191505060405180910390fd5b60006108b0610fea565b90506108c0818787878787610aa9565b60005b84518110156109c15760008582815181106108da57fe5b6020026020010151905060008583815181106108f257fe5b6020026020010151905061095f816040518060600160405280602a81526020016119f8602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610fef9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546109969082611086565b60009283526001602081815260408086206001600160a01b038d1687529091529093205550016108c3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610a47578181015183820152602001610a2f565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610a86578181015183820152602001610a6e565b5050505090500194505050505060405180910390a4610aa98187878787876110e7565b505050505050565b60608151835114610af35760405162461bcd60e51b8152600401808060200182810382526029815260200180611a4b6029913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015610b0d57600080fd5b50604051908082528060200260200182016040528015610b37578160200160208202803683370190505b50905060005b8451811015610c275760006001600160a01b0316858281518110610b5d57fe5b60200260200101516001600160a01b03161415610bab5760405162461bcd60e51b81526004018080602001828103825260318152602001806119476031913960400191505060405180910390fd5b60016000858381518110610bbb57fe5b602002602001015181526020019081526020016000206000868381518110610bdf57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610c1457fe5b6020908102919091010152600101610b3d565b509392505050565b60408051600480825260a0820190925260609160208201608080368337505060408051600480825260a0820190925292935060609291506020820160808036833701905050905060015b60048111610cc35780836001830381518110610c9157fe5b602002602001018181525050600a8102826001830381518110610cb057fe5b6020908102919091010152600101610c79565b50610cdf83838360405180602001604052806000815250611397565b505050565b816001600160a01b0316610cf6610fea565b6001600160a01b03161415610d3c5760405162461bcd60e51b8152600401808060200182810382526029815260200180611a226029913960400191505060405180910390fd5b8060026000610d49610fea565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610dab610fea565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038416610e645760405162461bcd60e51b81526004018080602001828103825260258152602001806119a16025913960400191505060405180910390fd5b610e6c610fea565b6001600160a01b0316856001600160a01b03161480610e925750610e9285610866610fea565b610ecd5760405162461bcd60e51b81526004018080602001828103825260298152602001806119786029913960400191505060405180910390fd5b6000610ed7610fea565b9050610ef7818787610ee8886115ec565b610ef1886115ec565b87610aa9565b610f3e836040518060600160405280602a81526020016119f8602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190610fef565b60008581526001602090815260408083206001600160a01b038b81168552925280832093909355871681522054610f759084611086565b60008581526001602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4610aa9818787878787611630565b335b90565b6000818484111561107e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561104357818101518382015260200161102b565b50505050905090810190601f1680156110705780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156110e0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6110f9846001600160a01b03166117d2565b15610aa957836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561118757818101518382015260200161116f565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156111c65781810151838201526020016111ae565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156112025781810151838201526020016111ea565b50505050905090810190601f16801561122f5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561125457600080fd5b505af192505050801561127957506040513d602081101561127457600080fd5b505160015b61130e576112856117de565b8061129057506112d7565b60405162461bcd60e51b815260206004820181815283516024840152835184939192839260440191908501908083836000831561104357818101518382015260200161102b565b60405162461bcd60e51b81526004018080602001828103825260348152602001806118c06034913960400191505060405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461138e5760405162461bcd60e51b81526004018080602001828103825260288152602001806118f46028913960400191505060405180910390fd5b50505050505050565b6001600160a01b0384166113dc5760405162461bcd60e51b8152600401808060200182810382526021815260200180611a9c6021913960400191505060405180910390fd5b815183511461141c5760405162461bcd60e51b8152600401808060200182810382526028815260200180611a746028913960400191505060405180910390fd5b6000611426610fea565b905061143781600087878787610aa9565b60005b84518110156114fb576114b26001600087848151811061145657fe5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000205485838151811061149c57fe5b602002602001015161108690919063ffffffff16565b600160008784815181106114c257fe5b602090810291909101810151825281810192909252604090810160009081206001600160a01b038b16825290925290205560010161143a565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561158257818101518382015260200161156a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156115c15781810151838201526020016115a9565b5050505090500194505050505060405180910390a46115e5816000878787876110e7565b5050505050565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061161f57fe5b602090810291909101015292915050565b611642846001600160a01b03166117d2565b15610aa957836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116d15781810151838201526020016116b9565b50505050905090810190601f1680156116fe5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561172157600080fd5b505af192505050801561174657506040513d602081101561174157600080fd5b505160015b611752576112856117de565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461138e5760405162461bcd60e51b81526004018080602001828103825260288152602001806118f46028913960400191505060405180910390fd5b3b151590565b60e01c90565b600060443d10156117ee57610fec565b600481823e6308c379a061180282516117d8565b1461180c57610fec565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d67ffffffffffffffff816024840111818411171561185a5750505050610fec565b828401925082519150808211156118745750505050610fec565b503d8301602082840101111561188c57505050610fec565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a264697066735822122006bc7f3a9ce1c4ca07b1d91070343662617a640f03bf2fbf477a98fc5077194264736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a25760003560e01c80634e1273f411610076578063a22cb4651161005b578063a22cb46514610530578063e985e9c51461055e578063f242432a1461058c576100a2565b80634e1273f41461039357806359b5522a1461050a576100a2565b8062fdd58e146100a757806301ffc9a7146100e55780630e89341c146101385780632eb2c2d6146101ca575b600080fd5b6100d3600480360360408110156100bd57600080fd5b506001600160a01b038135169060200135610657565b60408051918252519081900360200190f35b610124600480360360208110156100fb57600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166106c6565b604080519115158252519081900360200190f35b6101556004803603602081101561014e57600080fd5b50356106fd565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018f578181015183820152602001610177565b50505050905090810190601f1680156101bc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610391600480360360a08110156101e057600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561021457600080fd5b82018360208201111561022657600080fd5b8035906020019184602083028401116401000000008311171561024857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561029857600080fd5b8201836020820111156102aa57600080fd5b803590602001918460208302840111640100000000831117156102cc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561031c57600080fd5b82018360208201111561032e57600080fd5b8035906020019184600183028401116401000000008311171561035057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107b3945050505050565b005b6104ba600480360360408110156103a957600080fd5b8101906020810181356401000000008111156103c457600080fd5b8201836020820111156103d657600080fd5b803590602001918460208302840111640100000000831117156103f857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184602083028401116401000000008311171561047c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610ab1945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104f65781810151838201526020016104de565b505050509050019250505060405180910390f35b6103916004803603602081101561052057600080fd5b50356001600160a01b0316610c2f565b6103916004803603604081101561054657600080fd5b506001600160a01b0381351690602001351515610ce4565b6101246004803603604081101561057457600080fd5b506001600160a01b0381358116916020013516610df1565b610391600480360360a08110156105a257600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156105e257600080fd5b8201836020820111156105f457600080fd5b8035906020019184600183028401116401000000008311171561061657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e1f945050505050565b60006001600160a01b03831661069e5760405162461bcd60e51b815260040180806020018281038252602b81526020018061191c602b913960400191505060405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a75780601f1061077c576101008083540402835291602001916107a7565b820191906000526020600020905b81548152906001019060200180831161078a57829003601f168201915b50505050509050919050565b81518351146107f35760405162461bcd60e51b8152600401808060200182810382526028815260200180611a746028913960400191505060405180910390fd5b6001600160a01b0384166108385760405162461bcd60e51b81526004018080602001828103825260258152602001806119a16025913960400191505060405180910390fd5b610840610fea565b6001600160a01b0316856001600160a01b0316148061086b575061086b85610866610fea565b610df1565b6108a65760405162461bcd60e51b81526004018080602001828103825260328152602001806119c66032913960400191505060405180910390fd5b60006108b0610fea565b90506108c0818787878787610aa9565b60005b84518110156109c15760008582815181106108da57fe5b6020026020010151905060008583815181106108f257fe5b6020026020010151905061095f816040518060600160405280602a81526020016119f8602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610fef9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546109969082611086565b60009283526001602081815260408086206001600160a01b038d1687529091529093205550016108c3565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610a47578181015183820152602001610a2f565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610a86578181015183820152602001610a6e565b5050505090500194505050505060405180910390a4610aa98187878787876110e7565b505050505050565b60608151835114610af35760405162461bcd60e51b8152600401808060200182810382526029815260200180611a4b6029913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015610b0d57600080fd5b50604051908082528060200260200182016040528015610b37578160200160208202803683370190505b50905060005b8451811015610c275760006001600160a01b0316858281518110610b5d57fe5b60200260200101516001600160a01b03161415610bab5760405162461bcd60e51b81526004018080602001828103825260318152602001806119476031913960400191505060405180910390fd5b60016000858381518110610bbb57fe5b602002602001015181526020019081526020016000206000868381518110610bdf57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610c1457fe5b6020908102919091010152600101610b3d565b509392505050565b60408051600480825260a0820190925260609160208201608080368337505060408051600480825260a0820190925292935060609291506020820160808036833701905050905060015b60048111610cc35780836001830381518110610c9157fe5b602002602001018181525050600a8102826001830381518110610cb057fe5b6020908102919091010152600101610c79565b50610cdf83838360405180602001604052806000815250611397565b505050565b816001600160a01b0316610cf6610fea565b6001600160a01b03161415610d3c5760405162461bcd60e51b8152600401808060200182810382526029815260200180611a226029913960400191505060405180910390fd5b8060026000610d49610fea565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610dab610fea565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038416610e645760405162461bcd60e51b81526004018080602001828103825260258152602001806119a16025913960400191505060405180910390fd5b610e6c610fea565b6001600160a01b0316856001600160a01b03161480610e925750610e9285610866610fea565b610ecd5760405162461bcd60e51b81526004018080602001828103825260298152602001806119786029913960400191505060405180910390fd5b6000610ed7610fea565b9050610ef7818787610ee8886115ec565b610ef1886115ec565b87610aa9565b610f3e836040518060600160405280602a81526020016119f8602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190610fef565b60008581526001602090815260408083206001600160a01b038b81168552925280832093909355871681522054610f759084611086565b60008581526001602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4610aa9818787878787611630565b335b90565b6000818484111561107e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561104357818101518382015260200161102b565b50505050905090810190601f1680156110705780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156110e0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6110f9846001600160a01b03166117d2565b15610aa957836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561118757818101518382015260200161116f565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156111c65781810151838201526020016111ae565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156112025781810151838201526020016111ea565b50505050905090810190601f16801561122f5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561125457600080fd5b505af192505050801561127957506040513d602081101561127457600080fd5b505160015b61130e576112856117de565b8061129057506112d7565b60405162461bcd60e51b815260206004820181815283516024840152835184939192839260440191908501908083836000831561104357818101518382015260200161102b565b60405162461bcd60e51b81526004018080602001828103825260348152602001806118c06034913960400191505060405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461138e5760405162461bcd60e51b81526004018080602001828103825260288152602001806118f46028913960400191505060405180910390fd5b50505050505050565b6001600160a01b0384166113dc5760405162461bcd60e51b8152600401808060200182810382526021815260200180611a9c6021913960400191505060405180910390fd5b815183511461141c5760405162461bcd60e51b8152600401808060200182810382526028815260200180611a746028913960400191505060405180910390fd5b6000611426610fea565b905061143781600087878787610aa9565b60005b84518110156114fb576114b26001600087848151811061145657fe5b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000205485838151811061149c57fe5b602002602001015161108690919063ffffffff16565b600160008784815181106114c257fe5b602090810291909101810151825281810192909252604090810160009081206001600160a01b038b16825290925290205560010161143a565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561158257818101518382015260200161156a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156115c15781810151838201526020016115a9565b5050505090500194505050505060405180910390a46115e5816000878787876110e7565b5050505050565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061161f57fe5b602090810291909101015292915050565b611642846001600160a01b03166117d2565b15610aa957836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116d15781810151838201526020016116b9565b50505050905090810190601f1680156116fe5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561172157600080fd5b505af192505050801561174657506040513d602081101561174157600080fd5b505160015b611752576112856117de565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461138e5760405162461bcd60e51b81526004018080602001828103825260288152602001806118f46028913960400191505060405180910390fd5b3b151590565b60e01c90565b600060443d10156117ee57610fec565b600481823e6308c379a061180282516117d8565b1461180c57610fec565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d67ffffffffffffffff816024840111818411171561185a5750505050610fec565b828401925082519150808211156118745750505050610fec565b503d8301602082840101111561188c57505050610fec565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a264697066735822122006bc7f3a9ce1c4ca07b1d91070343662617a640f03bf2fbf477a98fc5077194264736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:992:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:31:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:27:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "89:3:36",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "94:5:36"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "85:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "85:15:36"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "73:8:36"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "58:8:36",
                "type": ""
              }
            ],
            "src": "14:88:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "154:836:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "194:9:36",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "196:5:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "170:14:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "170:16:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "188:4:36",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "167:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:26:36"
                  },
                  "nodeType": "YulIf",
                  "src": "164:2:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "227:3:36"
                      },
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "232:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "237:1:36",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "212:14:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "212:27:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "212:27:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:9:36",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "314:5:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "292:3:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "286:5:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "286:10:36"
                              }
                            ],
                            "functionName": {
                              "name": "shift_right_224_unsigned",
                              "nodeType": "YulIdentifier",
                              "src": "261:24:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:36:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "299:10:36",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "258:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "258:52:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "251:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:60:36"
                  },
                  "nodeType": "YulIf",
                  "src": "248:2:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "330:21:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "348:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "342:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:9:36"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "334:4:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "375:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "381:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "388:14:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "388:16:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "406:66:36",
                            "type": "",
                            "value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "384:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "384:89:36"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "360:14:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:114:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "360:114:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "483:25:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "503:4:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:11:36"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "487:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "517:26:36",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "returndatasize",
                      "nodeType": "YulIdentifier",
                      "src": "527:14:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:16:36"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "521:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "552:28:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "562:18:36",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "556:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:9:36",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "640:5:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "598:6:36"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "606:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "595:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "595:14:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "626:4:36",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "614:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:17:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "633:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "611:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:25:36"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "592:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:45:36"
                  },
                  "nodeType": "YulIf",
                  "src": "589:2:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "656:28:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "671:4:36"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "677:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "667:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:17:36"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "660:3:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "693:24:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "713:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "707:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:10:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "697:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "744:9:36",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "746:5:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "732:6:36"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "740:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "729:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:14:36"
                  },
                  "nodeType": "YulIf",
                  "src": "726:2:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:9:36",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "828:5:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "776:3:36"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "781:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "772:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "772:16:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "790:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "768:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "768:27:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "801:4:36"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "807:14:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "807:16:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:27:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "765:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:60:36"
                  },
                  "nodeType": "YulIf",
                  "src": "762:2:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "851:2:36",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "863:3:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "876:6:36"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "884:2:36",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "872:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "872:15:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "889:66:36",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "868:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "868:88:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "859:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "859:98:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "959:4:36",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:109:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "844:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "844:121:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "844:121:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "974:10:36",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "981:3:36"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "974:3:36"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "146:3:36",
                "type": ""
              }
            ],
            "src": "107:883:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function shift_right_224_unsigned(value) -> newValue\n    { newValue := shr(224, value) }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        returndatacopy(ret, ret, 4)\n        if iszero(eq(shift_right_224_unsigned(mload(ret)), 0x08c379a0)) { leave }\n        let data := mload(64)\n        returndatacopy(data, 4, add(returndatasize(), 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc))\n        let offset := mload(data)\n        let _1 := returndatasize()\n        let _2 := 0xffffffffffffffff\n        if or(gt(offset, _2), gt(add(offset, 0x24), _1)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _2) { leave }\n        if gt(add(add(msg, length), 0x20), add(data, returndatasize())) { leave }\n        mstore(64, add(add(msg, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20))\n        ret := msg\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "118:607:4:-:0;;;264:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:49:4;;;;;;;;;;-1:-1:-1;264:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:49:4;;-1:-1:-1;305:4:4;;-1:-1:-1;768:40:22;;-1:-1:-1;;;;768:18:22;:40::i;:::-;2024:13:26;2032:4;2024:7;:13::i;:::-;2126:41;-1:-1:-1;;;2126:18:26;:41::i;:::-;2267:54;-1:-1:-1;;;2267:18:26;:54::i;:::-;1974:354;264:49:4;118:607;;1499:198:22;-1:-1:-1;;;;;;1582:25:22;;;;;1574:66;;;;;-1:-1:-1;;;1574:66:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1650:33:22;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1650:40:22;1686:4;1650:40;;;1499:198::o;7600:86:26:-;7666:13;;;;:4;;:13;;;;;:::i;:::-;;7600:86;:::o;118:607:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;118:607:4;;;-1:-1:-1;118:607:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "118:607:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2966:220:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2966:220:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;965:140:22;;;;;;;;;;;;;;;;-1:-1:-1;965:140:22;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2727:97:26;;;;;;;;;;;;;;;;-1:-1:-1;2727:97:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5593:1184;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5593:1184:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5593:1184:26;;;;;;;;-1:-1:-1;5593:1184:26;;-1:-1:-1;;5593:1184:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5593:1184:26;;;;;;;;-1:-1:-1;5593:1184:26;;-1:-1:-1;;5593:1184:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5593:1184:26;;-1:-1:-1;5593:1184:26;;-1:-1:-1;;;;;5593:1184:26:i;:::-;;3343:615;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3343:615:26;;;;;;;;-1:-1:-1;3343:615:26;;-1:-1:-1;;3343:615:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3343:615:26;;-1:-1:-1;3343:615:26;;-1:-1:-1;;;;;3343:615:26:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:404:4;;;;;;;;;;;;;;;;-1:-1:-1;319:404:4;-1:-1:-1;;;;;319:404:4;;:::i;4026:306:26:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4026:306:26;;;;;;;;;;:::i;4399:158::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4399:158:26;;;;;;;;;;:::i;4624:897::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4624:897:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4624:897:26;;-1:-1:-1;4624:897:26;;-1:-1:-1;;;;;4624:897:26:i;2966:220::-;3044:7;-1:-1:-1;;;;;3071:21:26;;3063:77;;;;-1:-1:-1;;;3063:77:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3157:13:26;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3157:22:26;;;;;;;;;;;;2966:220::o;965:140:22:-;1065:33;;1042:4;1065:33;;;;;;;;;;;;;;965:140::o;2727:97:26:-;2813:4;2806:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2781:13;;2806:11;;2813:4;;2806:11;;2813:4;2806:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:97;;;:::o;5593:1184::-;5847:7;:14;5833:3;:10;:28;5825:81;;;;-1:-1:-1;;;5825:81:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5924:16:26;;5916:66;;;;-1:-1:-1;;;5916:66:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6021:12;:10;:12::i;:::-;-1:-1:-1;;;;;6013:20:26;:4;-1:-1:-1;;;;;6013:20:26;;:60;;;;6037:36;6054:4;6060:12;:10;:12::i;:::-;6037:16;:36::i;:::-;5992:157;;;;-1:-1:-1;;;5992:157:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6160:16;6179:12;:10;:12::i;:::-;6160:31;;6202:60;6223:8;6233:4;6239:2;6243:3;6248:7;6257:4;6202:20;:60::i;:::-;6278:9;6273:349;6297:3;:10;6293:1;:14;6273:349;;;6328:10;6341:3;6345:1;6341:6;;;;;;;;;;;;;;6328:19;;6361:14;6378:7;6386:1;6378:10;;;;;;;;;;;;;;6361:27;;6425:123;6466:6;6425:123;;;;;;;;;;;;;;;;;:9;:13;6435:2;6425:13;;;;;;;;;;;:19;6439:4;-1:-1:-1;;;;;6425:19:26;-1:-1:-1;;;;;6425:19:26;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6403:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6403:19:26;;;;;;;;;;:145;;;;6582:17;;;;;;:29;;6604:6;6582:21;:29::i;:::-;6562:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6562:17:26;;;;;;;;;;:49;-1:-1:-1;6309:3:26;6273:349;;;;6667:2;-1:-1:-1;;;;;6637:47:26;6661:4;-1:-1:-1;;;;;6637:47:26;6651:8;-1:-1:-1;;;;;6637:47:26;;6671:3;6676:7;6637:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6695:75;6731:8;6741:4;6747:2;6751:3;6756:7;6765:4;6695:35;:75::i;:::-;5593:1184;;;;;;:::o;3343:615::-;3500:16;3559:3;:10;3540:8;:15;:29;3532:83;;;;-1:-1:-1;;;3532:83:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3626:30;3673:8;:15;3659:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3659:30:26;;3626:63;;3705:9;3700:221;3724:8;:15;3720:1;:19;3700:221;;;3791:1;-1:-1:-1;;;;;3768:25:26;:8;3777:1;3768:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3768:25:26;;;3760:87;;;;-1:-1:-1;;;3760:87:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3880:9;:17;3890:3;3894:1;3890:6;;;;;;;;;;;;;;3880:17;;;;;;;;;;;:30;3898:8;3907:1;3898:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3880:30:26;-1:-1:-1;;;;;3880:30:26;;;;;;;;;;;;;3861:13;3875:1;3861:16;;;;;;;;;;;;;;;;;:49;3741:3;;3700:221;;;-1:-1:-1;3938:13:26;3343:615;-1:-1:-1;;;3343:615:26:o;319:404:4:-;414:28;;;205:1;414:28;;;;;;;;;390:21;;414:28;;;;;;;;-1:-1:-1;;480:28:4;;;205:1;480:28;;;;;;;;;390:52;;-1:-1:-1;452:25:4;;480:28;-1:-1:-1;480:28:4;;;;;;;;;;-1:-1:-1;;452:56:4;-1:-1:-1;535:1:4;519:136;205:1;538;:18;519:136;;591:1;577:4;586:1;582;:5;577:11;;;;;;;;;;;;;:15;;;;;255:2;624:1;:19;606:8;619:1;615;:5;606:15;;;;;;;;;;;;;;;;;:37;558:3;;519:136;;;;665:51;676:19;697:4;703:8;665:51;;;;;;;;;;;;:10;:51::i;:::-;319:404;;;:::o;4026:306:26:-;4144:8;-1:-1:-1;;;;;4128:24:26;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4128:24:26;;;4120:78;;;;-1:-1:-1;;;4120:78:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4254:8;4209:18;:32;4228:12;:10;:12::i;:::-;-1:-1:-1;;;;;4209:32:26;;;;;;;;;;;;;;;;;-1:-1:-1;4209:32:26;;;:42;;;;;;;;;;;;:53;;;;;;;;;;;;;;4292:12;:10;:12::i;:::-;-1:-1:-1;;;;;4277:48:26;;4316:8;4277:48;;;;;;;;;;;;;;;;;;;;4026:306;;:::o;4399:158::-;-1:-1:-1;;;;;4513:27:26;;;4490:4;4513:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4399:158::o;4624:897::-;-1:-1:-1;;;;;4839:16:26;;4831:66;;;;-1:-1:-1;;;4831:66:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4936:12;:10;:12::i;:::-;-1:-1:-1;;;;;4928:20:26;:4;-1:-1:-1;;;;;4928:20:26;;:60;;;;4952:36;4969:4;4975:12;:10;:12::i;4952:36::-;4907:148;;;;-1:-1:-1;;;4907:148:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5066:16;5085:12;:10;:12::i;:::-;5066:31;;5108:96;5129:8;5139:4;5145:2;5149:21;5167:2;5149:17;:21::i;:::-;5172:25;5190:6;5172:17;:25::i;:::-;5199:4;5108:20;:96::i;:::-;5237:77;5261:6;5237:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5237:19:26;;;;;;;;;;;:77;:23;:77::i;:::-;5215:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5215:19:26;;;;;;;;;;:99;;;;5344:17;;;;;;:29;;5366:6;5344:21;:29::i;:::-;5324:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5324:17:26;;;;;;;;;;;;;:49;;;;5389:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:68;5477:8;5487:4;5493:2;5497;5501:6;5509:4;5446:30;:68::i;598:104:19:-;685:10;598:104;;:::o;1754:187:25:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:25;;;1754:187::o;882:176::-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:25:o;13286:778:26:-;13530:15;:2;-1:-1:-1;;;;;13530:13:26;;:15::i;:::-;13526:532;;;13582:2;-1:-1:-1;;;;;13565:43:26;;13609:8;13619:4;13625:3;13630:7;13639:4;13565:79;;;;;;;;;;;;;-1:-1:-1;;;;;13565:79:26;;;;;;-1:-1:-1;;;;;13565:79:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13565:79:26;;;13561:487;;;;:::i;:::-;;;;;;;;13917:14;;-1:-1:-1;;;13917:14:26;;;;;;;;;;;;;;;;;13924:6;;13917:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13561:487;13971:62;;-1:-1:-1;;;13971:62:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13561:487;13693:64;;;13705:52;13693:64;13689:161;;13781:50;;-1:-1:-1;;;13781:50:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13689:161;13645:219;13286:778;;;;;;:::o;8986:700::-;-1:-1:-1;;;;;9120:16:26;;9112:62;;;;-1:-1:-1;;;9112:62:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9206:7;:14;9192:3;:10;:28;9184:81;;;;-1:-1:-1;;;9184:81:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9276:16;9295:12;:10;:12::i;:::-;9276:31;;9318:66;9339:8;9357:1;9361:2;9365:3;9370:7;9379:4;9318:20;:66::i;:::-;9400:6;9395:124;9416:3;:10;9412:1;:14;9395:124;;;9471:37;9486:9;:17;9496:3;9500:1;9496:6;;;;;;;;;;;;;;9486:17;;;;;;;;;;;:21;9504:2;-1:-1:-1;;;;;9486:21:26;-1:-1:-1;;;;;9486:21:26;;;;;;;;;;;;;9471:7;9479:1;9471:10;;;;;;;;;;;;;;:14;;:37;;;;:::i;:::-;9447:9;:17;9457:3;9461:1;9457:6;;;;;;;;;;;;;;;;;;;9447:17;;;;;;;;;;;;;-1:-1:-1;9447:17:26;;;-1:-1:-1;;;;;9447:21:26;;;;;;;;;:61;9428:3;;9395:124;;;;9570:2;-1:-1:-1;;;;;9534:53:26;9566:1;-1:-1:-1;;;;;9534:53:26;9548:8;-1:-1:-1;;;;;9534:53:26;;9574:3;9579:7;9534:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9598:81;9634:8;9652:1;9656:2;9660:3;9665:7;9674:4;9598:35;:81::i;:::-;8986:700;;;;;:::o;14070:193::-;14189:16;;;14203:1;14189:16;;;;;;;;;14136;;;;14189;;;;;;;;;;;;-1:-1:-1;14189:16:26;14164:41;;14226:7;14215:5;14221:1;14215:8;;;;;;;;;;;;;;;;;:18;14251:5;14070:193;-1:-1:-1;;14070:193:26:o;12539:741::-;12758:15;:2;-1:-1:-1;;;;;12758:13:26;;:15::i;:::-;12754:520;;;12810:2;-1:-1:-1;;;;;12793:38:26;;12832:8;12842:4;12848:2;12852:6;12860:4;12793:72;;;;;;;;;;;;;-1:-1:-1;;;;;12793:72:26;;;;;;-1:-1:-1;;;;;12793:72:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12793:72:26;;;12789:475;;;;:::i;:::-;12914:59;;;12926:47;12914:59;12910:156;;12997:50;;-1:-1:-1;;;12997:50:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:413:34;1086:20;1124:8;;;726:413::o;14:88:36:-;89:3;85:15;;71:31::o;107:883::-;;188:4;170:16;167:26;164:2;;;196:5;;164:2;237:1;232:3;227;212:27;299:10;261:36;292:3;286:10;261:36;:::i;:::-;258:52;248:2;;314:5;;248:2;348;342:9;406:66;388:16;384:89;381:1;375:4;360:114;503:4;497:11;527:16;562:18;633:2;626:4;618:6;614:17;611:25;606:2;598:6;595:14;592:45;589:2;;;640:5;;;;;;589:2;677:6;671:4;667:17;656:28;;713:3;707:10;693:24;;740:2;732:6;729:14;726:2;;;746:5;;;;;;726:2;;807:16;801:4;797:27;790:4;781:6;776:3;772:16;768:27;765:60;762:2;;;828:5;;;;;762:2;884;872:15;889:66;868:88;859:98;;959:4;855:109;851:2;844:121;863:3;-1:-1:-1;;154:836:36;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract LiquidityMiningNFT  is ERC1155 {\n    uint256 private constant nftTypesCount = 4;\n    uint256 private constant leaderboardSize = 10;\n\n    constructor (string memory _uri) ERC1155(_uri) {}\n\n    function mintNFTsForLM(address _liquidiyMiningAddr) external {\n        uint256[] memory _ids = new uint256[](nftTypesCount);\n        uint256[] memory _amounts = new uint256[](nftTypesCount);\n\n        for(uint256 i = 1; i <= nftTypesCount; i++) {\n            _ids[i - 1] = i;\n            _amounts[i - 1] = i * leaderboardSize; \n        }\n\n        _mintBatch(_liquidiyMiningAddr, _ids, _amounts, \"\");\n    }\n}",
  "sourcePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/LiquidityMiningNFT.sol",
  "ast": {
    "absolutePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/LiquidityMiningNFT.sol",
    "exportedSymbols": {
      "Address": [
        6865
      ],
      "Context": [
        3870
      ],
      "ERC1155": [
        5621
      ],
      "ERC165": [
        4319
      ],
      "IERC1155": [
        5771
      ],
      "IERC1155MetadataURI": [
        5786
      ],
      "IERC1155Receiver": [
        5827
      ],
      "IERC165": [
        4331
      ],
      "LiquidityMiningNFT": [
        2077
      ],
      "SafeMath": [
        4600
      ]
    },
    "id": 2078,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1993,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 1994,
        "nodeType": "ImportDirective",
        "scope": 2078,
        "sourceUnit": 5622,
        "src": "57:59:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1995,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5621,
              "src": "150:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$5621",
                "typeString": "contract ERC1155"
              }
            },
            "id": 1996,
            "nodeType": "InheritanceSpecifier",
            "src": "150:7:4"
          }
        ],
        "contractDependencies": [
          3870,
          4319,
          4331,
          5621,
          5771,
          5786
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2077,
        "linearizedBaseContracts": [
          2077,
          5621,
          5786,
          5771,
          4319,
          4331,
          3870
        ],
        "name": "LiquidityMiningNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1999,
            "mutability": "constant",
            "name": "nftTypesCount",
            "nodeType": "VariableDeclaration",
            "scope": 2077,
            "src": "164:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1997,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "164:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 1998,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "205:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 2002,
            "mutability": "constant",
            "name": "leaderboardSize",
            "nodeType": "VariableDeclaration",
            "scope": 2077,
            "src": "212:45:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "212:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 2001,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "255:2:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2010,
              "nodeType": "Block",
              "src": "311:2:4",
              "statements": []
            },
            "id": 2011,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2007,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2004,
                    "src": "305:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2008,
                "modifierName": {
                  "id": 2006,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5621,
                  "src": "297:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$5621_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "297:13:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 2011,
                  "src": "277:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "276:20:4"
            },
            "returnParameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "311:0:4"
            },
            "scope": 2077,
            "src": "264:49:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "380:343:4",
              "statements": [
                {
                  "assignments": [
                    2020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2020,
                      "mutability": "mutable",
                      "name": "_ids",
                      "nodeType": "VariableDeclaration",
                      "scope": 2075,
                      "src": "390:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2018,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "390:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2019,
                        "nodeType": "ArrayTypeName",
                        "src": "390:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2026,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2024,
                        "name": "nftTypesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "428:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "414:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "418:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2022,
                        "nodeType": "ArrayTypeName",
                        "src": "418:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "414:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "390:52:4"
                },
                {
                  "assignments": [
                    2031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2031,
                      "mutability": "mutable",
                      "name": "_amounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 2075,
                      "src": "452:25:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2029,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "452:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2030,
                        "nodeType": "ArrayTypeName",
                        "src": "452:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2037,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2035,
                        "name": "nftTypesCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "494:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "480:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "484:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2033,
                        "nodeType": "ArrayTypeName",
                        "src": "484:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "452:56:4"
                },
                {
                  "body": {
                    "id": 2066,
                    "nodeType": "Block",
                    "src": "563:92:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 2054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2048,
                              "name": "_ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2020,
                              "src": "577:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2052,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2049,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "582:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "586:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "582:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "577:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2053,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "591:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "577:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2055,
                        "nodeType": "ExpressionStatement",
                        "src": "577:15:4"
                      },
                      {
                        "expression": {
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2056,
                              "name": "_amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2031,
                              "src": "606:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2060,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2057,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2039,
                                "src": "615:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 2058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "619:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "615:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "606:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2061,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2039,
                              "src": "624:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2062,
                              "name": "leaderboardSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2002,
                              "src": "628:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "624:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "606:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2065,
                        "nodeType": "ExpressionStatement",
                        "src": "606:37:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2042,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2039,
                      "src": "538:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 2043,
                      "name": "nftTypesCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1999,
                      "src": "543:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "538:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2067,
                  "initializationExpression": {
                    "assignments": [
                      2039
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2039,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "523:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2038,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2041,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "535:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "523:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "558:3:4",
                      "subExpression": {
                        "id": 2045,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2039,
                        "src": "558:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2047,
                    "nodeType": "ExpressionStatement",
                    "src": "558:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "519:136:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2069,
                        "name": "_liquidiyMiningAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "676:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2070,
                        "name": "_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2020,
                        "src": "697:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2071,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "703:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "713:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2068,
                      "name": "_mintBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5277,
                      "src": "665:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:51:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "665:51:4"
                }
              ]
            },
            "functionSelector": "59b5522a",
            "id": 2076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFTsForLM",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "_liquidiyMiningAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "342:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "341:29:4"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:4"
            },
            "scope": 2077,
            "src": "319:404:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2078,
        "src": "118:607:4"
      }
    ],
    "src": "32:693:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/oleg/go/src/github.com/Bridge-Mutual/bridgemutual-core/contracts/LiquidityMiningNFT.sol",
      "exportedSymbols": {
        "Address": [
          6865
        ],
        "Context": [
          3870
        ],
        "ERC1155": [
          5621
        ],
        "ERC165": [
          4319
        ],
        "IERC1155": [
          5771
        ],
        "IERC1155MetadataURI": [
          5786
        ],
        "IERC1155Receiver": [
          5827
        ],
        "IERC165": [
          4331
        ],
        "LiquidityMiningNFT": [
          2077
        ],
        "SafeMath": [
          4600
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 1993,
        "name": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 5622,
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "scope": 2078,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1994,
        "name": "ImportDirective",
        "src": "57:59:4"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            3870,
            4319,
            4331,
            5621,
            5771,
            5786
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2077,
            5621,
            5786,
            5771,
            4319,
            4331,
            3870
          ],
          "name": "LiquidityMiningNFT",
          "scope": 2078
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1155",
                  "referencedDeclaration": 5621,
                  "type": "contract ERC1155"
                },
                "id": 1995,
                "name": "UserDefinedTypeName",
                "src": "150:7:4"
              }
            ],
            "id": 1996,
            "name": "InheritanceSpecifier",
            "src": "150:7:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "nftTypesCount",
              "scope": 2077,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1997,
                "name": "ElementaryTypeName",
                "src": "164:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "34",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 4",
                  "value": "4"
                },
                "id": 1998,
                "name": "Literal",
                "src": "205:1:4"
              }
            ],
            "id": 1999,
            "name": "VariableDeclaration",
            "src": "164:42:4"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "leaderboardSize",
              "scope": 2077,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 2000,
                "name": "ElementaryTypeName",
                "src": "212:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "3130",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 10",
                  "value": "10"
                },
                "id": 2001,
                "name": "Literal",
                "src": "255:2:4"
              }
            ],
            "id": 2002,
            "name": "VariableDeclaration",
            "src": "212:45:4"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2077,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_uri",
                      "scope": 2011,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2003,
                        "name": "ElementaryTypeName",
                        "src": "277:6:4"
                      }
                    ],
                    "id": 2004,
                    "name": "VariableDeclaration",
                    "src": "277:18:4"
                  }
                ],
                "id": 2005,
                "name": "ParameterList",
                "src": "276:20:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2009,
                "name": "ParameterList",
                "src": "311:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5621,
                      "type": "type(contract ERC1155)",
                      "value": "ERC1155"
                    },
                    "id": 2006,
                    "name": "Identifier",
                    "src": "297:7:4"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2004,
                      "type": "string memory",
                      "value": "_uri"
                    },
                    "id": 2007,
                    "name": "Identifier",
                    "src": "305:4:4"
                  }
                ],
                "id": 2008,
                "name": "ModifierInvocation",
                "src": "297:13:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 2010,
                "name": "Block",
                "src": "311:2:4"
              }
            ],
            "id": 2011,
            "name": "FunctionDefinition",
            "src": "264:49:4"
          },
          {
            "attributes": {
              "functionSelector": "59b5522a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNFTsForLM",
              "scope": 2077,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_liquidiyMiningAddr",
                      "scope": 2076,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2012,
                        "name": "ElementaryTypeName",
                        "src": "342:7:4"
                      }
                    ],
                    "id": 2013,
                    "name": "VariableDeclaration",
                    "src": "342:27:4"
                  }
                ],
                "id": 2014,
                "name": "ParameterList",
                "src": "341:29:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2015,
                "name": "ParameterList",
                "src": "380:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2020
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "_ids",
                          "scope": 2075,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2018,
                                "name": "ElementaryTypeName",
                                "src": "390:7:4"
                              }
                            ],
                            "id": 2019,
                            "name": "ArrayTypeName",
                            "src": "390:9:4"
                          }
                        ],
                        "id": 2020,
                        "name": "VariableDeclaration",
                        "src": "390:21:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 2021,
                                    "name": "ElementaryTypeName",
                                    "src": "418:7:4"
                                  }
                                ],
                                "id": 2022,
                                "name": "ArrayTypeName",
                                "src": "418:9:4"
                              }
                            ],
                            "id": 2023,
                            "name": "NewExpression",
                            "src": "414:13:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1999,
                              "type": "uint256",
                              "value": "nftTypesCount"
                            },
                            "id": 2024,
                            "name": "Identifier",
                            "src": "428:13:4"
                          }
                        ],
                        "id": 2025,
                        "name": "FunctionCall",
                        "src": "414:28:4"
                      }
                    ],
                    "id": 2026,
                    "name": "VariableDeclarationStatement",
                    "src": "390:52:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2031
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "_amounts",
                          "scope": 2075,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2029,
                                "name": "ElementaryTypeName",
                                "src": "452:7:4"
                              }
                            ],
                            "id": 2030,
                            "name": "ArrayTypeName",
                            "src": "452:9:4"
                          }
                        ],
                        "id": 2031,
                        "name": "VariableDeclaration",
                        "src": "452:25:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 2032,
                                    "name": "ElementaryTypeName",
                                    "src": "484:7:4"
                                  }
                                ],
                                "id": 2033,
                                "name": "ArrayTypeName",
                                "src": "484:9:4"
                              }
                            ],
                            "id": 2034,
                            "name": "NewExpression",
                            "src": "480:13:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1999,
                              "type": "uint256",
                              "value": "nftTypesCount"
                            },
                            "id": 2035,
                            "name": "Identifier",
                            "src": "494:13:4"
                          }
                        ],
                        "id": 2036,
                        "name": "FunctionCall",
                        "src": "480:28:4"
                      }
                    ],
                    "id": 2037,
                    "name": "VariableDeclarationStatement",
                    "src": "452:56:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2039
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 2067,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2038,
                                "name": "ElementaryTypeName",
                                "src": "523:7:4"
                              }
                            ],
                            "id": 2039,
                            "name": "VariableDeclaration",
                            "src": "523:9:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 2040,
                            "name": "Literal",
                            "src": "535:1:4"
                          }
                        ],
                        "id": 2041,
                        "name": "VariableDeclarationStatement",
                        "src": "523:13:4"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2039,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2042,
                            "name": "Identifier",
                            "src": "538:1:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1999,
                              "type": "uint256",
                              "value": "nftTypesCount"
                            },
                            "id": 2043,
                            "name": "Identifier",
                            "src": "543:13:4"
                          }
                        ],
                        "id": 2044,
                        "name": "BinaryOperation",
                        "src": "538:18:4"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2039,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2045,
                                "name": "Identifier",
                                "src": "558:1:4"
                              }
                            ],
                            "id": 2046,
                            "name": "UnaryOperation",
                            "src": "558:3:4"
                          }
                        ],
                        "id": 2047,
                        "name": "ExpressionStatement",
                        "src": "558:3:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2020,
                                          "type": "uint256[] memory",
                                          "value": "_ids"
                                        },
                                        "id": 2048,
                                        "name": "Identifier",
                                        "src": "577:4:4"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "-",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2039,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 2049,
                                            "name": "Identifier",
                                            "src": "582:1:4"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 2050,
                                            "name": "Literal",
                                            "src": "586:1:4"
                                          }
                                        ],
                                        "id": 2051,
                                        "name": "BinaryOperation",
                                        "src": "582:5:4"
                                      }
                                    ],
                                    "id": 2052,
                                    "name": "IndexAccess",
                                    "src": "577:11:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2039,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 2053,
                                    "name": "Identifier",
                                    "src": "591:1:4"
                                  }
                                ],
                                "id": 2054,
                                "name": "Assignment",
                                "src": "577:15:4"
                              }
                            ],
                            "id": 2055,
                            "name": "ExpressionStatement",
                            "src": "577:15:4"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2031,
                                          "type": "uint256[] memory",
                                          "value": "_amounts"
                                        },
                                        "id": 2056,
                                        "name": "Identifier",
                                        "src": "606:8:4"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "-",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2039,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 2057,
                                            "name": "Identifier",
                                            "src": "615:1:4"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 2058,
                                            "name": "Literal",
                                            "src": "619:1:4"
                                          }
                                        ],
                                        "id": 2059,
                                        "name": "BinaryOperation",
                                        "src": "615:5:4"
                                      }
                                    ],
                                    "id": 2060,
                                    "name": "IndexAccess",
                                    "src": "606:15:4"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "*",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2039,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2061,
                                        "name": "Identifier",
                                        "src": "624:1:4"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2002,
                                          "type": "uint256",
                                          "value": "leaderboardSize"
                                        },
                                        "id": 2062,
                                        "name": "Identifier",
                                        "src": "628:15:4"
                                      }
                                    ],
                                    "id": 2063,
                                    "name": "BinaryOperation",
                                    "src": "624:19:4"
                                  }
                                ],
                                "id": 2064,
                                "name": "Assignment",
                                "src": "606:37:4"
                              }
                            ],
                            "id": 2065,
                            "name": "ExpressionStatement",
                            "src": "606:37:4"
                          }
                        ],
                        "id": 2066,
                        "name": "Block",
                        "src": "563:92:4"
                      }
                    ],
                    "id": 2067,
                    "name": "ForStatement",
                    "src": "519:136:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5277,
                              "type": "function (address,uint256[] memory,uint256[] memory,bytes memory)",
                              "value": "_mintBatch"
                            },
                            "id": 2068,
                            "name": "Identifier",
                            "src": "665:10:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2013,
                              "type": "address",
                              "value": "_liquidiyMiningAddr"
                            },
                            "id": 2069,
                            "name": "Identifier",
                            "src": "676:19:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2020,
                              "type": "uint256[] memory",
                              "value": "_ids"
                            },
                            "id": 2070,
                            "name": "Identifier",
                            "src": "697:4:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2031,
                              "type": "uint256[] memory",
                              "value": "_amounts"
                            },
                            "id": 2071,
                            "name": "Identifier",
                            "src": "703:8:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 2072,
                            "name": "Literal",
                            "src": "713:2:4"
                          }
                        ],
                        "id": 2073,
                        "name": "FunctionCall",
                        "src": "665:51:4"
                      }
                    ],
                    "id": 2074,
                    "name": "ExpressionStatement",
                    "src": "665:51:4"
                  }
                ],
                "id": 2075,
                "name": "Block",
                "src": "380:343:4"
              }
            ],
            "id": 2076,
            "name": "FunctionDefinition",
            "src": "319:404:4"
          }
        ],
        "id": 2077,
        "name": "ContractDefinition",
        "src": "118:607:4"
      }
    ],
    "id": 2078,
    "name": "SourceUnit",
    "src": "32:693:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-27T09:58:45.887Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}