{
  "contractName": "BmiDAIStaking",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "NFTMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "bmiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "contractsRegistry",
      "outputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "defiYieldGenerator",
      "outputs": [
        {
          "internalType": "contract DefiYieldGenerator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOfNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndexNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "contract ContractsRegistry",
          "name": "_contractsRegistry",
          "type": "address"
        }
      ],
      "name": "initRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "contract IPolicyBook",
          "name": "_policyBook",
          "type": "address"
        }
      ],
      "name": "stakeDAIx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawBMIProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsWithProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "increaseBmiProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "getStakingInfoByTokenID",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stakingStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakedDaiAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "policyBookAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bmiProfit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBmiDaiStaking.StakingInfo",
          "name": "_stakingInfo",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bmiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractsRegistry\",\"outputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defiYieldGenerator\",\"outputs\":[{\"internalType\":\"contract DefiYieldGenerator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"getStakingInfoByTokenID\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedDaiAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyBookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bmiProfit\",\"type\":\"uint256\"}],\"internalType\":\"struct IBmiDaiStaking.StakingInfo\",\"name\":\"_stakingInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseBmiProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ContractsRegistry\",\"name\":\"_contractsRegistry\",\"type\":\"address\"}],\"name\":\"initRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOfNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IPolicyBook\",\"name\":\"_policyBook\",\"type\":\"address\"}],\"name\":\"stakeDAIx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndexNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawBMIProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsWithProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol\":\"BmiDAIStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol\":{\"keccak256\":\"0x2e39cc159f43457be426d144991b0c8c60ad31cc14064b693841152192bb44a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd74557801f3837b6f8ececc9f09105215b35c300b1dcf981a1bf01210e05a44\",\"dweb:/ipfs/QmWDG61dWpkoeGLmanjfH1nXpBwZEPW4J3wufwQs4T6CuY\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol\":{\"keccak256\":\"0xb8225305e29d5f75bade2c49c113bda3f3490507e0fc2045a55903f78c65433a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d74fb8143d515fbafcb3a3796bb43538f22789b7bfb737ec3201adb9c9be4435\",\"dweb:/ipfs/QmZFNDkbzQAELkX6CGBRk7MFGGTmm94Xi52PyNWUTiyz7e\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol\":{\"keccak256\":\"0x52531d7de8a1ff5ba1b9400b21b48ac7702a1f36e1eb4bdb00d6fe71ee8a0f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae8e3ce77eaf3324302fa6f29f5eb5fcebef4ea059d5d5aad9b40b61c34bdf96\",\"dweb:/ipfs/QmV2QJAc9JbYLHjVkPcCNJSNscaBiKB6RuMbVFTH8m1W6D\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol\":{\"keccak256\":\"0xd6bb7c751c23a4a0a15c9626b7487937f0959c2e75e60ed8574b89885d3fc917\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90f2fddd166ffd37a1eb51082c444814441655bcbd15da576d19030fb1382b29\",\"dweb:/ipfs/QmWkxVfmWi5eifxE7dJUfjQTtKy2QEaZmXQg5mPY8nRqcY\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IBmiDaiStaking.sol\":{\"keccak256\":\"0x34502897414f2a033f6b63a1ab6bfd0bf95d28a0b96ad8e1f20c7c8298882115\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd54b297c8662239c9a8115c07144b2176518394dde5b8b90e55a9873b2af63e\",\"dweb:/ipfs/QmZrzbwxnkCxB9ifW8KqZL95Mw3UEgJQBsXdCWaW26JmCV\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0x783163967130219e112777f0f5a42e1bdafad6f8ef31c14a559f4e3880ef7e3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb53118a776b2e05e349de00b8a9b0c62b6d1e59e6160e298e3b176b70ebcca\",\"dweb:/ipfs/QmQw8yc7Y4CmJzBs5N49N6JAkoKgCzMLweHSrngmhKhqCw\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0x5dffaaf6e0ece56b03c76eb5d57e758485fc2cca0c46913a2ee2135a5c518493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2aca8141f40390bbd21022d61fac04651cb3ff91dc7702c2654d36d79b188c\",\"dweb:/ipfs/Qmf6xXSP2yasVTD9RaG1rgnY85bPCAtNnBsXxzA1bvHgJa\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155.sol\":{\"keccak256\":\"0xc26b265b91e92fc70a1efcdd7f5797c52bf4366ce65aca7c54c2ac9f1f59a193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79519601d9469c47c7f8be5386b4ce5ebf975f90dfc79f8ef9a182d5cf38ab93\",\"dweb:/ipfs/QmTYjHR9uoz5tbfsCA3zftAdE4iQtKLqaU1MgSnMx69fNQ\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600e553480156200001657600080fd5b50604080516020810190915260008152620000386301ffc9a760e01b620000c8565b62000043816200014d565b62000055636cdb3d1360e11b620000c8565b620000676303a24d0760e21b620000c8565b5060006200007462000166565b600880546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000216565b6001600160e01b0319808216141562000128576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b8051620001629060079060208401906200016a565b5050565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001a25760008555620001ed565b82601f10620001bd57805160ff1916838001178555620001ed565b82800160010185558215620001ed579182015b82811115620001ed578251825591602001919060010190620001d0565b50620001fb929150620001ff565b5090565b5b80821115620001fb576000815560010162000200565b6137a980620002266000396000f3fe608060405234801561001057600080fd5b50600436106101a25760003560e01c80638da5cb5b116100ee578063d0a43afd11610097578063e985e9c511610071578063e985e9c514610342578063f242432a14610355578063f2fde38b14610368578063f5b100ea1461037b576101a2565b8063d0a43afd1461031f578063d77379f114610332578063d98d0c7e1461033a576101a2565b8063be22f546116100c8578063be22f546146102f1578063cc199391146102f9578063cd30a9761461030c576101a2565b80638da5cb5b146102c3578063a22cb465146102cb578063a7fa3c7f146102de576101a2565b80632d8a746e11610150578063715018a61161012a578063715018a6146102a057806381927714146102a8578063843fe5f0146102bb576101a2565b80632d8a746e1461024b5780632eb2c2d61461026b5780634e1273f414610280576101a2565b80630e89341c116101815780630e89341c1461021057806318160ddd146102305780631dcb46f614610238576101a2565b8062fdd58e146101a757806301ffc9a7146101d0578063076befe7146101f0575b600080fd5b6101ba6101b5366004612a0b565b61038e565b6040516101c791906134d4565b60405180910390f35b6101e36101de366004612b15565b6103ea565b6040516101c79190612dc5565b6102036101fe366004612bc0565b610421565b6040516101c791906134a0565b61022361021e366004612bc0565b61049c565b6040516101c79190612dd0565b6101ba610552565b6101ba610246366004612a0b565b610564565b61025e610259366004612bc0565b61058d565b6040516101c79190612c9b565b61027e6102793660046128cd565b6105b5565b005b61029361028e366004612a36565b610831565b6040516101c79190612d8d565b61027e610971565b61027e6102b6366004612bf0565b610a3d565b61025e610c62565b61025e610c71565b61027e6102d93660046129de565b610c80565b61027e6102ec366004612bc0565b610d6c565b61025e6110df565b61027e610307366004612c14565b6110ee565b61027e61031a366004612bc0565b611143565b61027e61032d36600461285d565b61126a565b61025e611694565b61025e6116a3565b6101e3610350366004612895565b6116b2565b61027e610363366004612977565b6116e0565b61027e61037636600461285d565b6118d6565b6101ba61038936600461285d565b6119f9565b60006001600160a01b0383166103bf5760405162461bcd60e51b81526004016103b690612ed4565b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b610429612770565b61043282611a42565b61044e5760405162461bcd60e51b81526004016103b690612f8e565b506000908152600d602090815260409182902082516080810184528154815260018201549281019290925260028101546001600160a01b031692820192909252600390910154606082015290565b60078054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b50505050509050919050565b600061055e6005611a4f565b90505b90565b6001600160a01b03821660009081526004602052604081206105869083611a5a565b9392505050565b60006103e4826040518060600160405280602a8152602001613720602a913960059190611a66565b81518351146105d65760405162461bcd60e51b81526004016103b690613389565b6001600160a01b0384166105fc5760405162461bcd60e51b81526004016103b6906130c7565b610604611a7b565b6001600160a01b0316856001600160a01b0316148061062a575061062a85610350611a7b565b6106465760405162461bcd60e51b81526004016103b690613124565b6000610650611a7b565b9050610660818787878787610829565b60005b84518110156107c357600085828151811061067a57fe5b60200260200101519050600085838151811061069257fe5b602002602001015190506106a582611a42565b156106fe576001600160a01b03891660009081526004602052604090206106cc9083611a7f565b506001600160a01b03881660009081526004602052604090206106ef9083611a8b565b506106fc6005838a611a97565b505b610761816040518060600160405280602a815260200161374a602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054611aad9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546107989082611b44565b60009283526001602081815260408086206001600160a01b038d168752909152909320555001610663565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610813929190612da0565b60405180910390a4610829818787878787611b9e565b505050505050565b606081518351146108545760405162461bcd60e51b81526004016103b69061332c565b6060835167ffffffffffffffff8111801561086e57600080fd5b50604051908082528060200260200182016040528015610898578160200160208202803683370190505b50905060005b84518110156109695760006001600160a01b03168582815181106108be57fe5b60200260200101516001600160a01b031614156108ed5760405162461bcd60e51b81526004016103b690612f31565b600160008583815181106108fd57fe5b60200260200101518152602001908152602001600020600086838151811061092157fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061095657fe5b602090810291909101015260010161089e565b509392505050565b610979611a7b565b6008546001600160a01b039081169116146109db576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6008546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b806001600160a01b03166370a08231610a54611a7b565b6040518263ffffffff1660e01b8152600401610a709190612c9b565b60206040518083038186803b158015610a8857600080fd5b505afa158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac09190612bd8565b821115610adf5760405162461bcd60e51b81526004016103b690613090565b600a54600c546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000926001600160a01b03908116926323b872dd92610b3292879216908890600401612caf565b602060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190612af9565b905080610ba35760405162461bcd60e51b81526004016103b690612fc5565b816001600160a01b03166323b872dd610bba611a7b565b30866040518463ffffffff1660e01b8152600401610bda93929190612caf565b602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c9190612af9565b905080610c4b5760405162461bcd60e51b81526004016103b690613272565b610c5d610c56611a7b565b8484611cff565b505050565b600c546001600160a01b031681565b6008546001600160a01b031690565b816001600160a01b0316610c92611a7b565b6001600160a01b03161415610cb95760405162461bcd60e51b81526004016103b6906132cf565b8060026000610cc6611a7b565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610d28611a7b565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d609190612dc5565b60405180910390a35050565b6000818152600d60205260409020546276a700014211610d9e5760405162461bcd60e51b81526004016103b690613059565b610da6611a7b565b6001600160a01b0316610db88261058d565b6001600160a01b031614610dde5760405162461bcd60e51b81526004016103b690612e9d565b610de6612770565b506000818152600d6020908152604080832081516080810183528154815260018201549381019390935260028101546001600160a01b0390811692840192909252600301546060830152600b54600c54929392908216916323b872dd9116610e4c611a7b565b6000878152600d6020526040908190206003015490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152610e9a93929190600401612caf565b602060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec9190612af9565b905080610f0b5760405162461bcd60e51b81526004016103b690613181565b600a54600c54604080850151602086015191517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03948516946323b872dd94610f639491169291600401612caf565b602060405180830381600087803b158015610f7d57600080fd5b505af1158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb59190612af9565b905080610fd45760405162461bcd60e51b81526004016103b690612fc5565b81604001516001600160a01b031663a9059cbb610fef611a7b565b84602001516040518363ffffffff1660e01b8152600401611011929190612cd3565b602060405180830381600087803b15801561102b57600080fd5b505af115801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190612af9565b9050806110825760405162461bcd60e51b81526004016103b690613272565b61109561108d611a7b565b846001611ead565b50506000908152600d60205260408120818155600181018290556002810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560030155565b600a546001600160a01b031681565b600c546001600160a01b0316611102611a7b565b6001600160a01b0316146111285760405162461bcd60e51b81526004016103b690613443565b6000918252600d602052604090912060030180549091019055565b61114b611a7b565b6001600160a01b031661115d8261058d565b6001600160a01b0316146111835760405162461bcd60e51b81526004016103b690612e9d565b600b54600c546000916001600160a01b03908116916323b872dd91166111a7611a7b565b6000868152600d6020526040908190206003015490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526111f593929190600401612caf565b602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190612af9565b9050806112665760405162461bcd60e51b81526004016103b690613181565b5050565b611272611a7b565b6008546001600160a01b039081169116146112d4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561136157600080fd5b505afa158015611375573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139d9190810190612b4d565b6040518263ffffffff1660e01b81526004016113b99190612dd0565b60206040518083038186803b1580156113d157600080fd5b505afa1580156113e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114099190612879565b600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b03166335817773826001600160a01b03166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561147757600080fd5b505afa15801561148b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b39190810190612b4d565b6040518263ffffffff1660e01b81526004016114cf9190612dd0565b60206040518083038186803b1580156114e757600080fd5b505afa1580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f9190612879565b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600954604080517fc0ed452f00000000000000000000000000000000000000000000000000000000815290519190921691633581777391839163c0ed452f916004808301926000929190829003018186803b1580156115b157600080fd5b505afa1580156115c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ed9190810190612b4d565b6040518263ffffffff1660e01b81526004016116099190612dd0565b60206040518083038186803b15801561162157600080fd5b505afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190612879565b600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b600b546001600160a01b031681565b6009546001600160a01b031681565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166117065760405162461bcd60e51b81526004016103b6906130c7565b61170e611a7b565b6001600160a01b0316856001600160a01b03161480611734575061173485610350611a7b565b6117505760405162461bcd60e51b81526004016103b690612ffc565b600061175a611a7b565b905061177a81878761176b88612025565b61177488612025565b87610829565b61178384611a42565b156117dc576001600160a01b03861660009081526004602052604090206117aa9085611a7f565b506001600160a01b03851660009081526004602052604090206117cd9085611a8b565b506117da60058587611a97565b505b611823836040518060600160405280602a815260200161374a602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190611aad565b60008581526001602090815260408083206001600160a01b038b8116855292528083209390935587168152205461185a9084611b44565b60008581526001602090815260408083206001600160a01b03808b168086529190935292819020939093559151909188811691908416907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62906118c090899089906134f4565b60405180910390a4610829818787878787612069565b6118de611a7b565b6008546001600160a01b03908116911614611940576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166119855760405162461bcd60e51b81526004018080602001828103825260268152602001806136d66026913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006001600160a01b038216611a215760405162461bcd60e51b81526004016103b690612ed4565b6001600160a01b03821660009081526004602052604090206103e490611a4f565b60006103e4600583612184565b60006103e482612190565b60006105868383612194565b6000611a738484846121f8565b949350505050565b3390565b60006105868383612285565b60006105868383612369565b6000611a7384846001600160a01b0385166123b3565b60008184841115611b3c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b01578181015183820152602001611ae9565b50505050905090810190601f168015611b2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610586576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611bb0846001600160a01b031661244a565b15610829576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190611c029089908990889088908890600401612cec565b602060405180830381600087803b158015611c1c57600080fd5b505af1925050508015611c4c575060408051601f3d908101601f19168201909252611c4991810190612b31565b60015b611c9557611c5861359c565b80611c635750611c7d565b8060405162461bcd60e51b81526004016103b69190612dd0565b60405162461bcd60e51b81526004016103b690612de3565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611cf65760405162461bcd60e51b81526004016103b690612e40565b50505050505050565b6000611d0a846119f9565b90508260005b82811015611dc3576000611d248783610564565b6000818152600d60205260409020600201549091506001600160a01b0386811691161415611dba57600d60008281526020019081526020016000206001015483019250611d7387826001611ead565b6000818152600d60205260408120818155600181018290556002810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055600301555b50600101611d10565b50611de285600e54600160405180602001604052806000815250612450565b6040805160808101825242815260208082018481526001600160a01b03878116848601908152600060608601818152600e80548352600d909652908790209551865592516001860155516002850180547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055516003909201919091555490517f0176f203df400d7bd5f1b1c9ef36c16709bf3b5d9fd35f000a6bae32393f66c391611e959188906134dd565b60405180910390a15050600e80546001019055505050565b6001600160a01b038316611ed35760405162461bcd60e51b81526004016103b6906131b8565b6000611edd611a7b565b9050611f0d81856000611eef87612025565b611ef887612025565b60405180602001604052806000815250610829565b8115611f43576001600160a01b0384166000908152600460205260409020611f359084611a7f565b50611f416005846125e6565b505b611f8a826040518060600160405280602481526020016136fc6024913960008681526001602090815260408083206001600160a01b038b1684529091529020549190611aad565b60008481526001602090815260408083206001600160a01b0389168452825280832093909355858252600390522054611fc390836125f2565b6000848152600360205260408082209290925590516001600160a01b0386811691908416907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629061201790889088906134f4565b60405180910390a450505050565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061205857fe5b602090810291909101015292915050565b61207b846001600160a01b031661244a565b15610829576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906120cd9089908990889088908890600401612d4a565b602060405180830381600087803b1580156120e757600080fd5b505af1925050508015612117575060408051601f3d908101601f1916820190925261211491810190612b31565b60015b61212357611c5861359c565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611cf65760405162461bcd60e51b81526004016103b690612e40565b60006105868383612634565b5490565b815460009082106121d65760405162461bcd60e51b81526004018080602001828103825260228152602001806136b46022913960400191505060405180910390fd5b8260000182815481106121e557fe5b9060005260206000200154905092915050565b600082815260018401602052604081205482816122565760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611b01578181015183820152602001611ae9565b5084600001600182038154811061226957fe5b9060005260206000209060020201600101549150509392505050565b6000818152600183016020526040812054801561235f5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191908101906000908790839081106122d657fe5b90600052602060002001549050808760000184815481106122f357fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061232357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506103e4565b60009150506103e4565b60006123758383612634565b6123ab575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e4565b5060006103e4565b600082815260018401602052604081205480612418575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610586565b8285600001600183038154811061242b57fe5b9060005260206000209060020201600101819055506000915050610586565b3b151590565b6001600160a01b0384166124765760405162461bcd60e51b81526004016103b6906133e6565b811580612489575061248783611a42565b155b6124a55760405162461bcd60e51b81526004016103b690613215565b60006124af611a7b565b90506124c18160008761176b88612025565b8260011480156124d757506124d58461264c565b155b1561250d576001600160a01b03851660009081526004602052604090206124fe9085611a8b565b5061250b60058587611a97565b505b60008481526001602090815260408083206001600160a01b038916845290915290205461253a9084611b44565b60008581526001602090815260408083206001600160a01b038a1684528252808320939093558682526003905220546125739084611b44565b6000858152600360205260408082209290925590516001600160a01b038088169291908416907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62906125c890899089906134f4565b60405180910390a46125df81600087878787612069565b5050505050565b60006105868383612660565b600061058683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611aad565b60009081526001919091016020526040902054151590565b600090815260036020526040902054151590565b6000818152600183016020526040812054801561235f5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191908101906000908790839081106126b157fe5b90600052602060002090600202019050808760000184815481106126d157fe5b60009182526020808320845460029093020191825560019384015491840191909155835482528983019052604090209084019055865487908061271057fe5b6000828152602080822060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840201828155600190810183905592909355888152898201909252604082209190915594506103e49350505050565b6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001600081525090565b600082601f8301126127b1578081fd5b81356127c46127bf82613526565b613502565b8181529150602080830190848101818402860182018710156127e557600080fd5b60005b84811015612804578135845292820192908201906001016127e8565b505050505092915050565b600082601f83011261281f578081fd5b813561282d6127bf82613544565b915080825283602082850101111561284457600080fd5b8060208401602084013760009082016020015292915050565b60006020828403121561286e578081fd5b81356105868161365f565b60006020828403121561288a578081fd5b81516105868161365f565b600080604083850312156128a7578081fd5b82356128b28161365f565b915060208301356128c28161365f565b809150509250929050565b600080600080600060a086880312156128e4578081fd5b85356128ef8161365f565b945060208601356128ff8161365f565b9350604086013567ffffffffffffffff8082111561291b578283fd5b61292789838a016127a1565b9450606088013591508082111561293c578283fd5b61294889838a016127a1565b9350608088013591508082111561295d578283fd5b5061296a8882890161280f565b9150509295509295909350565b600080600080600060a0868803121561298e578081fd5b85356129998161365f565b945060208601356129a98161365f565b93506040860135925060608601359150608086013567ffffffffffffffff8111156129d2578182fd5b61296a8882890161280f565b600080604083850312156129f0578182fd5b82356129fb8161365f565b915060208301356128c281613677565b60008060408385031215612a1d578182fd5b8235612a288161365f565b946020939093013593505050565b60008060408385031215612a48578182fd5b823567ffffffffffffffff80821115612a5f578384fd5b818501915085601f830112612a72578384fd5b8135612a806127bf82613526565b80828252602080830192508086018a828387028901011115612aa0578889fd5b8896505b84871015612acb578035612ab78161365f565b845260019690960195928101928101612aa4565b509096508701359350505080821115612ae2578283fd5b50612aef858286016127a1565b9150509250929050565b600060208284031215612b0a578081fd5b815161058681613677565b600060208284031215612b26578081fd5b813561058681613685565b600060208284031215612b42578081fd5b815161058681613685565b600060208284031215612b5e578081fd5b815167ffffffffffffffff811115612b74578182fd5b8201601f81018413612b84578182fd5b8051612b926127bf82613544565b818152856020838501011115612ba6578384fd5b612bb7826020830160208601613566565b95945050505050565b600060208284031215612bd1578081fd5b5035919050565b600060208284031215612be9578081fd5b5051919050565b60008060408385031215612c02578182fd5b8235915060208301356128c28161365f565b60008060408385031215612c26578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015612c6457815187529582019590820190600101612c48565b509495945050505050565b60008151808452612c87816020860160208601613566565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b03808816835280871660208401525060a06040830152612d1860a0830186612c35565b8281036060840152612d2a8186612c35565b90508281036080840152612d3e8185612c6f565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612d8260a0830184612c6f565b979650505050505050565b6000602082526105866020830184612c35565b600060408252612db36040830185612c35565b8281036020840152612bb78185612c35565b901515815260200190565b6000602082526105866020830184612c6f565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560408201527f526563656976657220696d706c656d656e746572000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e73000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f4e6f7420616e204e465420746f6b656e206f776e657200000000000000000000604082015260600190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f455243313135353a2062617463682062616c616e636520717565727920666f7260408201527f20746865207a65726f2061646472657373000000000000000000000000000000606082015260800190565b6020808252601e908201527f4e46542077697468207375636820494420646f65736e27742065786973740000604082015260600190565b6020808252601d908201527f4661696c656420746f207472616e736665722044414920746f6b656e73000000604082015260600190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201527f20617070726f7665640000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f46756e647320617265206c6f636b656420666f722033206d6f6e746800000000604082015260600190565b60208082526012908201527f496e73756666696369656e742066756e64730000000000000000000000000000604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060408201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606082015260800190565b6020808252601d908201527f4661696c656420746f207472616e7366657220424d4920746f6b656e73000000604082015260600190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f455243313135353a204e465420746f6b656e20616c7265616479206d696e746560408201527f6400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f4661696c656420746f207472616e7366657220626d694441497820746f6b656e60408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360408201527f20666f722073656c660000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860408201527f206d69736d617463680000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060408201527f6d69736d61746368000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6360408201527f72656173652070726f6669740000000000000000000000000000000000000000606082015260800190565b81518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b60405181810167ffffffffffffffff8111828210171561351e57fe5b604052919050565b600067ffffffffffffffff82111561353a57fe5b5060209081020190565b600067ffffffffffffffff82111561355857fe5b50601f01601f191660200190565b60005b83811015613581578181015183820152602001613569565b83811115613590576000848401525b50505050565b60e01c90565b600060443d10156135ac57610561565b600481823e6308c379a06135c08251613596565b146135ca57610561565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d67ffffffffffffffff81602484011181841117156136185750505050610561565b828401925082519150808211156136325750505050610561565b503d8301602082840101111561364a57505050610561565b601f01601f1916810160200160405291505090565b6001600160a01b038116811461367457600080fd5b50565b801515811461367457600080fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461367457600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a2646970667358221220c2a5ef817d8d277393133ad3ae884413d06fea5be92c005f1ba300c0b978a4ae64736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a25760003560e01c80638da5cb5b116100ee578063d0a43afd11610097578063e985e9c511610071578063e985e9c514610342578063f242432a14610355578063f2fde38b14610368578063f5b100ea1461037b576101a2565b8063d0a43afd1461031f578063d77379f114610332578063d98d0c7e1461033a576101a2565b8063be22f546116100c8578063be22f546146102f1578063cc199391146102f9578063cd30a9761461030c576101a2565b80638da5cb5b146102c3578063a22cb465146102cb578063a7fa3c7f146102de576101a2565b80632d8a746e11610150578063715018a61161012a578063715018a6146102a057806381927714146102a8578063843fe5f0146102bb576101a2565b80632d8a746e1461024b5780632eb2c2d61461026b5780634e1273f414610280576101a2565b80630e89341c116101815780630e89341c1461021057806318160ddd146102305780631dcb46f614610238576101a2565b8062fdd58e146101a757806301ffc9a7146101d0578063076befe7146101f0575b600080fd5b6101ba6101b5366004612a0b565b61038e565b6040516101c791906134d4565b60405180910390f35b6101e36101de366004612b15565b6103ea565b6040516101c79190612dc5565b6102036101fe366004612bc0565b610421565b6040516101c791906134a0565b61022361021e366004612bc0565b61049c565b6040516101c79190612dd0565b6101ba610552565b6101ba610246366004612a0b565b610564565b61025e610259366004612bc0565b61058d565b6040516101c79190612c9b565b61027e6102793660046128cd565b6105b5565b005b61029361028e366004612a36565b610831565b6040516101c79190612d8d565b61027e610971565b61027e6102b6366004612bf0565b610a3d565b61025e610c62565b61025e610c71565b61027e6102d93660046129de565b610c80565b61027e6102ec366004612bc0565b610d6c565b61025e6110df565b61027e610307366004612c14565b6110ee565b61027e61031a366004612bc0565b611143565b61027e61032d36600461285d565b61126a565b61025e611694565b61025e6116a3565b6101e3610350366004612895565b6116b2565b61027e610363366004612977565b6116e0565b61027e61037636600461285d565b6118d6565b6101ba61038936600461285d565b6119f9565b60006001600160a01b0383166103bf5760405162461bcd60e51b81526004016103b690612ed4565b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b610429612770565b61043282611a42565b61044e5760405162461bcd60e51b81526004016103b690612f8e565b506000908152600d602090815260409182902082516080810184528154815260018201549281019290925260028101546001600160a01b031692820192909252600390910154606082015290565b60078054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b50505050509050919050565b600061055e6005611a4f565b90505b90565b6001600160a01b03821660009081526004602052604081206105869083611a5a565b9392505050565b60006103e4826040518060600160405280602a8152602001613720602a913960059190611a66565b81518351146105d65760405162461bcd60e51b81526004016103b690613389565b6001600160a01b0384166105fc5760405162461bcd60e51b81526004016103b6906130c7565b610604611a7b565b6001600160a01b0316856001600160a01b0316148061062a575061062a85610350611a7b565b6106465760405162461bcd60e51b81526004016103b690613124565b6000610650611a7b565b9050610660818787878787610829565b60005b84518110156107c357600085828151811061067a57fe5b60200260200101519050600085838151811061069257fe5b602002602001015190506106a582611a42565b156106fe576001600160a01b03891660009081526004602052604090206106cc9083611a7f565b506001600160a01b03881660009081526004602052604090206106ef9083611a8b565b506106fc6005838a611a97565b505b610761816040518060600160405280602a815260200161374a602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054611aad9092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546107989082611b44565b60009283526001602081815260408086206001600160a01b038d168752909152909320555001610663565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610813929190612da0565b60405180910390a4610829818787878787611b9e565b505050505050565b606081518351146108545760405162461bcd60e51b81526004016103b69061332c565b6060835167ffffffffffffffff8111801561086e57600080fd5b50604051908082528060200260200182016040528015610898578160200160208202803683370190505b50905060005b84518110156109695760006001600160a01b03168582815181106108be57fe5b60200260200101516001600160a01b031614156108ed5760405162461bcd60e51b81526004016103b690612f31565b600160008583815181106108fd57fe5b60200260200101518152602001908152602001600020600086838151811061092157fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061095657fe5b602090810291909101015260010161089e565b509392505050565b610979611a7b565b6008546001600160a01b039081169116146109db576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6008546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b806001600160a01b03166370a08231610a54611a7b565b6040518263ffffffff1660e01b8152600401610a709190612c9b565b60206040518083038186803b158015610a8857600080fd5b505afa158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac09190612bd8565b821115610adf5760405162461bcd60e51b81526004016103b690613090565b600a54600c546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526000926001600160a01b03908116926323b872dd92610b3292879216908890600401612caf565b602060405180830381600087803b158015610b4c57600080fd5b505af1158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190612af9565b905080610ba35760405162461bcd60e51b81526004016103b690612fc5565b816001600160a01b03166323b872dd610bba611a7b565b30866040518463ffffffff1660e01b8152600401610bda93929190612caf565b602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c9190612af9565b905080610c4b5760405162461bcd60e51b81526004016103b690613272565b610c5d610c56611a7b565b8484611cff565b505050565b600c546001600160a01b031681565b6008546001600160a01b031690565b816001600160a01b0316610c92611a7b565b6001600160a01b03161415610cb95760405162461bcd60e51b81526004016103b6906132cf565b8060026000610cc6611a7b565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610d28611a7b565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d609190612dc5565b60405180910390a35050565b6000818152600d60205260409020546276a700014211610d9e5760405162461bcd60e51b81526004016103b690613059565b610da6611a7b565b6001600160a01b0316610db88261058d565b6001600160a01b031614610dde5760405162461bcd60e51b81526004016103b690612e9d565b610de6612770565b506000818152600d6020908152604080832081516080810183528154815260018201549381019390935260028101546001600160a01b0390811692840192909252600301546060830152600b54600c54929392908216916323b872dd9116610e4c611a7b565b6000878152600d6020526040908190206003015490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152610e9a93929190600401612caf565b602060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec9190612af9565b905080610f0b5760405162461bcd60e51b81526004016103b690613181565b600a54600c54604080850151602086015191517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03948516946323b872dd94610f639491169291600401612caf565b602060405180830381600087803b158015610f7d57600080fd5b505af1158015610f91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb59190612af9565b905080610fd45760405162461bcd60e51b81526004016103b690612fc5565b81604001516001600160a01b031663a9059cbb610fef611a7b565b84602001516040518363ffffffff1660e01b8152600401611011929190612cd3565b602060405180830381600087803b15801561102b57600080fd5b505af115801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190612af9565b9050806110825760405162461bcd60e51b81526004016103b690613272565b61109561108d611a7b565b846001611ead565b50506000908152600d60205260408120818155600181018290556002810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560030155565b600a546001600160a01b031681565b600c546001600160a01b0316611102611a7b565b6001600160a01b0316146111285760405162461bcd60e51b81526004016103b690613443565b6000918252600d602052604090912060030180549091019055565b61114b611a7b565b6001600160a01b031661115d8261058d565b6001600160a01b0316146111835760405162461bcd60e51b81526004016103b690612e9d565b600b54600c546000916001600160a01b03908116916323b872dd91166111a7611a7b565b6000868152600d6020526040908190206003015490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526111f593929190600401612caf565b602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190612af9565b9050806112665760405162461bcd60e51b81526004016103b690613181565b5050565b611272611a7b565b6008546001600160a01b039081169116146112d4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038316908117909155604080517fa45611b60000000000000000000000000000000000000000000000000000000081529051633581777391839163a45611b691600480820192600092909190829003018186803b15801561136157600080fd5b505afa158015611375573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139d9190810190612b4d565b6040518263ffffffff1660e01b81526004016113b99190612dd0565b60206040518083038186803b1580156113d157600080fd5b505afa1580156113e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114099190612879565b600a60006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b03166335817773826001600160a01b03166327c300af6040518163ffffffff1660e01b815260040160006040518083038186803b15801561147757600080fd5b505afa15801561148b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114b39190810190612b4d565b6040518263ffffffff1660e01b81526004016114cf9190612dd0565b60206040518083038186803b1580156114e757600080fd5b505afa1580156114fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151f9190612879565b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03928316179055600954604080517fc0ed452f00000000000000000000000000000000000000000000000000000000815290519190921691633581777391839163c0ed452f916004808301926000929190829003018186803b1580156115b157600080fd5b505afa1580156115c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115ed9190810190612b4d565b6040518263ffffffff1660e01b81526004016116099190612dd0565b60206040518083038186803b15801561162157600080fd5b505afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190612879565b600c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039290921691909117905550565b600b546001600160a01b031681565b6009546001600160a01b031681565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166117065760405162461bcd60e51b81526004016103b6906130c7565b61170e611a7b565b6001600160a01b0316856001600160a01b03161480611734575061173485610350611a7b565b6117505760405162461bcd60e51b81526004016103b690612ffc565b600061175a611a7b565b905061177a81878761176b88612025565b61177488612025565b87610829565b61178384611a42565b156117dc576001600160a01b03861660009081526004602052604090206117aa9085611a7f565b506001600160a01b03851660009081526004602052604090206117cd9085611a8b565b506117da60058587611a97565b505b611823836040518060600160405280602a815260200161374a602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190611aad565b60008581526001602090815260408083206001600160a01b038b8116855292528083209390935587168152205461185a9084611b44565b60008581526001602090815260408083206001600160a01b03808b168086529190935292819020939093559151909188811691908416907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62906118c090899089906134f4565b60405180910390a4610829818787878787612069565b6118de611a7b565b6008546001600160a01b03908116911614611940576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166119855760405162461bcd60e51b81526004018080602001828103825260268152602001806136d66026913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60006001600160a01b038216611a215760405162461bcd60e51b81526004016103b690612ed4565b6001600160a01b03821660009081526004602052604090206103e490611a4f565b60006103e4600583612184565b60006103e482612190565b60006105868383612194565b6000611a738484846121f8565b949350505050565b3390565b60006105868383612285565b60006105868383612369565b6000611a7384846001600160a01b0385166123b3565b60008184841115611b3c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611b01578181015183820152602001611ae9565b50505050905090810190601f168015611b2e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610586576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611bb0846001600160a01b031661244a565b15610829576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190611c029089908990889088908890600401612cec565b602060405180830381600087803b158015611c1c57600080fd5b505af1925050508015611c4c575060408051601f3d908101601f19168201909252611c4991810190612b31565b60015b611c9557611c5861359c565b80611c635750611c7d565b8060405162461bcd60e51b81526004016103b69190612dd0565b60405162461bcd60e51b81526004016103b690612de3565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611cf65760405162461bcd60e51b81526004016103b690612e40565b50505050505050565b6000611d0a846119f9565b90508260005b82811015611dc3576000611d248783610564565b6000818152600d60205260409020600201549091506001600160a01b0386811691161415611dba57600d60008281526020019081526020016000206001015483019250611d7387826001611ead565b6000818152600d60205260408120818155600181018290556002810180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055600301555b50600101611d10565b50611de285600e54600160405180602001604052806000815250612450565b6040805160808101825242815260208082018481526001600160a01b03878116848601908152600060608601818152600e80548352600d909652908790209551865592516001860155516002850180547fffffffffffffffffffffffff00000000000000000000000000000000000000001691909216179055516003909201919091555490517f0176f203df400d7bd5f1b1c9ef36c16709bf3b5d9fd35f000a6bae32393f66c391611e959188906134dd565b60405180910390a15050600e80546001019055505050565b6001600160a01b038316611ed35760405162461bcd60e51b81526004016103b6906131b8565b6000611edd611a7b565b9050611f0d81856000611eef87612025565b611ef887612025565b60405180602001604052806000815250610829565b8115611f43576001600160a01b0384166000908152600460205260409020611f359084611a7f565b50611f416005846125e6565b505b611f8a826040518060600160405280602481526020016136fc6024913960008681526001602090815260408083206001600160a01b038b1684529091529020549190611aad565b60008481526001602090815260408083206001600160a01b0389168452825280832093909355858252600390522054611fc390836125f2565b6000848152600360205260408082209290925590516001600160a01b0386811691908416907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629061201790889088906134f4565b60405180910390a450505050565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061205857fe5b602090810291909101015292915050565b61207b846001600160a01b031661244a565b15610829576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906120cd9089908990889088908890600401612d4a565b602060405180830381600087803b1580156120e757600080fd5b505af1925050508015612117575060408051601f3d908101601f1916820190925261211491810190612b31565b60015b61212357611c5861359c565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611cf65760405162461bcd60e51b81526004016103b690612e40565b60006105868383612634565b5490565b815460009082106121d65760405162461bcd60e51b81526004018080602001828103825260228152602001806136b46022913960400191505060405180910390fd5b8260000182815481106121e557fe5b9060005260206000200154905092915050565b600082815260018401602052604081205482816122565760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611b01578181015183820152602001611ae9565b5084600001600182038154811061226957fe5b9060005260206000209060020201600101549150509392505050565b6000818152600183016020526040812054801561235f5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191908101906000908790839081106122d657fe5b90600052602060002001549050808760000184815481106122f357fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061232357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506103e4565b60009150506103e4565b60006123758383612634565b6123ab575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103e4565b5060006103e4565b600082815260018401602052604081205480612418575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610586565b8285600001600183038154811061242b57fe5b9060005260206000209060020201600101819055506000915050610586565b3b151590565b6001600160a01b0384166124765760405162461bcd60e51b81526004016103b6906133e6565b811580612489575061248783611a42565b155b6124a55760405162461bcd60e51b81526004016103b690613215565b60006124af611a7b565b90506124c18160008761176b88612025565b8260011480156124d757506124d58461264c565b155b1561250d576001600160a01b03851660009081526004602052604090206124fe9085611a8b565b5061250b60058587611a97565b505b60008481526001602090815260408083206001600160a01b038916845290915290205461253a9084611b44565b60008581526001602090815260408083206001600160a01b038a1684528252808320939093558682526003905220546125739084611b44565b6000858152600360205260408082209290925590516001600160a01b038088169291908416907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62906125c890899089906134f4565b60405180910390a46125df81600087878787612069565b5050505050565b60006105868383612660565b600061058683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611aad565b60009081526001919091016020526040902054151590565b600090815260036020526040902054151590565b6000818152600183016020526040812054801561235f5783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80830191908101906000908790839081106126b157fe5b90600052602060002090600202019050808760000184815481106126d157fe5b60009182526020808320845460029093020191825560019384015491840191909155835482528983019052604090209084019055865487908061271057fe5b6000828152602080822060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90940193840201828155600190810183905592909355888152898201909252604082209190915594506103e49350505050565b6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001600081525090565b600082601f8301126127b1578081fd5b81356127c46127bf82613526565b613502565b8181529150602080830190848101818402860182018710156127e557600080fd5b60005b84811015612804578135845292820192908201906001016127e8565b505050505092915050565b600082601f83011261281f578081fd5b813561282d6127bf82613544565b915080825283602082850101111561284457600080fd5b8060208401602084013760009082016020015292915050565b60006020828403121561286e578081fd5b81356105868161365f565b60006020828403121561288a578081fd5b81516105868161365f565b600080604083850312156128a7578081fd5b82356128b28161365f565b915060208301356128c28161365f565b809150509250929050565b600080600080600060a086880312156128e4578081fd5b85356128ef8161365f565b945060208601356128ff8161365f565b9350604086013567ffffffffffffffff8082111561291b578283fd5b61292789838a016127a1565b9450606088013591508082111561293c578283fd5b61294889838a016127a1565b9350608088013591508082111561295d578283fd5b5061296a8882890161280f565b9150509295509295909350565b600080600080600060a0868803121561298e578081fd5b85356129998161365f565b945060208601356129a98161365f565b93506040860135925060608601359150608086013567ffffffffffffffff8111156129d2578182fd5b61296a8882890161280f565b600080604083850312156129f0578182fd5b82356129fb8161365f565b915060208301356128c281613677565b60008060408385031215612a1d578182fd5b8235612a288161365f565b946020939093013593505050565b60008060408385031215612a48578182fd5b823567ffffffffffffffff80821115612a5f578384fd5b818501915085601f830112612a72578384fd5b8135612a806127bf82613526565b80828252602080830192508086018a828387028901011115612aa0578889fd5b8896505b84871015612acb578035612ab78161365f565b845260019690960195928101928101612aa4565b509096508701359350505080821115612ae2578283fd5b50612aef858286016127a1565b9150509250929050565b600060208284031215612b0a578081fd5b815161058681613677565b600060208284031215612b26578081fd5b813561058681613685565b600060208284031215612b42578081fd5b815161058681613685565b600060208284031215612b5e578081fd5b815167ffffffffffffffff811115612b74578182fd5b8201601f81018413612b84578182fd5b8051612b926127bf82613544565b818152856020838501011115612ba6578384fd5b612bb7826020830160208601613566565b95945050505050565b600060208284031215612bd1578081fd5b5035919050565b600060208284031215612be9578081fd5b5051919050565b60008060408385031215612c02578182fd5b8235915060208301356128c28161365f565b60008060408385031215612c26578182fd5b50508035926020909101359150565b6000815180845260208085019450808401835b83811015612c6457815187529582019590820190600101612c48565b509495945050505050565b60008151808452612c87816020860160208601613566565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b03808816835280871660208401525060a06040830152612d1860a0830186612c35565b8281036060840152612d2a8186612c35565b90508281036080840152612d3e8185612c6f565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612d8260a0830184612c6f565b979650505050505050565b6000602082526105866020830184612c35565b600060408252612db36040830185612c35565b8281036020840152612bb78185612c35565b901515815260200190565b6000602082526105866020830184612c6f565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560408201527f526563656976657220696d706c656d656e746572000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e73000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f4e6f7420616e204e465420746f6b656e206f776e657200000000000000000000604082015260600190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f455243313135353a2062617463682062616c616e636520717565727920666f7260408201527f20746865207a65726f2061646472657373000000000000000000000000000000606082015260800190565b6020808252601e908201527f4e46542077697468207375636820494420646f65736e27742065786973740000604082015260600190565b6020808252601d908201527f4661696c656420746f207472616e736665722044414920746f6b656e73000000604082015260600190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201527f20617070726f7665640000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f46756e647320617265206c6f636b656420666f722033206d6f6e746800000000604082015260600190565b60208082526012908201527f496e73756666696369656e742066756e64730000000000000000000000000000604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060408201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606082015260800190565b6020808252601d908201527f4661696c656420746f207472616e7366657220424d4920746f6b656e73000000604082015260600190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f455243313135353a204e465420746f6b656e20616c7265616479206d696e746560408201527f6400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f4661696c656420746f207472616e7366657220626d694441497820746f6b656e60408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360408201527f20666f722073656c660000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860408201527f206d69736d617463680000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060408201527f6d69736d61746368000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6360408201527f72656173652070726f6669740000000000000000000000000000000000000000606082015260800190565b81518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b60405181810167ffffffffffffffff8111828210171561351e57fe5b604052919050565b600067ffffffffffffffff82111561353a57fe5b5060209081020190565b600067ffffffffffffffff82111561355857fe5b50601f01601f191660200190565b60005b83811015613581578181015183820152602001613569565b83811115613590576000848401525b50505050565b60e01c90565b600060443d10156135ac57610561565b600481823e6308c379a06135c08251613596565b146135ca57610561565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d67ffffffffffffffff81602484011181841117156136185750505050610561565b828401925082519150808211156136325750505050610561565b503d8301602082840101111561364a57505050610561565b601f01601f1916810160200160405291505090565b6001600160a01b038116811461367457600080fd5b50565b801515811461367457600080fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461367457600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135353a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572a2646970667358221220c2a5ef817d8d277393133ad3ae884413d06fea5be92c005f1ba300c0b978a4ae64736f6c63430007040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:26915:37",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:37",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:622:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "133:24:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "142:5:37"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "149:5:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "135:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "135:20:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "135:20:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "112:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "120:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "108:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "108:17:37"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "127:3:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "104:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "104:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "97:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:34:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "193:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "180:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "180:20:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "170:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "209:78:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_address_$dyn",
                          "nodeType": "YulIdentifier",
                          "src": "233:45:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "233:53:37"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "218:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:69:37"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "209:5:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "296:16:37",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:37"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "300:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "328:5:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "335:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "321:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "321:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "321:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "351:14:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "361:4:37",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "355:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "374:21:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "385:5:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "392:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "381:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "381:14:37"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "374:3:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "404:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "419:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "427:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "415:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "415:15:37"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "408:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "489:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "498:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "501:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "491:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "491:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "491:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "453:6:37"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "465:6:37"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "473:2:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "461:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "461:15:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "449:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "449:28:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "479:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "445:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "445:37:37"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "484:3:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "442:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "442:46:37"
                  },
                  "nodeType": "YulIf",
                  "src": "439:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "514:10:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "523:1:37",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "518:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "582:118:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "603:3:37"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:3:37"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "608:12:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "608:17:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "596:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "596:30:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "596:30:37"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "639:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "650:3:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "655:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "646:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "646:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "639:3:37"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "671:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "682:3:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "687:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "678:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "678:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "671:3:37"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "544:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "547:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "541:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "541:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "555:18:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "557:14:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "566:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "569:1:37",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "562:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "562:9:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "557:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "537:3:37",
                    "statements": []
                  },
                  "src": "533:167:37"
                }
              ]
            },
            "name": "abi_decode_t_array$_t_uint256_$dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "58:6:37",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "66:3:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "74:5:37",
                "type": ""
              }
            ],
            "src": "14:692:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "765:406:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "814:24:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "823:5:37"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "830:5:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "816:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "816:20:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "816:20:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "793:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "801:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "789:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "789:17:37"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "808:3:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "785:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "785:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "778:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "775:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "847:34:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "874:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "861:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "861:20:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "851:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "890:62:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "944:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "914:29:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "914:37:37"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "899:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:53:37"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "890:5:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "968:5:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "975:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "961:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "961:21:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1034:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1043:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1046:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1036:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1036:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1036:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1005:6:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1013:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1001:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1001:19:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1022:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:30:37"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1029:3:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "994:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:39:37"
                  },
                  "nodeType": "YulIf",
                  "src": "991:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "1076:5:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1083:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:16:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1094:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1102:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1090:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:17:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1109:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1059:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:57:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1059:57:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1140:5:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1147:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1136:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1136:18:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1132:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:29:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1163:1:37",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1125:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:40:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:40:37"
                }
              ]
            },
            "name": "abi_decode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "739:6:37",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "747:3:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "755:5:37",
                "type": ""
              }
            ],
            "src": "711:460:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1292:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1301:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1309:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1294:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1294:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1294:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1267:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1276:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1263:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1259:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1259:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1256:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1327:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1353:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1340:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1340:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1331:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1399:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1372:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1372:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1372:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1414:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1424:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1212:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1223:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1235:6:37",
                "type": ""
              }
            ],
            "src": "1176:259:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1521:182:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1567:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1576:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1584:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1569:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1569:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1569:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1542:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1551:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1538:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1538:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1563:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1534:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1534:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1531:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1602:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1621:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1615:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1606:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1667:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1640:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1640:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1682:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1692:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1682:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1487:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1498:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1510:6:37",
                "type": ""
              }
            ],
            "src": "1440:263:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1795:315:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1841:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1850:6:37"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1858:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1843:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1843:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1843:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1816:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1825:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1812:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1837:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1808:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1808:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "1805:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1876:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1902:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1889:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1889:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1880:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1948:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1921:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1921:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1963:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1973:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1963:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1987:47:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2019:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2030:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2015:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2015:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2002:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2002:32:37"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1991:7:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2070:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2043:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2043:35:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2043:35:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2087:17:37",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2097:7:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2087:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1753:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1764:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1776:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1784:6:37",
                "type": ""
              }
            ],
            "src": "1708:402:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2312:932:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2359:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2368:6:37"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2376:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2361:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2361:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2361:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2333:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2342:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2329:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2354:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2325:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:33:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2322:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2394:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2420:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2407:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2407:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2398:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2466:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2439:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2439:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2481:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2491:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2481:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2505:47:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2537:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2548:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2533:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2533:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2520:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2520:32:37"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2509:7:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2588:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2561:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2561:35:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2561:35:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2605:17:37",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2615:7:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2605:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2631:46:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2662:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2673:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2658:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2658:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2645:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:32:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2635:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2686:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2696:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2690:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2741:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2750:6:37"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2758:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2743:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2743:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2743:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2729:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2737:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2726:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2726:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2723:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2776:77:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2825:9:37"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2836:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2821:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2821:22:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2845:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "2786:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2786:67:37"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2776:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2862:48:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2895:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2906:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2891:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2891:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2878:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2878:32:37"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2866:8:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2939:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2948:6:37"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2956:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2941:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2941:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2941:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2925:8:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2935:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2922:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:16:37"
                  },
                  "nodeType": "YulIf",
                  "src": "2919:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2974:79:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3023:9:37"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "3034:8:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3019:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3019:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3045:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "2984:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2984:69:37"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2974:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3062:49:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3095:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3106:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3091:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3091:19:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3078:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:33:37"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "3066:8:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3140:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3149:6:37"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3157:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3142:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3142:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3142:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "3126:8:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3136:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3123:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3123:16:37"
                  },
                  "nodeType": "YulIf",
                  "src": "3120:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3175:63:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3208:9:37"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "3219:8:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3204:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3204:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3230:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3185:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:53:37"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3175:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2246:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2257:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2269:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2277:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2285:6:37",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2293:6:37",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2301:6:37",
                "type": ""
              }
            ],
            "src": "2115:1129:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3396:613:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3443:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3452:6:37"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3460:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3445:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3445:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3445:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3417:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3426:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3413:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3413:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3438:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3409:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3409:33:37"
                  },
                  "nodeType": "YulIf",
                  "src": "3406:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3478:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3504:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3491:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3491:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3482:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3550:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3523:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3523:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3565:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3575:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3565:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3589:47:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3621:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3632:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3617:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3617:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3604:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3604:32:37"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3593:7:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3672:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3645:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3645:35:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3645:35:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3689:17:37",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3699:7:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3689:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3715:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3742:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3753:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3738:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3738:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3725:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3715:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3766:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3793:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3804:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3789:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3789:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3776:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3776:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3766:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3817:47:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3848:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3859:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3844:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3844:19:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3831:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3831:33:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3821:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3907:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3916:6:37"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "3924:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3909:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3909:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3909:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3879:6:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3887:18:37",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3876:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3876:30:37"
                  },
                  "nodeType": "YulIf",
                  "src": "3873:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3942:61:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3975:9:37"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3986:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3971:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3971:22:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3995:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "3952:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3952:51:37"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3942:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3330:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3341:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3353:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3361:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3369:6:37",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3377:6:37",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3385:6:37",
                "type": ""
              }
            ],
            "src": "3249:760:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4098:312:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4144:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4153:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4161:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4146:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4146:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4146:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4119:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4128:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4140:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4111:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4111:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "4108:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4179:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4205:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4192:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4192:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4183:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4251:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4224:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4224:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4224:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4266:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4276:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4266:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4290:47:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4322:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4333:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4305:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4305:32:37"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4294:7:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4370:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4346:23:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4346:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4346:32:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4387:17:37",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4397:7:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4387:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4056:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4067:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4079:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4087:6:37",
                "type": ""
              }
            ],
            "src": "4014:396:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4502:240:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4548:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4557:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4565:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4550:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4550:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4550:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4523:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4532:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4519:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4519:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4544:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4515:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "4512:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4583:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4609:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4596:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4596:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4587:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4655:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4628:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4628:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4628:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4670:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4680:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4670:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4694:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4721:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4732:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4717:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4717:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4704:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4704:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4694:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4460:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4471:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4483:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4491:6:37",
                "type": ""
              }
            ],
            "src": "4415:327:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4884:1178:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4930:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4939:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4947:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4932:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4932:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4932:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4905:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4914:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4901:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4901:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4926:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4897:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4897:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "4894:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4965:37:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4992:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4979:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4979:23:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4969:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5011:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5021:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5015:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5066:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5075:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5083:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5068:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5068:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5068:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5054:6:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5062:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5051:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5051:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "5048:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5101:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5115:9:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5126:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5111:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:22:37"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5105:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5181:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5190:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5198:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5183:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5183:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5183:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5160:2:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5164:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5156:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5156:13:37"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5171:7:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5152:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5152:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5145:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5145:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "5142:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5216:30:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5243:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5230:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5230:16:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5220:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5255:80:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5327:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_address_$dyn",
                          "nodeType": "YulIdentifier",
                          "src": "5281:45:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5281:53:37"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "5266:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:69:37"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "5259:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5344:16:37",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "5357:3:37"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "5348:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "5376:3:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5381:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5369:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:19:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5369:19:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5397:14:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5407:4:37",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "5401:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5420:19:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "5431:3:37"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5436:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5427:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5427:12:37"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "5420:3:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5448:22:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5463:2:37"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5467:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5459:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5459:11:37"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "5452:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5529:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5538:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5546:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5531:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5531:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5531:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5493:2:37"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5501:6:37"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5509:2:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "5497:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5497:15:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5489:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5489:24:37"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "5515:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5485:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5485:33:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5520:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5482:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5482:46:37"
                  },
                  "nodeType": "YulIf",
                  "src": "5479:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5564:15:37",
                  "value": {
                    "name": "value0",
                    "nodeType": "YulIdentifier",
                    "src": "5573:6:37"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5568:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5637:195:37",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5651:30:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "5677:3:37"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "5664:12:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5664:17:37"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5655:5:37",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "5721:5:37"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "5694:26:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5694:33:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5694:33:37"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "5747:3:37"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "5752:5:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5740:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5740:18:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5740:18:37"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5771:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "5782:3:37"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "5787:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5778:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5778:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "5771:3:37"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5803:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "5814:3:37"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "5819:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5810:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5810:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "5803:3:37"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5599:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5602:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5596:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5596:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5610:18:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5612:14:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5621:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5624:1:37",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5617:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5617:9:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5612:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5592:3:37",
                    "statements": []
                  },
                  "src": "5588:244:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5841:15:37",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "5851:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5841:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5865:48:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5898:9:37"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "5909:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5894:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5894:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5881:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5881:32:37"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "5869:8:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5942:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "5951:6:37"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "5959:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5944:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5944:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5944:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "5928:8:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5938:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5925:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5925:16:37"
                  },
                  "nodeType": "YulIf",
                  "src": "5922:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5977:79:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6026:9:37"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "6037:8:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6022:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6022:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6048:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "5987:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5987:69:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5977:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4842:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4853:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4865:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4873:6:37",
                "type": ""
              }
            ],
            "src": "4747:1315:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6145:179:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6191:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6200:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6208:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6193:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6193:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6193:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6166:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6175:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6162:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6162:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6187:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6158:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6158:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "6155:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6226:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6245:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6239:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6239:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6230:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6288:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6264:23:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6264:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6264:30:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6303:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6313:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6303:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6111:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6122:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6134:6:37",
                "type": ""
              }
            ],
            "src": "6067:257:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6398:188:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6444:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6453:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6461:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6446:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6446:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6446:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6419:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6428:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6415:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6415:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6440:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6411:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6411:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "6408:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6479:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6505:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6492:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6483:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6550:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "6524:25:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6524:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6524:32:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6565:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6575:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6565:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6364:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6375:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6387:6:37",
                "type": ""
              }
            ],
            "src": "6329:257:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6671:181:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6717:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6726:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6734:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6719:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6719:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6719:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6692:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6701:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6688:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6688:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6713:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6684:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "6681:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6752:29:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6771:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6765:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6765:16:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6756:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6816:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "6790:25:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6790:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6790:32:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6831:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6841:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6831:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6637:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6648:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6660:6:37",
                "type": ""
              }
            ],
            "src": "6591:261:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6953:189:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6999:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7008:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7016:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7001:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7001:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7001:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6974:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6983:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6970:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6995:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6966:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6966:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "6963:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7034:36:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7060:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7047:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:23:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7038:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7106:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "7079:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7079:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7079:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7121:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7131:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7121:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ContractsRegistry_$1206",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6919:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6930:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6942:6:37",
                "type": ""
              }
            ],
            "src": "6857:285:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7238:605:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7284:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7293:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7301:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7286:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7286:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7286:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7259:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7268:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7255:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7255:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7280:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7251:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7251:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "7248:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7319:30:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7339:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7333:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7333:16:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "7323:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7392:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7401:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7409:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7394:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7394:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7394:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7364:6:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7372:18:37",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7361:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7361:30:37"
                  },
                  "nodeType": "YulIf",
                  "src": "7358:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7427:32:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7441:9:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7452:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7437:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7437:22:37"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7431:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7507:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7516:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7524:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7509:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7509:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7509:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7486:2:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7490:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7482:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7482:13:37"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7497:7:37"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7478:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7478:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7471:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7471:35:37"
                  },
                  "nodeType": "YulIf",
                  "src": "7468:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7542:23:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7562:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7556:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7556:9:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7546:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7574:66:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7632:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "7602:29:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7602:37:37"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "7587:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7587:53:37"
                  },
                  "variables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "7578:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "7656:5:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7663:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7649:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7649:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7649:21:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7720:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7729:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7737:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7722:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7722:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7722:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7693:2:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7697:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7689:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7689:15:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7706:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7685:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7685:24:37"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "7711:7:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7682:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7682:37:37"
                  },
                  "nodeType": "YulIf",
                  "src": "7679:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7781:2:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7785:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7777:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7777:11:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "7794:5:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7801:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7790:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7790:14:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7806:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7755:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7755:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7755:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7822:15:37",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "7832:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7822:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7204:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7215:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7227:6:37",
                "type": ""
              }
            ],
            "src": "7147:696:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7918:120:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7964:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7973:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7981:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7966:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7966:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7966:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7939:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7948:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7935:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7935:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7960:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7931:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7931:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "7928:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7999:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8022:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8009:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8009:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7999:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7884:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7895:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7907:6:37",
                "type": ""
              }
            ],
            "src": "7848:190:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8124:113:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8170:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8179:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8187:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8172:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8172:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8172:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8145:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8154:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8141:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8141:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8166:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "8134:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8205:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8221:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8215:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8215:16:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8205:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8090:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8101:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8113:6:37",
                "type": ""
              }
            ],
            "src": "8043:194:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8349:240:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8395:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8404:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8412:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8397:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8397:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8397:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8370:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8379:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8366:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8366:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8391:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8362:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8362:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "8359:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8430:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8453:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8440:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8440:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8430:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8472:45:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8502:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8513:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8498:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8498:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8485:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8485:32:37"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8476:5:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8553:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "8526:26:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8526:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8526:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8568:15:37",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8578:5:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8568:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_IPolicyBook_$3036",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8307:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8318:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8330:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8338:6:37",
                "type": ""
              }
            ],
            "src": "8242:347:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8681:171:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8727:26:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8736:6:37"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8744:6:37"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8729:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8729:22:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8729:22:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8702:7:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8711:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8698:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8698:23:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8723:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8694:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8694:32:37"
                  },
                  "nodeType": "YulIf",
                  "src": "8691:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8762:33:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8785:9:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8772:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8772:23:37"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8762:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8804:42:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8831:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8842:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8827:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8827:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "8814:12:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8814:32:37"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8804:6:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8639:9:37",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8650:7:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8662:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8670:6:37",
                "type": ""
              }
            ],
            "src": "8594:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8924:376:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8934:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8954:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8948:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8948:12:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8938:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8976:3:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8981:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8969:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8969:19:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8969:19:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8997:14:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9007:4:37",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9001:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9020:19:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9031:3:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9036:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9027:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9027:12:37"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9020:3:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9048:28:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9066:5:37"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9073:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9062:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9062:14:37"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "9052:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9085:12:37",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "9094:3:37"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9089:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9155:120:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9176:3:37"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9187:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9181:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9181:13:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9169:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9169:26:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9169:26:37"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9208:19:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9219:3:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9224:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9215:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9215:12:37"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9208:3:37"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9240:25:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9254:6:37"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9262:2:37"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9250:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9250:15:37"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9240:6:37"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9117:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9120:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9114:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9114:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9128:18:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9130:14:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9139:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9142:1:37",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9135:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9135:9:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9130:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9110:3:37",
                    "statements": []
                  },
                  "src": "9106:169:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9284:10:37",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "9291:3:37"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9284:3:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_uint256_$dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8901:5:37",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8908:3:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8916:3:37",
                "type": ""
              }
            ],
            "src": "8857:443:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9356:267:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9366:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9386:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9380:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9380:12:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9370:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9408:3:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9413:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9401:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9401:19:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9401:19:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9455:5:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9462:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9451:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9451:16:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9473:3:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9478:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9469:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9469:14:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9485:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "9429:21:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9429:63:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9429:63:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9501:116:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "9516:3:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9529:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9537:2:37",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9525:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9525:15:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9542:66:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9521:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9521:88:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9512:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9512:98:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9612:4:37",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9508:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9508:109:37"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9501:3:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9333:5:37",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9340:3:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9348:3:37",
                "type": ""
              }
            ],
            "src": "9305:318:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9729:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9739:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9751:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9762:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9747:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9747:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9739:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9781:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9796:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9804:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9792:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9792:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9774:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9774:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9774:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9698:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9709:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9720:4:37",
                "type": ""
              }
            ],
            "src": "9628:226:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9968:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9978:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9990:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10001:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9986:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9986:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9978:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10020:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10035:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10043:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10031:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10031:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10013:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10013:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10013:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9937:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9948:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9959:4:37",
                "type": ""
              }
            ],
            "src": "9859:234:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10263:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10273:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10285:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10296:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10281:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10281:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10273:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10308:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10318:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10312:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10376:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10391:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10399:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10387:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10387:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10369:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10369:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10369:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10423:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10434:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10419:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10419:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10443:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10451:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10439:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10439:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10412:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10412:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10412:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10475:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10486:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10471:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10471:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10491:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10464:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10464:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10464:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10216:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10227:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10235:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10243:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10254:4:37",
                "type": ""
              }
            ],
            "src": "10098:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10646:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10656:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10668:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10679:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10664:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10664:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10656:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10698:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10713:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10721:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10709:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10709:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10691:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10691:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10691:74:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10785:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10796:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10781:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10781:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10801:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10774:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10774:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10774:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10607:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10618:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10626:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10637:4:37",
                "type": ""
              }
            ],
            "src": "10509:305:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10984:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10994:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11006:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11017:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11002:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11002:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10994:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11029:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11039:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11033:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11097:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11112:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11120:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11108:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11108:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11090:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11090:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11090:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11144:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11155:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11140:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11140:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11164:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11172:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11160:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11160:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11133:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11133:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11133:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11196:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11207:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11192:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11192:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11212:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11185:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11185:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11185:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10937:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10948:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10956:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10964:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10975:4:37",
                "type": ""
              }
            ],
            "src": "10819:406:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11561:532:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11571:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11581:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11575:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11639:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11654:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11662:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11650:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11650:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11632:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11632:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11632:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11686:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11697:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11682:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11682:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11706:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11714:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11702:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11702:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11675:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11675:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11675:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11738:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11749:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11734:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11734:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11754:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11727:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11727:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11727:31:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11767:77:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11816:6:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11828:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11839:3:37",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11824:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11824:19:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "11781:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11781:63:37"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "11771:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11864:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11875:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11860:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11860:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "11884:6:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11892:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11880:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11880:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11853:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11853:50:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11853:50:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11912:64:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11961:6:37"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "11969:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "11926:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11926:50:37"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "11916:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11996:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12007:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11992:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11992:19:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "12017:6:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12025:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12013:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12013:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11985:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11985:51:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11985:51:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12045:42:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12072:6:37"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "12080:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "12053:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12053:34:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12045:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11498:9:37",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11509:6:37",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11517:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11525:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11533:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11541:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11552:4:37",
                "type": ""
              }
            ],
            "src": "11230:863:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12255:241:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12265:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12277:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12288:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12273:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12273:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12265:4:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12300:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12310:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12304:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12368:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12383:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12391:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12379:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12379:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12361:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12361:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12361:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12415:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12426:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12411:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12411:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12435:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12443:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12431:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12431:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12404:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12404:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12404:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12467:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12478:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12463:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12463:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12483:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12456:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12456:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12456:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12208:9:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12219:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12227:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12235:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12246:4:37",
                "type": ""
              }
            ],
            "src": "12098:398:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12732:354:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12742:52:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12752:42:37",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12746:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12810:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12825:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12833:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12821:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12821:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12803:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12803:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12803:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12857:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12868:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12853:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12853:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12877:6:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12885:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12873:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12873:15:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12846:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12846:43:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12846:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12909:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12920:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12905:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12905:18:37"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12925:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12898:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12898:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12898:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12952:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12963:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12948:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12948:18:37"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12968:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12941:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12941:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12941:34:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12995:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13006:3:37",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12991:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12991:19:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13012:3:37",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12984:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12984:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12984:32:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13025:55:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "13052:6:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13064:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13075:3:37",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13060:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13060:19:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "13033:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13033:47:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13025:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12669:9:37",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "12680:6:37",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12688:6:37",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12696:6:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12704:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12712:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12723:4:37",
                "type": ""
              }
            ],
            "src": "12501:585:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13242:116:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13259:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13270:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13252:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13252:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13252:21:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13282:70:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13325:6:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13337:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13348:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13333:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13333:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "13290:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13290:62:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13282:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13211:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13222:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13233:4:37",
                "type": ""
              }
            ],
            "src": "13091:267:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13592:248:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13609:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13620:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13602:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13602:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13602:21:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13632:76:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13681:6:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13693:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13704:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13689:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13689:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "13646:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13646:62:37"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "13636:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13728:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13739:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13724:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13724:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "13748:6:37"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13756:9:37"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13744:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13744:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13717:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13717:50:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13717:50:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13776:58:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13819:6:37"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "13827:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn",
                      "nodeType": "YulIdentifier",
                      "src": "13784:34:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13784:50:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13776:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13553:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13564:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13572:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13583:4:37",
                "type": ""
              }
            ],
            "src": "13363:477:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13940:92:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13950:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13962:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13973:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13958:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13958:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13950:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13992:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "14017:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14010:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14010:14:37"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14003:6:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14003:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13985:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13985:41:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13985:41:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13909:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13920:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13931:4:37",
                "type": ""
              }
            ],
            "src": "13845:187:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14164:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14174:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14186:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14197:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14182:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14182:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14174:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14216:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14231:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14239:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14227:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14227:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14209:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14209:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14209:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ContractsRegistry_$1206__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14133:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14144:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14155:4:37",
                "type": ""
              }
            ],
            "src": "14037:252:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14422:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14432:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14444:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14455:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14440:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14440:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14432:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14474:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14489:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14497:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14485:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14485:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14467:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14467:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14467:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DefiYieldGenerator_$1354__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14391:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14402:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14413:4:37",
                "type": ""
              }
            ],
            "src": "14294:253:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14668:125:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14678:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14690:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14701:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14686:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14686:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14678:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14720:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14735:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14743:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14731:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14731:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14713:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14713:74:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14713:74:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$6274__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14637:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14648:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14659:4:37",
                "type": ""
              }
            ],
            "src": "14552:241:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14919:100:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14936:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14947:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14929:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14929:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14929:21:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14959:54:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14986:6:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14998:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15009:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14994:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14994:18:37"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "14967:18:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14967:46:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14959:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14888:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14899:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14910:4:37",
                "type": ""
              }
            ],
            "src": "14798:221:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15198:242:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15215:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15226:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15208:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15208:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15208:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15249:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15260:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15245:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15245:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15265:2:37",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15238:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15238:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15238:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15288:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15299:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15284:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15284:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15304:34:37",
                        "type": "",
                        "value": "ERC1155: transfer to non ERC1155"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15277:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15277:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15277:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15359:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15370:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15355:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15355:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15375:22:37",
                        "type": "",
                        "value": "Receiver implementer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15348:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15348:50:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15348:50:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15407:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15419:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15430:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15415:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15415:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15407:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15175:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15189:4:37",
                "type": ""
              }
            ],
            "src": "15024:416:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15619:230:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15636:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15647:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15629:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15629:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15629:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15670:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15681:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15666:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15666:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15686:2:37",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15659:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15659:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15659:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15709:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15720:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15705:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15705:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15725:34:37",
                        "type": "",
                        "value": "ERC1155: ERC1155Receiver rejecte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15698:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15698:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15698:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15780:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15791:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15776:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15776:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15796:10:37",
                        "type": "",
                        "value": "d tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15769:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15769:38:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15769:38:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15816:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15828:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15839:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15824:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15824:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15816:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15596:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15610:4:37",
                "type": ""
              }
            ],
            "src": "15445:404:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16028:172:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16045:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16056:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16038:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16038:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16038:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16079:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16090:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16075:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16075:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16095:2:37",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16068:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16068:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16068:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16118:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16129:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16114:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16114:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16134:24:37",
                        "type": "",
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16107:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16107:52:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16107:52:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16168:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16180:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16191:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16176:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16176:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16168:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16005:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16019:4:37",
                "type": ""
              }
            ],
            "src": "15854:346:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16379:233:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16396:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16407:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16389:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16389:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16389:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16430:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16441:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16426:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16426:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16446:2:37",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16419:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16419:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16419:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16469:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16480:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16465:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16465:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16485:34:37",
                        "type": "",
                        "value": "ERC1155: balance query for the z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16458:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16458:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16458:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16540:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16551:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16536:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16536:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16556:13:37",
                        "type": "",
                        "value": "ero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16529:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16529:41:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16529:41:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16579:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16591:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16602:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16587:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16587:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16579:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16356:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16370:4:37",
                "type": ""
              }
            ],
            "src": "16205:407:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16791:239:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16808:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16819:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16801:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16801:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16801:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16842:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16853:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16838:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16838:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16858:2:37",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16831:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16831:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16831:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16881:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16892:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16877:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16877:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16897:34:37",
                        "type": "",
                        "value": "ERC1155: batch balance query for"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16870:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16870:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16870:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16952:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16963:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16948:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16948:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16968:19:37",
                        "type": "",
                        "value": " the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16941:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16941:47:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16941:47:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16997:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17009:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17020:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17005:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17005:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16997:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16768:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16782:4:37",
                "type": ""
              }
            ],
            "src": "16617:413:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17209:180:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17226:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17237:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17219:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17219:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17219:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17260:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17271:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17256:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17256:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17276:2:37",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17249:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17249:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17249:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17299:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17310:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17295:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17295:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17315:32:37",
                        "type": "",
                        "value": "NFT with such ID doesn't exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17288:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17288:60:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17288:60:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17357:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17369:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17380:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17365:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17365:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17357:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2a62bd8fb899d993837fea6aa2bb3e383cdaad28f95fcb3d5a52dbb64c35b6db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17186:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17200:4:37",
                "type": ""
              }
            ],
            "src": "17035:354:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17568:179:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17585:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17596:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17578:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17578:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17578:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17619:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17630:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17615:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17615:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17635:2:37",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17608:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17608:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17608:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17658:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17669:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17654:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17654:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17674:31:37",
                        "type": "",
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17647:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17647:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17647:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17715:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17727:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17738:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17723:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17723:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17715:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17545:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17559:4:37",
                "type": ""
              }
            ],
            "src": "17394:353:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17926:231:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17943:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17954:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17936:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17936:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17936:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17977:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17988:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17973:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17973:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17993:2:37",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17966:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17966:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17966:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18016:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18027:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18012:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18012:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18032:34:37",
                        "type": "",
                        "value": "ERC1155: caller is not owner nor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18005:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18005:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18005:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18087:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18098:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18083:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18083:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18103:11:37",
                        "type": "",
                        "value": " approved"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18076:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18076:39:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18076:39:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18124:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18136:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18147:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18132:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18132:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18124:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17903:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17917:4:37",
                "type": ""
              }
            ],
            "src": "17752:405:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18336:178:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18353:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18364:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18346:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18346:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18346:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18387:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18398:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18383:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18383:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18403:2:37",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18376:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18376:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18376:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18426:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18437:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18422:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18422:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18442:30:37",
                        "type": "",
                        "value": "Funds are locked for 3 month"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18415:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18415:58:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18415:58:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18482:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18494:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18505:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18490:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18490:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18482:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18313:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18327:4:37",
                "type": ""
              }
            ],
            "src": "18162:352:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18693:168:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18710:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18721:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18703:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18703:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18703:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18744:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18755:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18740:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18740:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18760:2:37",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18733:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18733:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18733:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18783:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18794:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18779:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18779:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18799:20:37",
                        "type": "",
                        "value": "Insufficient funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18772:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18772:48:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18772:48:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18829:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18841:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18852:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18837:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18837:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18829:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18670:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18684:4:37",
                "type": ""
              }
            ],
            "src": "18519:342:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19040:227:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19057:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19068:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19050:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19050:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19050:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19091:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19102:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19087:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19087:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19107:2:37",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19080:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19080:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19080:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19130:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19141:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19126:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19126:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19146:34:37",
                        "type": "",
                        "value": "ERC1155: transfer to the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19119:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19119:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19119:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19201:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19212:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19197:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19197:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19217:7:37",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19190:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19190:35:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19190:35:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19234:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19246:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19257:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19242:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19242:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19234:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19017:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19031:4:37",
                "type": ""
              }
            ],
            "src": "18866:401:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19446:240:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19463:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19474:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19456:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19456:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19456:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19497:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19508:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19493:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19493:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19513:2:37",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19486:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19486:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19486:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19536:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19547:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19532:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19532:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19552:34:37",
                        "type": "",
                        "value": "ERC1155: transfer caller is not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19525:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19525:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19525:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19607:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19618:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19603:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19603:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19623:20:37",
                        "type": "",
                        "value": "owner nor approved"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19596:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19596:48:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19596:48:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19653:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19665:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19676:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19661:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19661:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19653:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19423:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19437:4:37",
                "type": ""
              }
            ],
            "src": "19272:414:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19865:179:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19882:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19893:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19875:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19875:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19875:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19916:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19927:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19912:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19912:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19932:2:37",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19905:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19905:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19905:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19955:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19966:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19951:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19951:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19971:31:37",
                        "type": "",
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19944:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19944:59:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19944:59:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20012:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20024:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20035:2:37",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20020:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20020:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20012:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19842:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19856:4:37",
                "type": ""
              }
            ],
            "src": "19691:353:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20223:225:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20240:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20251:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20233:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20233:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20233:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20274:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20285:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20270:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20270:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20290:2:37",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20263:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20263:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20263:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20313:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20324:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20309:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20309:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20329:34:37",
                        "type": "",
                        "value": "ERC1155: burn from the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20302:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20302:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20302:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20384:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20395:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20380:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20380:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20400:5:37",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20373:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20373:33:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20373:33:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20415:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20427:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20438:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20423:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20423:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20415:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20200:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20214:4:37",
                "type": ""
              }
            ],
            "src": "20049:399:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20627:223:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20644:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20655:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20637:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20637:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20637:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20678:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20689:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20674:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20674:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20694:2:37",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20667:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20667:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20667:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20717:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20728:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20713:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20713:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20733:34:37",
                        "type": "",
                        "value": "ERC1155: NFT token already minte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20706:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20706:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20706:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20788:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20799:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20784:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20784:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20804:3:37",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20777:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20777:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20777:31:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20817:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20829:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20840:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20825:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20825:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20817:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b06f829c561e811209d8ef793a05cd23df1a805dff04e0eb74eca82bc7214dc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20604:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20618:4:37",
                "type": ""
              }
            ],
            "src": "20453:397:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21029:223:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21046:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21057:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21039:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21039:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21039:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21080:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21091:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21076:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21076:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21096:2:37",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21069:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21069:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21069:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21119:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21130:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21115:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21115:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21135:34:37",
                        "type": "",
                        "value": "Failed to transfer bmiDAIx token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21108:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21108:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21108:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21190:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21201:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21186:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21186:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21206:3:37",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21179:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21179:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21179:31:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21219:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21231:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21242:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21227:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21227:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21219:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21006:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21020:4:37",
                "type": ""
              }
            ],
            "src": "20855:397:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21431:231:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21448:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21459:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21441:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21441:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21441:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21482:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21493:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21478:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21478:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21498:2:37",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21471:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21471:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21471:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21521:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21532:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21517:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21517:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21537:34:37",
                        "type": "",
                        "value": "ERC1155: setting approval status"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21510:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21510:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21510:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21592:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21603:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21588:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21588:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21608:11:37",
                        "type": "",
                        "value": " for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21581:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21581:39:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21581:39:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21629:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21641:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21652:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21637:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21637:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21629:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21408:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21422:4:37",
                "type": ""
              }
            ],
            "src": "21257:405:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21841:231:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21858:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21869:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21851:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21851:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21851:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21892:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21903:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21888:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21888:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21908:2:37",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21881:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21881:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21881:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21931:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21942:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21927:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21927:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21947:34:37",
                        "type": "",
                        "value": "ERC1155: accounts and ids length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21920:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21920:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21920:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22002:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22013:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21998:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21998:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22018:11:37",
                        "type": "",
                        "value": " mismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21991:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21991:39:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21991:39:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22039:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22051:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22062:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22047:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22047:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22039:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21818:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21832:4:37",
                "type": ""
              }
            ],
            "src": "21667:405:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22251:230:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22268:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22279:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22261:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22261:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22261:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22302:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22313:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22298:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22298:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22318:2:37",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22291:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22291:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22291:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22341:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22352:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22337:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22337:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22357:34:37",
                        "type": "",
                        "value": "ERC1155: ids and amounts length "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22330:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22330:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22330:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22412:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22423:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22408:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22408:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22428:10:37",
                        "type": "",
                        "value": "mismatch"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22401:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22401:38:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22401:38:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22448:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22460:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22471:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22456:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22456:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22448:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22228:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22242:4:37",
                "type": ""
              }
            ],
            "src": "22077:404:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22660:223:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22677:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22688:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22670:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22670:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22670:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22711:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22722:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22707:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22707:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22727:2:37",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22700:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22700:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22700:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22750:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22761:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22746:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22746:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22766:34:37",
                        "type": "",
                        "value": "ERC1155: mint to the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22739:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22739:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22739:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22821:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22832:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22817:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22817:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22837:3:37",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22810:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22810:31:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22810:31:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22850:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22862:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22873:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22858:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22858:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22850:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22637:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22651:4:37",
                "type": ""
              }
            ],
            "src": "22486:397:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23062:234:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23079:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23090:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23072:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23072:21:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23072:21:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23113:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23124:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23109:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23109:18:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23129:2:37",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23102:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23102:30:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23102:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23152:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23163:2:37",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23148:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23148:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23168:34:37",
                        "type": "",
                        "value": "Only generator is allowed to inc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23141:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23141:62:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23141:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23223:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23234:2:37",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23219:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23219:18:37"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23239:14:37",
                        "type": "",
                        "value": "rease profit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23212:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23212:42:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23212:42:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23263:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23275:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23286:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23271:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23271:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23263:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23039:9:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23053:4:37",
                "type": ""
              }
            ],
            "src": "22888:408:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23460:322:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23470:27:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23482:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23493:3:37",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23478:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23478:19:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23470:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23513:9:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "23530:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "23524:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23524:13:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23506:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23506:32:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23506:32:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23558:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23569:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23554:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23554:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "23586:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23594:4:37",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23582:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23582:17:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "23576:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23576:24:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23547:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23547:54:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23547:54:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23621:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23632:4:37",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23617:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23617:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "23653:6:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23661:4:37",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23649:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23649:17:37"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "23643:5:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23643:24:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23669:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "23639:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23639:73:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23610:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23610:103:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23610:103:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23733:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23744:4:37",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23729:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23729:20:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "23761:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "23769:4:37",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "23757:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "23757:17:37"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "23751:5:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23751:24:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23722:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23722:54:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23722:54:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingInfo_$2844_memory_ptr__to_t_struct$_StakingInfo_$2844_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23429:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23440:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23451:4:37",
                "type": ""
              }
            ],
            "src": "23301:481:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23888:76:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23898:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23910:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23921:2:37",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23906:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23906:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23898:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23940:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "23951:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23933:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23933:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23933:25:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23857:9:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "23868:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23879:4:37",
                "type": ""
              }
            ],
            "src": "23787:177:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24098:168:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24108:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24120:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24131:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24116:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24116:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24108:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24150:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24161:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24143:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24143:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24143:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24188:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24199:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24184:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24184:18:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "24208:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24216:42:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "24204:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24204:55:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24177:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24177:83:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24177:83:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24059:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24070:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24078:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24089:4:37",
                "type": ""
              }
            ],
            "src": "23969:297:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24400:119:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24410:26:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24422:9:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24433:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24418:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24418:18:37"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24410:4:37"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24452:9:37"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "24463:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24445:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24445:25:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24445:25:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24490:9:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24501:2:37",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24486:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24486:18:37"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "24506:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24479:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24479:34:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24479:34:37"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24361:9:37",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "24372:6:37",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "24380:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24391:4:37",
                "type": ""
              }
            ],
            "src": "24271:248:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24568:198:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24578:19:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24594:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "24588:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24588:9:37"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "24578:6:37"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "24606:35:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "24628:6:37"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "24636:4:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24624:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24624:17:37"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "24610:10:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24716:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "24718:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24718:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24718:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "24659:10:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24671:18:37",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "24656:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24656:34:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "24695:10:37"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24707:6:37"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "24692:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24692:22:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "24653:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24653:62:37"
                  },
                  "nodeType": "YulIf",
                  "src": "24650:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24745:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "24749:10:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24738:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24738:22:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24738:22:37"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "24548:4:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24557:6:37",
                "type": ""
              }
            ],
            "src": "24524:242:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24846:108:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "24890:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "24892:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "24892:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "24892:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "24862:6:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24870:18:37",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "24859:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24859:30:37"
                  },
                  "nodeType": "YulIf",
                  "src": "24856:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24912:36:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "24928:6:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24936:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "24924:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24924:17:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24943:4:37",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24920:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24920:28:37"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "24912:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_address_$dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "24826:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "24837:4:37",
                "type": ""
              }
            ],
            "src": "24771:183:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25018:181:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25062:13:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "25064:7:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25064:9:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "25064:9:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25034:6:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25042:18:37",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "25031:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25031:30:37"
                  },
                  "nodeType": "YulIf",
                  "src": "25028:2:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25084:109:37",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "25104:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "25112:4:37",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "25100:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25100:17:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25119:66:37",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "25096:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25096:90:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25188:4:37",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25092:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25092:101:37"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "25084:4:37"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "24998:6:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "25009:4:37",
                "type": ""
              }
            ],
            "src": "24959:240:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25257:205:37",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25267:10:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "25276:1:37",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "25271:1:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25336:63:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "25361:3:37"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "25366:1:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "25357:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "25357:11:37"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "25380:3:37"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "25385:1:37"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "25376:3:37"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "25376:11:37"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "25370:5:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "25370:18:37"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "25350:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25350:39:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "25350:39:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "25297:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25300:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "25294:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25294:13:37"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "25308:19:37",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "25310:15:37",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "25319:1:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "25322:2:37",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "25315:3:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25315:10:37"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "25310:1:37"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "25290:3:37",
                    "statements": []
                  },
                  "src": "25286:113:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25425:31:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "25438:3:37"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "25443:6:37"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "25434:3:37"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "25434:16:37"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "25452:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "25427:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "25427:27:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "25427:27:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "25414:1:37"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "25417:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "25411:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25411:13:37"
                  },
                  "nodeType": "YulIf",
                  "src": "25408:2:37"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "25235:3:37",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "25240:3:37",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "25245:6:37",
                "type": ""
              }
            ],
            "src": "25204:258:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25524:31:37",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25526:27:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25542:3:37",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "25547:5:37"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "25538:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25538:15:37"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "25526:8:37"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "25501:5:37",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "25511:8:37",
                "type": ""
              }
            ],
            "src": "25467:88:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25607:836:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25647:9:37",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "25649:5:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "25623:14:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25623:16:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25641:4:37",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "25620:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25620:26:37"
                  },
                  "nodeType": "YulIf",
                  "src": "25617:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "25680:3:37"
                      },
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "25685:3:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25690:1:37",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "25665:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25665:27:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25665:27:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "25765:9:37",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "25767:5:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "25745:3:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "25739:5:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25739:10:37"
                              }
                            ],
                            "functionName": {
                              "name": "shift_right_224_unsigned",
                              "nodeType": "YulIdentifier",
                              "src": "25714:24:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25714:36:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25752:10:37",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "25711:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25711:52:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "25704:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25704:60:37"
                  },
                  "nodeType": "YulIf",
                  "src": "25701:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25783:21:37",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25801:2:37",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "25795:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25795:9:37"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "25787:4:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "25828:4:37"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25834:1:37",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "25841:14:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "25841:16:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25859:66:37",
                            "type": "",
                            "value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25837:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25837:89:37"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "25813:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25813:114:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25813:114:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25936:25:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "25956:4:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "25950:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25950:11:37"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "25940:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "25970:26:37",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "returndatasize",
                      "nodeType": "YulIdentifier",
                      "src": "25980:14:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25980:16:37"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "25974:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "26005:28:37",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "26015:18:37",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "26009:2:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26091:9:37",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "26093:5:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "26051:6:37"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "26059:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "26048:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26048:14:37"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "26071:6:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26079:4:37",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26067:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26067:17:37"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "26086:2:37"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "26064:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26064:25:37"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "26045:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26045:45:37"
                  },
                  "nodeType": "YulIf",
                  "src": "26042:2:37"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "26109:28:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "26124:4:37"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "26130:6:37"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26120:3:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26120:17:37"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "26113:3:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "26146:24:37",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "26166:3:37"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "26160:5:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26160:10:37"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "26150:6:37",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26197:9:37",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "26199:5:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "26185:6:37"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "26193:2:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "26182:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26182:14:37"
                  },
                  "nodeType": "YulIf",
                  "src": "26179:2:37"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26279:9:37",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "26281:5:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "26229:3:37"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "26234:6:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26225:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26225:16:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26243:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26221:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26221:27:37"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "26254:4:37"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "26260:14:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26260:16:37"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26250:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26250:27:37"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "26218:2:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26218:60:37"
                  },
                  "nodeType": "YulIf",
                  "src": "26215:2:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26304:2:37",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "26316:3:37"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "26329:6:37"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26337:2:37",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26325:3:37"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26325:15:37"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26342:66:37",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "26321:3:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26321:88:37"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "26312:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26312:98:37"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26412:4:37",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26308:3:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26308:109:37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26297:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26297:121:37"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26297:121:37"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26427:10:37",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "26434:3:37"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "26427:3:37"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "25599:3:37",
                "type": ""
              }
            ],
            "src": "25560:883:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26495:109:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26582:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "26591:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "26594:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "26584:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26584:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "26584:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "26518:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "26529:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26536:42:37",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "26525:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26525:54:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "26515:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26515:65:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "26508:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26508:73:37"
                  },
                  "nodeType": "YulIf",
                  "src": "26505:2:37"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "26484:5:37",
                "type": ""
              }
            ],
            "src": "26448:156:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26653:76:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26707:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "26716:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "26719:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "26709:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26709:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "26709:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "26676:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26697:5:37"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "26690:6:37"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26690:13:37"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "26683:6:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26683:21:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "26673:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26673:32:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "26666:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26666:40:37"
                  },
                  "nodeType": "YulIf",
                  "src": "26663:2:37"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "26642:5:37",
                "type": ""
              }
            ],
            "src": "26609:120:37"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26780:133:37",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26891:16:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "26900:1:37",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "26903:1:37",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "26893:6:37"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26893:12:37"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "26893:12:37"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "26803:5:37"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "26814:5:37"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "26821:66:37",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "26810:3:37"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "26810:78:37"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "26800:2:37"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26800:89:37"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "26793:6:37"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26793:97:37"
                  },
                  "nodeType": "YulIf",
                  "src": "26790:2:37"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "26769:5:37",
                "type": ""
              }
            ],
            "src": "26734:179:37"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_array$_t_uint256_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let length := calldataload(offset)\n        array := allocateMemory(array_allocation_size_t_array$_t_address_$dyn(length))\n        let dst := array\n        mstore(array, length)\n        let _1 := 0x20\n        dst := add(array, _1)\n        let src := add(offset, _1)\n        if gt(add(add(offset, mul(length, _1)), _1), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let length := calldataload(offset)\n        array := allocateMemory(array_allocation_size_t_bytes(length))\n        mstore(array, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), add(offset, 0x20), length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(value4, value4) }\n        value4 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        let dst := allocateMemory(array_allocation_size_t_array$_t_address_$dyn(length))\n        let dst_1 := dst\n        mstore(dst, length)\n        let _3 := 0x20\n        dst := add(dst, _3)\n        let src := add(_2, _3)\n        if gt(add(add(_2, mul(length, _3)), _3), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_t_address(value)\n            mstore(dst, value)\n            dst := add(dst, _3)\n            src := add(src, _3)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _3))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_array$_t_uint256_$dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_ContractsRegistry_$1206(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := mload(_1)\n        let array := allocateMemory(array_allocation_size_t_bytes(length))\n        mstore(array, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), length)\n        value0 := array\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IPolicyBook_$3036(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_t_array$_t_uint256_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_t_array$_t_uint256_$dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_t_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_t_array$_t_uint256_$dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ContractsRegistry_$1206__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_DefiYieldGenerator_$1354__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$6274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Not an NFT token owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC1155: batch balance query for\")\n        mstore(add(headStart, 96), \" the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a62bd8fb899d993837fea6aa2bb3e383cdaad28f95fcb3d5a52dbb64c35b6db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"NFT with such ID doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Failed to transfer DAI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Funds are locked for 3 month\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Failed to transfer BMI tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8b06f829c561e811209d8ef793a05cd23df1a805dff04e0eb74eca82bc7214dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: NFT token already minte\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Failed to transfer bmiDAIx token\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Only generator is allowed to inc\")\n        mstore(add(headStart, 96), \"rease profit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_StakingInfo_$2844_memory_ptr__to_t_struct$_StakingInfo_$2844_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_t_array$_t_address_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { invalid() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function array_allocation_size_t_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { invalid() }\n        size := add(and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function shift_right_224_unsigned(value) -> newValue\n    { newValue := shr(224, value) }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        returndatacopy(ret, ret, 4)\n        if iszero(eq(shift_right_224_unsigned(mload(ret)), 0x08c379a0)) { leave }\n        let data := mload(64)\n        returndatacopy(data, 4, add(returndatasize(), 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc))\n        let offset := mload(data)\n        let _1 := returndatasize()\n        let _2 := 0xffffffffffffffff\n        if or(gt(offset, _2), gt(add(offset, 0x24), _1)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _2) { leave }\n        if gt(add(add(msg, length), 0x20), add(data, returndatasize())) { leave }\n        mstore(64, add(add(msg, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20))\n        ret := msg\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
      "id": 37,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "355:4782:2:-:0;;;760:1;724:37;;983:28;;;;;;;;;-1:-1:-1;1384:202:20;;;;;;;;;-1:-1:-1;1384:202:20;;768:40:24;-1:-1:-1;;;768:18:24;:40::i;:::-;1434:13:20;1442:4;1434:7;:13::i;:::-;1466:41;-1:-1:-1;;;1466:18:20;:41::i;:::-;1525:54;-1:-1:-1;;;1525:18:20;:54::i;:::-;-1:-1:-1;882:17:23;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:23;-1:-1:-1;;;;;924:18:23;;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:23;-1:-1:-1;;957:43:23;;-1:-1:-1;;957:43:23;848:159;355:4782:2;;1499:198:24;-1:-1:-1;;;;;;1582:25:24;;;;;1574:66;;;;;-1:-1:-1;;;1574:66:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1650:33:24;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1650:40:24;1686:4;1650:40;;;1499:198::o;6101:86:20:-;6167:13;;;;:4;;:13;;;;;:::i;:::-;;6101:86;:::o;598:104:21:-;685:10;598:104;:::o;355:4782:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;355:4782:2;;;-1:-1:-1;355:4782:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "355:4782:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:220:20;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;965:140:24;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4886:249:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1592:97:20:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2227:106::-;;;:::i;2075:146::-;;;;;;:::i;:::-;;:::i;1907:162::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4728:1367::-;;;;;;:::i;:::-;;:::i;:::-;;2565:615;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1706:145:23:-;;;:::i;2377:727:2:-;;;;;;:::i;:::-;;:::i;591:44::-;;;:::i;1083:77:23:-;;;:::i;3186:306:20:-;;;;;;:::i;:::-;;:::i;3507:1167:2:-;;;;;;:::i;:::-;;:::i;535:22::-;;;:::i;4680:200::-;;;;;;:::i;:::-;;:::i;3110:391::-;;;;;;:::i;:::-;;:::i;1017:442::-;;;;;;:::i;:::-;;:::i;563:22::-;;;:::i;486:42::-;;;:::i;3498:158:20:-;;;;;;:::i;:::-;;:::i;3662:1060::-;;;;;;:::i;:::-;;:::i;2000:240:23:-;;;;;;:::i;:::-;;:::i;1695:206:20:-;;;;;;:::i;:::-;;:::i;2339:220::-;2417:7;-1:-1:-1;;;;;2444:21:20;;2436:77;;;;-1:-1:-1;;;2436:77:20;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2530:13:20;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;2530:22:20;;;;;;;;;;2339:220;;;;;:::o;965:140:24:-;1065:33;;1042:4;1065:33;;;;;;;;;;;;;;965:140::o;4886:249:2:-;4968:46;;:::i;:::-;5035:19;5046:7;5035:10;:19::i;:::-;5026:63;;;;-1:-1:-1;;;5026:63:2;;;;;;;:::i;:::-;-1:-1:-1;5107:21:2;;;;:12;:21;;;;;;;;;5100:28;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5100:28:2;;;;;;;;;;;;;;;;;;4886:249::o;1592:97:20:-;1678:4;1671:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:13;;1671:11;;1678:4;;1671:11;;1678:4;1671:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:97;;;:::o;2227:106::-;2271:7;2305:21;:12;:19;:21::i;:::-;2298:28;;2227:106;;:::o;2075:146::-;-1:-1:-1;;;;;2184:20:20;;2158:7;2184:20;;;:13;:20;;;;;:30;;2208:5;2184:23;:30::i;:::-;2177:37;2075:146;-1:-1:-1;;;2075:146:20:o;1907:162::-;1965:7;1991:71;2008:7;1991:71;;;;;;;;;;;;;;;;;:12;;:71;:16;:71::i;4728:1367::-;4982:7;:14;4968:3;:10;:28;4960:81;;;;-1:-1:-1;;;4960:81:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;5059:16:20;;5051:66;;;;-1:-1:-1;;;5051:66:20;;;;;;;:::i;:::-;5156:12;:10;:12::i;:::-;-1:-1:-1;;;;;5148:20:20;:4;-1:-1:-1;;;;;5148:20:20;;:60;;;;5172:36;5189:4;5195:12;:10;:12::i;5172:36::-;5127:157;;;;-1:-1:-1;;;5127:157:20;;;;;;;:::i;:::-;5295:16;5314:12;:10;:12::i;:::-;5295:31;;5337:60;5358:8;5368:4;5374:2;5378:3;5383:7;5392:4;5337:20;:60::i;:::-;5413:9;5408:532;5432:3;:10;5428:1;:14;5408:532;;;5463:10;5476:3;5480:1;5476:6;;;;;;;;;;;;;;5463:19;;5496:14;5513:7;5521:1;5513:10;;;;;;;;;;;;;;5496:27;;5542:14;5553:2;5542:10;:14::i;:::-;5538:169;;;-1:-1:-1;;;;;5576:19:20;;;;;;:13;:19;;;;;:30;;5603:2;5576:26;:30::i;:::-;-1:-1:-1;;;;;;5624:17:20;;;;;;:13;:17;;;;;:25;;5646:2;5624:21;:25::i;:::-;-1:-1:-1;5668:24:20;:12;5685:2;5689;5668:16;:24::i;:::-;;5538:169;5743:123;5784:6;5743:123;;;;;;;;;;;;;;;;;:9;:13;5753:2;5743:13;;;;;;;;;;;:19;5757:4;-1:-1:-1;;;;;5743:19:20;-1:-1:-1;;;;;5743:19:20;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;5721:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5721:19:20;;;;;;;;;;:145;;;;5900:17;;;;;;:29;;5922:6;5900:21;:29::i;:::-;5880:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5880:17:20;;;;;;;;;;:49;-1:-1:-1;5444:3:20;5408:532;;;;5985:2;-1:-1:-1;;;;;5955:47:20;5979:4;-1:-1:-1;;;;;5955:47:20;5969:8;-1:-1:-1;;;;;5955:47:20;;5989:3;5994:7;5955:47;;;;;;;:::i;:::-;;;;;;;;6013:75;6049:8;6059:4;6065:2;6069:3;6074:7;6083:4;6013:35;:75::i;:::-;4728:1367;;;;;;:::o;2565:615::-;2722:16;2781:3;:10;2762:8;:15;:29;2754:83;;;;-1:-1:-1;;;2754:83:20;;;;;;;:::i;:::-;2848:30;2895:8;:15;2881:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2881:30:20;;2848:63;;2927:9;2922:221;2946:8;:15;2942:1;:19;2922:221;;;3013:1;-1:-1:-1;;;;;2990:25:20;:8;2999:1;2990:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2990:25:20;;;2982:87;;;;-1:-1:-1;;;2982:87:20;;;;;;;:::i;:::-;3102:9;:17;3112:3;3116:1;3112:6;;;;;;;;;;;;;;3102:17;;;;;;;;;;;:30;3120:8;3129:1;3120:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3102:30:20;-1:-1:-1;;;;;3102:30:20;;;;;;;;;;;;;3083:13;3097:1;3083:16;;;;;;;;;;;;;;;;;:49;2963:3;;2922:221;;;-1:-1:-1;3160:13:20;2565:615;-1:-1:-1;;;2565:615:20:o;1706:145:23:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:23;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:6:::1;::::0;1775:40:::1;::::0;1812:1:::1;::::0;-1:-1:-1;;;;;1796:6:23::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1825:6;:19:::0;;;::::1;::::0;;1706:145::o;2377:727:2:-;2498:11;-1:-1:-1;;;;;2498:21:2;;2520:12;:10;:12::i;:::-;2498:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2487:7;:46;;2466:111;;;;-1:-1:-1;;;2466:111:2;;;;;;;:::i;:::-;2682:8;;2734:18;;2682:81;;;;;2667:12;;-1:-1:-1;;;;;2682:8:2;;;;:21;;:81;;2712:11;;2734:18;;2755:7;;2682:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2667:96;;2789:7;2781:49;;;;-1:-1:-1;;;2781:49:2;;;;;;;:::i;:::-;2900:11;-1:-1:-1;;;;;2900:24:2;;2925:12;:10;:12::i;:::-;2947:4;2954:7;2900:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2890:72;;2988:7;2980:53;;;;-1:-1:-1;;;2980:53:2;;;;;;;:::i;:::-;3044;3053:12;:10;:12::i;:::-;3067:7;3084:11;3044:8;:53::i;:::-;2377:727;;;:::o;591:44::-;;;-1:-1:-1;;;;;591:44:2;;:::o;1083:77:23:-;1147:6;;-1:-1:-1;;;;;1147:6:23;1083:77;:::o;3186:306:20:-;3304:8;-1:-1:-1;;;;;3288:24:20;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3288:24:20;;;3280:78;;;;-1:-1:-1;;;3280:78:20;;;;;;;:::i;:::-;3414:8;3369:18;:32;3388:12;:10;:12::i;:::-;-1:-1:-1;;;;;3369:32:20;;;;;;;;;;;;;;;;;-1:-1:-1;3369:32:20;;;:42;;;;;;;;;;;;:53;;;;;;;;;;;;;;3452:12;:10;:12::i;:::-;-1:-1:-1;;;;;3437:48:20;;3476:8;3437:48;;;;;;:::i;:::-;;;;;;;;3186:306;;:::o;3507:1167:2:-;3612:21;;;;:12;:21;;;;;:38;464:11;3612:52;3594:15;:70;3585:112;;;;-1:-1:-1;;;3585:112:2;;;;;;;:::i;:::-;3739:12;:10;:12::i;:::-;-1:-1:-1;;;;;3716:35:2;:19;3727:7;3716:10;:19::i;:::-;-1:-1:-1;;;;;3716:35:2;;3707:71;;;;-1:-1:-1;;;3707:71:2;;;;;;;:::i;:::-;3796:45;;:::i;:::-;-1:-1:-1;3844:21:2;;;;:12;:21;;;;;;;;3796:69;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3796:69:2;;;;;;;;;;;;;;;;;3954:8;;3984:18;;3796:69;;3844:21;3954:8;;;;:21;;3984:18;4005:12;:10;:12::i;:::-;4019:21;;;;:12;:21;;;;;;;:31;;;3954:97;;;;;;;;;;;;;;4019:31;3954:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3939:112;;4069:7;4061:49;;;;-1:-1:-1;;;4061:49:2;;;;;;;:::i;:::-;4189:8;;4219:18;;4240:29;;;;;4271:27;;;;4189:110;;;;;-1:-1:-1;;;;;4189:8:2;;;;:21;;:110;;4219:18;;;4240:29;4189:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4179:120;;4317:7;4309:49;;;;-1:-1:-1;;;4309:49:2;;;;;;;:::i;:::-;4442:11;:29;;;-1:-1:-1;;;;;4435:46:2;;4482:12;:10;:12::i;:::-;4496:11;:27;;;4435:89;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4425:99;;4542:7;4534:53;;;;-1:-1:-1;;;4534:53:2;;;;;;;:::i;:::-;4598:31;4604:12;:10;:12::i;:::-;4618:7;4627:1;4598:5;:31::i;:::-;-1:-1:-1;;4646:21:2;;;;:12;:21;;;;;4639:28;;;;;;;;;;;;;;;;;;;;;3507:1167::o;535:22::-;;;-1:-1:-1;;;;;535:22:2;;:::o;4680:200::-;891:18;;-1:-1:-1;;;;;891:18:2;867:12;:10;:12::i;:::-;-1:-1:-1;;;;;867:43:2;;858:101;;;;-1:-1:-1;;;858:101:2;;;;;;;:::i;:::-;4833:21:::1;::::0;;;:12:::1;:21;::::0;;;;;:31:::1;;::::0;;:40;;::::1;4799:74:::0;;4680:200::o;3110:391::-;3214:12;:10;:12::i;:::-;-1:-1:-1;;;;;3191:35:2;:19;3202:7;3191:10;:19::i;:::-;-1:-1:-1;;;;;3191:35:2;;3182:71;;;;-1:-1:-1;;;3182:71:2;;;;;;;:::i;:::-;3338:8;;3368:18;;3323:12;;-1:-1:-1;;;;;3338:8:2;;;;:21;;3368:18;3389:12;:10;:12::i;:::-;3403:21;;;;:12;:21;;;;;;;:31;;;3338:97;;;;;;;;;;;;;;3403:31;3338:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3323:112;;3453:7;3445:49;;;;-1:-1:-1;;;3445:49:2;;;;;;;:::i;:::-;3110:391;;:::o;1017:442::-;1297:12:23;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:23;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1106:17:2::1;:38:::0;;;::::1;-1:-1:-1::0;;;;;1106:38:2;::::1;::::0;;::::1;::::0;;;1204:31:::1;::::0;;;;;;;1173:30:::1;::::0;1106:38;;1204:29:::1;::::0;:31:::1;::::0;;::::1;::::0;-1:-1:-1;;1204:31:2;;;;;;;;1106:38;1204:31;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1204:31:2::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1173:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1155:8;;:82;;;;;-1:-1:-1::0;;;;;1155:82:2::1;;;;;-1:-1:-1::0;;;;;1155:82:2::1;;;;;;1265:18;-1:-1:-1::0;;;;;1265:30:2::1;;1296:18;-1:-1:-1::0;;;;;1296:29:2::1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1296:31:2::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1265:63;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1247:8;:82:::0;;;::::1;-1:-1:-1::0;;;;;1247:82:2;;::::1;;::::0;;1379:17:::1;::::0;1409:41:::1;::::0;;;;;;;1379:17;;;::::1;::::0;:29:::1;::::0;:17;;1409:39:::1;::::0;:41:::1;::::0;;::::1;::::0;-1:-1:-1;;1409:41:2;;;;;;;1379:17;1409:41;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1409:41:2::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1379:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1339:18;:113:::0;;;::::1;-1:-1:-1::0;;;;;1339:113:2;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1017:442:2:o;563:22::-;;;-1:-1:-1;;;;;563:22:2;;:::o;486:42::-;;;-1:-1:-1;;;;;486:42:2;;:::o;3498:158:20:-;-1:-1:-1;;;;;3612:27:20;;;3589:4;3612:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3498:158::o;3662:1060::-;-1:-1:-1;;;;;3877:16:20;;3869:66;;;;-1:-1:-1;;;3869:66:20;;;;;;;:::i;:::-;3974:12;:10;:12::i;:::-;-1:-1:-1;;;;;3966:20:20;:4;-1:-1:-1;;;;;3966:20:20;;:60;;;;3990:36;4007:4;4013:12;:10;:12::i;3990:36::-;3945:148;;;;-1:-1:-1;;;3945:148:20;;;;;;;:::i;:::-;4104:16;4123:12;:10;:12::i;:::-;4104:31;;4146:96;4167:8;4177:4;4183:2;4187:21;4205:2;4187:17;:21::i;:::-;4210:25;4228:6;4210:17;:25::i;:::-;4237:4;4146:20;:96::i;:::-;4257:14;4268:2;4257:10;:14::i;:::-;4253:153;;;-1:-1:-1;;;;;4287:19:20;;;;;;:13;:19;;;;;:30;;4314:2;4287:26;:30::i;:::-;-1:-1:-1;;;;;;4331:17:20;;;;;;:13;:17;;;;;:25;;4353:2;4331:21;:25::i;:::-;-1:-1:-1;4371:24:20;:12;4388:2;4392;4371:16;:24::i;:::-;;4253:153;4438:77;4462:6;4438:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4438:19:20;;;;;;;;;;;:77;:23;:77::i;:::-;4416:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4416:19:20;;;;;;;;;;:99;;;;4545:17;;;;;;:29;;4567:6;4545:21;:29::i;:::-;4525:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;4525:17:20;;;;;;;;;;;;;;:49;;;;4590:46;;4525:17;;4590:46;;;;;;;;;;;;4535:2;;4629:6;;4590:46;:::i;:::-;;;;;;;;4647:68;4678:8;4688:4;4694:2;4698;4702:6;4710:4;4647:30;:68::i;2000:240:23:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:23;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:23;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:23::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:23;;::::1;::::0;2189:6:::1;::::0;2168:38:::1;::::0;2189:6:::1;::::0;2168:38:::1;2216:6;:17:::0;;;::::1;-1:-1:-1::0;;;;;2216:17:23;;;::::1;::::0;;;::::1;::::0;;2000:240::o;1695:206:20:-;1753:7;-1:-1:-1;;;;;1780:19:20;;1772:75;;;;-1:-1:-1;;;1772:75:20;;;;;;;:::i;:::-;-1:-1:-1;;;;;1865:20:20;;;;;;:13;:20;;;;;:29;;:27;:29::i;6307:110::-;6362:4;6385:25;:12;6407:2;6385:21;:25::i;7031:121:35:-;7100:7;7126:19;7134:3;7126:7;:19::i;9214:135:36:-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;8123:202:35:-;8230:7;8272:44;8277:3;8297;8303:12;8272:4;:44::i;:::-;8264:53;8123:202;-1:-1:-1;;;;8123:202:35:o;598:104:21:-;685:10;598:104;:::o;8329:135:36:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;6247:174:35:-;6336:4;6359:55;6364:3;6384;-1:-1:-1;;;;;6398:14:35;;6359:4;:55::i;1754:187:27:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:27;;;1754:187::o;882:176::-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:27;;;;;;;;;;;;;;;;;;;;;;;;;;;11015:778:20;11259:15;:2;-1:-1:-1;;;;;11259:13:20;;:15::i;:::-;11255:532;;;11294:79;;;;;-1:-1:-1;;;;;11294:43:20;;;;;:79;;11338:8;;11348:4;;11354:3;;11359:7;;11368:4;;11294:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11294:79:20;;;;;;;;-1:-1:-1;;11294:79:20;;;;;;;;;;;;:::i;:::-;;;11290:487;;;;:::i;:::-;;;;;;;;11653:6;11646:14;;-1:-1:-1;;;11646:14:20;;;;;;;;:::i;11290:487::-;11700:62;;-1:-1:-1;;;11700:62:20;;;;;;;:::i;11290:487::-;11422:64;;;11434:52;11422:64;11418:161;;11510:50;;-1:-1:-1;;;11510:50:20;;;;;;;:::i;11418:161::-;11374:219;11015:778;;;;;;:::o;1465:902:2:-;1617:21;1641;1654:7;1641:12;:21::i;:::-;1617:45;-1:-1:-1;1694:7:2;1672:19;1712:406;1736:13;1732:1;:17;1712:406;;;1770:15;1788:34;1811:7;1820:1;1788:22;:34::i;:::-;1853:21;;;;:12;:21;;;;;:39;;;:21;;-1:-1:-1;;;;;;1853:61:2;;;:39;;:61;1849:259;;;1949:12;:21;1962:7;1949:21;;;;;;;;;;;:37;;;1934:52;;;;2021:26;2027:7;2036;2045:1;2021:5;:26::i;:::-;2072:21;;;;:12;:21;;;;;2065:28;;;;;;;;;;;;;;;;;;;;;1849:259;-1:-1:-1;1751:3:2;;1712:406;;;;2128:40;2134:7;2143:17;;2162:1;2128:40;;;;;;;;;;;;:5;:40::i;:::-;2212:64;;;;;;;;2224:15;2212:64;;;;;;;;;-1:-1:-1;;;;;2212:64:2;;;;;;;;;-1:-1:-1;2212:64:2;;;;;;2191:17;;;2178:31;;:12;:31;;;;;;;:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:17;2293:37;;;;;;2322:7;;2293:37;:::i;:::-;;;;;;;;-1:-1:-1;;2341:17:2;:19;;;;;;-1:-1:-1;;;1465:902:2:o;8375:740:20:-;-1:-1:-1;;;;;8470:21:20;;8462:69;;;;-1:-1:-1;;;8462:69:20;;;;;;;:::i;:::-;8542:16;8561:12;:10;:12::i;:::-;8542:31;;8584:105;8605:8;8615:7;8632:1;8636:21;8654:2;8636:17;:21::i;:::-;8659:25;8677:6;8659:17;:25::i;:::-;8584:105;;;;;;;;;;;;:20;:105::i;:::-;8720:10;;8716:111;;-1:-1:-1;;;;;8746:22:20;;;;;;:13;:22;;;;;:33;;8776:2;8746:29;:33::i;:::-;-1:-1:-1;8793:23:20;:12;8813:2;8793:19;:23::i;:::-;;8716:111;8862:108;8902:6;8862:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8862:22:20;;;;;;;;;;;:108;:26;:108::i;:::-;8837:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8837:22:20;;;;;;;;;:133;;;;9006:17;;;:13;:17;;;;:29;;9028:6;9006:21;:29::i;:::-;8986:17;;;;:13;:17;;;;;;:49;;;;9051:57;;-1:-1:-1;;;;;9051:57:20;;;;;;;;;;;;9000:2;;9101:6;;9051:57;:::i;:::-;;;;;;;;8375:740;;;;:::o;11799:193::-;11918:16;;;11932:1;11918:16;;;;;;;;;11865;;;;11918;;;;;;;;;;;;-1:-1:-1;11918:16:20;11893:41;;11955:7;11944:5;11950:1;11944:8;;;;;;;;;;;;;;;;;:18;11980:5;11799:193;-1:-1:-1;;11799:193:20:o;10268:741::-;10487:15;:2;-1:-1:-1;;;;;10487:13:20;;:15::i;:::-;10483:520;;;10522:72;;;;;-1:-1:-1;;;;;10522:38:20;;;;;:72;;10561:8;;10571:4;;10577:2;;10581:6;;10589:4;;10522:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10522:72:20;;;;;;;;-1:-1:-1;;10522:72:20;;;;;;;;;;;;:::i;:::-;;;10518:475;;;;:::i;:::-;10643:59;;;10655:47;10643:59;10639:156;;10726:50;;-1:-1:-1;;;10726:50:20;;;;;;;:::i;6799:149:35:-;6883:4;6906:35;6916:3;6936;6906:9;:35::i;4491:108::-;4573:19;;4491:108::o;4452:201:36:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:36;;;;-1:-1:-1;;;4538:73:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;5623:315:35:-;5717:7;5755:17;;;:12;;;:17;;;;;;5805:12;5790:13;5782:36;;;;-1:-1:-1;;;5782:36:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:3;:12;;5895:1;5884:8;:12;5871:26;;;;;;;;;;;;;;;;;;:33;;;5864:40;;;5623:315;;;;;:::o;2212:1512:36:-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;2830:14;;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:36;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:36;2015:12;;1836:678:35;1912:4;2045:17;;;:12;;;:17;;;;;;2077:13;2073:435;;-1:-1:-1;;2161:38:35;;;;;;;;;;;;;;;;;;2143:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2355:19;;2335:17;;;:12;;;:17;;;;;;;:39;2388:11;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;;;726:413:34;1086:20;1124:8;;;726:413::o;6426:888:20:-;-1:-1:-1;;;;;6540:21:20;;6532:67;;;;-1:-1:-1;;;6532:67:20;;;;;;;:::i;:::-;6617:11;;;:30;;;6633:14;6644:2;6633:10;:14::i;:::-;6632:15;6617:30;6609:76;;;;-1:-1:-1;;;6609:76:20;;;;;;;:::i;:::-;6712:16;6731:12;:10;:12::i;:::-;6712:31;;6754:107;6775:8;6793:1;6797:7;6806:21;6824:2;6806:17;:21::i;6754:107::-;6876:6;6886:1;6876:11;:32;;;;;6892:16;6905:2;6892:12;:16::i;:::-;6891:17;6876:32;6872:136;;;-1:-1:-1;;;;;6924:22:20;;;;;;:13;:22;;;;;:30;;6951:2;6924:26;:30::i;:::-;-1:-1:-1;6968:29:20;:12;6985:2;6989:7;6968:16;:29::i;:::-;;6872:136;7043:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7043:22:20;;;;;;;;;;:34;;7070:6;7043:26;:34::i;:::-;7018:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;7018:22:20;;;;;;;;;:59;;;;7107:17;;;:13;:17;;;;:29;;7129:6;7107:21;:29::i;:::-;7087:17;;;;:13;:17;;;;;;:49;;;;7160:57;;-1:-1:-1;;;;;7160:57:20;;;;7087:17;7160:57;;;;;;;;7101:2;;7210:6;;7160:57;:::i;:::-;;;;;;;;7228:79;7259:8;7277:1;7281:7;7290:2;7294:6;7302:4;7228:30;:79::i;:::-;6426:888;;;;;:::o;6580:140:35:-;6657:4;6680:33;6688:3;6708;6680:7;:33::i;1329:134:27:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;4278:123:35:-;4349:4;4372:17;;;:12;;;;;:17;;;;;;:22;;;4278:123::o;6193:108:20:-;6250:4;6273:17;;;:13;:17;;;;;;:21;;;6193:108::o;2682:1517:35:-;2746:4;2879:17;;;:12;;;:17;;;;;;2911:13;;2907:1286;;3337:19;;3291:12;;;;;3337:23;;;;3267:21;;3337:3;;:23;;3629;;;;;;;;;;;;;;;;3600:52;;3774:9;3744:3;:12;;3757:13;3744:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3862:14;;3849:28;;:12;;;:28;;;;;3880:17;;;3849:48;;4003:18;;3849:3;;4003:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4096:17;;;:12;;;:17;;;;;;4089:24;;;;4003:18;-1:-1:-1;4128:11:35;;-1:-1:-1;;;;4128:11:35;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:692:37:-;;127:3;120:4;112:6;108:17;104:27;94:2;;149:5;142;135:20;94:2;193:6;180:20;218:69;233:53;279:6;233:53;:::i;:::-;218:69;:::i;:::-;321:21;;;209:78;-1:-1:-1;361:4:37;381:14;;;;415:15;;;461;;;449:28;;445:37;;442:46;-1:-1:-1;439:2:37;;;501:1;498;491:12;439:2;523:1;533:167;547:6;544:1;541:13;533:167;;;608:17;;596:30;;646:12;;;;678;;;;569:1;562:9;533:167;;;537:3;;;;;84:622;;;;:::o;711:460::-;;808:3;801:4;793:6;789:17;785:27;775:2;;830:5;823;816:20;775:2;874:6;861:20;899:53;914:37;944:6;914:37;:::i;899:53::-;890:62;;975:6;968:5;961:21;1029:3;1022:4;1013:6;1005;1001:19;997:30;994:39;991:2;;;1046:1;1043;1036:12;991:2;1109:6;1102:4;1094:6;1090:17;1083:4;1076:5;1072:16;1059:57;1163:1;1136:18;;;1156:4;1132:29;1125:40;1140:5;765:406;-1:-1:-1;;765:406:37:o;1176:259::-;;1288:2;1276:9;1267:7;1263:23;1259:32;1256:2;;;1309:6;1301;1294:22;1256:2;1353:9;1340:23;1372:33;1399:5;1372:33;:::i;1440:263::-;;1563:2;1551:9;1542:7;1538:23;1534:32;1531:2;;;1584:6;1576;1569:22;1531:2;1621:9;1615:16;1640:33;1667:5;1640:33;:::i;1708:402::-;;;1837:2;1825:9;1816:7;1812:23;1808:32;1805:2;;;1858:6;1850;1843:22;1805:2;1902:9;1889:23;1921:33;1948:5;1921:33;:::i;:::-;1973:5;-1:-1:-1;2030:2:37;2015:18;;2002:32;2043:35;2002:32;2043:35;:::i;:::-;2097:7;2087:17;;;1795:315;;;;;:::o;2115:1129::-;;;;;;2354:3;2342:9;2333:7;2329:23;2325:33;2322:2;;;2376:6;2368;2361:22;2322:2;2420:9;2407:23;2439:33;2466:5;2439:33;:::i;:::-;2491:5;-1:-1:-1;2548:2:37;2533:18;;2520:32;2561:35;2520:32;2561:35;:::i;:::-;2615:7;-1:-1:-1;2673:2:37;2658:18;;2645:32;2696:18;2726:14;;;2723:2;;;2758:6;2750;2743:22;2723:2;2786:67;2845:7;2836:6;2825:9;2821:22;2786:67;:::i;:::-;2776:77;;2906:2;2895:9;2891:18;2878:32;2862:48;;2935:2;2925:8;2922:16;2919:2;;;2956:6;2948;2941:22;2919:2;2984:69;3045:7;3034:8;3023:9;3019:24;2984:69;:::i;:::-;2974:79;;3106:3;3095:9;3091:19;3078:33;3062:49;;3136:2;3126:8;3123:16;3120:2;;;3157:6;3149;3142:22;3120:2;;3185:53;3230:7;3219:8;3208:9;3204:24;3185:53;:::i;:::-;3175:63;;;2312:932;;;;;;;;:::o;3249:760::-;;;;;;3438:3;3426:9;3417:7;3413:23;3409:33;3406:2;;;3460:6;3452;3445:22;3406:2;3504:9;3491:23;3523:33;3550:5;3523:33;:::i;:::-;3575:5;-1:-1:-1;3632:2:37;3617:18;;3604:32;3645:35;3604:32;3645:35;:::i;:::-;3699:7;-1:-1:-1;3753:2:37;3738:18;;3725:32;;-1:-1:-1;3804:2:37;3789:18;;3776:32;;-1:-1:-1;3859:3:37;3844:19;;3831:33;3887:18;3876:30;;3873:2;;;3924:6;3916;3909:22;3873:2;3952:51;3995:7;3986:6;3975:9;3971:22;3952:51;:::i;4014:396::-;;;4140:2;4128:9;4119:7;4115:23;4111:32;4108:2;;;4161:6;4153;4146:22;4108:2;4205:9;4192:23;4224:33;4251:5;4224:33;:::i;:::-;4276:5;-1:-1:-1;4333:2:37;4318:18;;4305:32;4346;4305;4346;:::i;4415:327::-;;;4544:2;4532:9;4523:7;4519:23;4515:32;4512:2;;;4565:6;4557;4550:22;4512:2;4609:9;4596:23;4628:33;4655:5;4628:33;:::i;:::-;4680:5;4732:2;4717:18;;;;4704:32;;-1:-1:-1;;;4502:240:37:o;4747:1315::-;;;4926:2;4914:9;4905:7;4901:23;4897:32;4894:2;;;4947:6;4939;4932:22;4894:2;4992:9;4979:23;5021:18;5062:2;5054:6;5051:14;5048:2;;;5083:6;5075;5068:22;5048:2;5126:6;5115:9;5111:22;5101:32;;5171:7;5164:4;5160:2;5156:13;5152:27;5142:2;;5198:6;5190;5183:22;5142:2;5243;5230:16;5266:69;5281:53;5327:6;5281:53;:::i;5266:69::-;5357:3;5381:6;5376:3;5369:19;5407:4;5436:2;5431:3;5427:12;5420:19;;5467:2;5463;5459:11;5520:7;5515:2;5509;5501:6;5497:15;5493:2;5489:24;5485:33;5482:46;5479:2;;;5546:6;5538;5531:22;5479:2;5573:6;5564:15;;5588:244;5602:6;5599:1;5596:13;5588:244;;;5677:3;5664:17;5694:33;5721:5;5694:33;:::i;:::-;5740:18;;5624:1;5617:9;;;;;5778:12;;;;5810;;5588:244;;;-1:-1:-1;5851:5:37;;-1:-1:-1;5894:18:37;;5881:32;;-1:-1:-1;;;5925:16:37;;;5922:2;;;5959:6;5951;5944:22;5922:2;;5987:69;6048:7;6037:8;6026:9;6022:24;5987:69;:::i;:::-;5977:79;;;4884:1178;;;;;:::o;6067:257::-;;6187:2;6175:9;6166:7;6162:23;6158:32;6155:2;;;6208:6;6200;6193:22;6155:2;6245:9;6239:16;6264:30;6288:5;6264:30;:::i;6329:257::-;;6440:2;6428:9;6419:7;6415:23;6411:32;6408:2;;;6461:6;6453;6446:22;6408:2;6505:9;6492:23;6524:32;6550:5;6524:32;:::i;6591:261::-;;6713:2;6701:9;6692:7;6688:23;6684:32;6681:2;;;6734:6;6726;6719:22;6681:2;6771:9;6765:16;6790:32;6816:5;6790:32;:::i;7147:696::-;;7280:2;7268:9;7259:7;7255:23;7251:32;7248:2;;;7301:6;7293;7286:22;7248:2;7339:9;7333:16;7372:18;7364:6;7361:30;7358:2;;;7409:6;7401;7394:22;7358:2;7437:22;;7490:4;7482:13;;7478:27;-1:-1:-1;7468:2:37;;7524:6;7516;7509:22;7468:2;7562;7556:9;7587:53;7602:37;7632:6;7602:37;:::i;7587:53::-;7663:6;7656:5;7649:21;7711:7;7706:2;7697:6;7693:2;7689:15;7685:24;7682:37;7679:2;;;7737:6;7729;7722:22;7679:2;7755:58;7806:6;7801:2;7794:5;7790:14;7785:2;7781;7777:11;7755:58;:::i;:::-;7832:5;7238:605;-1:-1:-1;;;;;7238:605:37:o;7848:190::-;;7960:2;7948:9;7939:7;7935:23;7931:32;7928:2;;;7981:6;7973;7966:22;7928:2;-1:-1:-1;8009:23:37;;7918:120;-1:-1:-1;7918:120:37:o;8043:194::-;;8166:2;8154:9;8145:7;8141:23;8137:32;8134:2;;;8187:6;8179;8172:22;8134:2;-1:-1:-1;8215:16:37;;8124:113;-1:-1:-1;8124:113:37:o;8242:347::-;;;8391:2;8379:9;8370:7;8366:23;8362:32;8359:2;;;8412:6;8404;8397:22;8359:2;8453:9;8440:23;8430:33;;8513:2;8502:9;8498:18;8485:32;8526:33;8553:5;8526:33;:::i;8594:258::-;;;8723:2;8711:9;8702:7;8698:23;8694:32;8691:2;;;8744:6;8736;8729:22;8691:2;-1:-1:-1;;8772:23:37;;;8842:2;8827:18;;;8814:32;;-1:-1:-1;8681:171:37:o;8857:443::-;;8954:5;8948:12;8981:6;8976:3;8969:19;9007:4;9036:2;9031:3;9027:12;9020:19;;9073:2;9066:5;9062:14;9094:3;9106:169;9120:6;9117:1;9114:13;9106:169;;;9181:13;;9169:26;;9215:12;;;;9250:15;;;;9142:1;9135:9;9106:169;;;-1:-1:-1;9291:3:37;;8924:376;-1:-1:-1;;;;;8924:376:37:o;9305:318::-;;9386:5;9380:12;9413:6;9408:3;9401:19;9429:63;9485:6;9478:4;9473:3;9469:14;9462:4;9455:5;9451:16;9429:63;:::i;:::-;9537:2;9525:15;-1:-1:-1;;9521:88:37;9512:98;;;;9612:4;9508:109;;9356:267;-1:-1:-1;;9356:267:37:o;9628:226::-;-1:-1:-1;;;;;9792:55:37;;;;9774:74;;9762:2;9747:18;;9729:125::o;10098:406::-;-1:-1:-1;;;;;10387:15:37;;;10369:34;;10439:15;;;;10434:2;10419:18;;10412:43;10486:2;10471:18;;10464:34;;;;10296:2;10281:18;;10263:241::o;10509:305::-;-1:-1:-1;;;;;10709:55:37;;;;10691:74;;10796:2;10781:18;;10774:34;10679:2;10664:18;;10646:168::o;11230:863::-;;-1:-1:-1;;;;;11662:2:37;11654:6;11650:15;11639:9;11632:34;11714:2;11706:6;11702:15;11697:2;11686:9;11682:18;11675:43;;11754:3;11749:2;11738:9;11734:18;11727:31;11781:63;11839:3;11828:9;11824:19;11816:6;11781:63;:::i;:::-;11892:9;11884:6;11880:22;11875:2;11864:9;11860:18;11853:50;11926;11969:6;11961;11926:50;:::i;:::-;11912:64;;12025:9;12017:6;12013:22;12007:3;11996:9;11992:19;11985:51;12053:34;12080:6;12072;12053:34;:::i;:::-;12045:42;11561:532;-1:-1:-1;;;;;;;;11561:532:37:o;12501:585::-;;-1:-1:-1;;;;;12833:2:37;12825:6;12821:15;12810:9;12803:34;12885:2;12877:6;12873:15;12868:2;12857:9;12853:18;12846:43;;12925:6;12920:2;12909:9;12905:18;12898:34;12968:6;12963:2;12952:9;12948:18;12941:34;13012:3;13006;12995:9;12991:19;12984:32;13033:47;13075:3;13064:9;13060:19;13052:6;13033:47;:::i;:::-;13025:55;12732:354;-1:-1:-1;;;;;;;12732:354:37:o;13091:267::-;;13270:2;13259:9;13252:21;13290:62;13348:2;13337:9;13333:18;13325:6;13290:62;:::i;13363:477::-;;13620:2;13609:9;13602:21;13646:62;13704:2;13693:9;13689:18;13681:6;13646:62;:::i;:::-;13756:9;13748:6;13744:22;13739:2;13728:9;13724:18;13717:50;13784;13827:6;13819;13784:50;:::i;13845:187::-;14010:14;;14003:22;13985:41;;13973:2;13958:18;;13940:92::o;14798:221::-;;14947:2;14936:9;14929:21;14967:46;15009:2;14998:9;14994:18;14986:6;14967:46;:::i;15024:416::-;15226:2;15208:21;;;15265:2;15245:18;;;15238:30;15304:34;15299:2;15284:18;;15277:62;15375:22;15370:2;15355:18;;15348:50;15430:3;15415:19;;15198:242::o;15445:404::-;15647:2;15629:21;;;15686:2;15666:18;;;15659:30;15725:34;15720:2;15705:18;;15698:62;15796:10;15791:2;15776:18;;15769:38;15839:3;15824:19;;15619:230::o;15854:346::-;16056:2;16038:21;;;16095:2;16075:18;;;16068:30;16134:24;16129:2;16114:18;;16107:52;16191:2;16176:18;;16028:172::o;16205:407::-;16407:2;16389:21;;;16446:2;16426:18;;;16419:30;16485:34;16480:2;16465:18;;16458:62;16556:13;16551:2;16536:18;;16529:41;16602:3;16587:19;;16379:233::o;16617:413::-;16819:2;16801:21;;;16858:2;16838:18;;;16831:30;16897:34;16892:2;16877:18;;16870:62;16968:19;16963:2;16948:18;;16941:47;17020:3;17005:19;;16791:239::o;17035:354::-;17237:2;17219:21;;;17276:2;17256:18;;;17249:30;17315:32;17310:2;17295:18;;17288:60;17380:2;17365:18;;17209:180::o;17394:353::-;17596:2;17578:21;;;17635:2;17615:18;;;17608:30;17674:31;17669:2;17654:18;;17647:59;17738:2;17723:18;;17568:179::o;17752:405::-;17954:2;17936:21;;;17993:2;17973:18;;;17966:30;18032:34;18027:2;18012:18;;18005:62;18103:11;18098:2;18083:18;;18076:39;18147:3;18132:19;;17926:231::o;18162:352::-;18364:2;18346:21;;;18403:2;18383:18;;;18376:30;18442;18437:2;18422:18;;18415:58;18505:2;18490:18;;18336:178::o;18519:342::-;18721:2;18703:21;;;18760:2;18740:18;;;18733:30;18799:20;18794:2;18779:18;;18772:48;18852:2;18837:18;;18693:168::o;18866:401::-;19068:2;19050:21;;;19107:2;19087:18;;;19080:30;19146:34;19141:2;19126:18;;19119:62;19217:7;19212:2;19197:18;;19190:35;19257:3;19242:19;;19040:227::o;19272:414::-;19474:2;19456:21;;;19513:2;19493:18;;;19486:30;19552:34;19547:2;19532:18;;19525:62;19623:20;19618:2;19603:18;;19596:48;19676:3;19661:19;;19446:240::o;19691:353::-;19893:2;19875:21;;;19932:2;19912:18;;;19905:30;19971:31;19966:2;19951:18;;19944:59;20035:2;20020:18;;19865:179::o;20049:399::-;20251:2;20233:21;;;20290:2;20270:18;;;20263:30;20329:34;20324:2;20309:18;;20302:62;20400:5;20395:2;20380:18;;20373:33;20438:3;20423:19;;20223:225::o;20453:397::-;20655:2;20637:21;;;20694:2;20674:18;;;20667:30;20733:34;20728:2;20713:18;;20706:62;20804:3;20799:2;20784:18;;20777:31;20840:3;20825:19;;20627:223::o;20855:397::-;21057:2;21039:21;;;21096:2;21076:18;;;21069:30;21135:34;21130:2;21115:18;;21108:62;21206:3;21201:2;21186:18;;21179:31;21242:3;21227:19;;21029:223::o;21257:405::-;21459:2;21441:21;;;21498:2;21478:18;;;21471:30;21537:34;21532:2;21517:18;;21510:62;21608:11;21603:2;21588:18;;21581:39;21652:3;21637:19;;21431:231::o;21667:405::-;21869:2;21851:21;;;21908:2;21888:18;;;21881:30;21947:34;21942:2;21927:18;;21920:62;22018:11;22013:2;21998:18;;21991:39;22062:3;22047:19;;21841:231::o;22077:404::-;22279:2;22261:21;;;22318:2;22298:18;;;22291:30;22357:34;22352:2;22337:18;;22330:62;22428:10;22423:2;22408:18;;22401:38;22471:3;22456:19;;22251:230::o;22486:397::-;22688:2;22670:21;;;22727:2;22707:18;;;22700:30;22766:34;22761:2;22746:18;;22739:62;22837:3;22832:2;22817:18;;22810:31;22873:3;22858:19;;22660:223::o;22888:408::-;23090:2;23072:21;;;23129:2;23109:18;;;23102:30;23168:34;23163:2;23148:18;;23141:62;23239:14;23234:2;23219:18;;23212:42;23286:3;23271:19;;23062:234::o;23301:481::-;23524:13;;23506:32;;23594:4;23582:17;;;23576:24;23554:20;;;23547:54;23661:4;23649:17;;;23643:24;-1:-1:-1;;;;;23639:73:37;23617:20;;;23610:103;23769:4;23757:17;;;23751:24;23729:20;;;23722:54;;;;23493:3;23478:19;;23460:322::o;23787:177::-;23933:25;;;23921:2;23906:18;;23888:76::o;23969:297::-;24143:25;;;-1:-1:-1;;;;;24204:55:37;24199:2;24184:18;;24177:83;24131:2;24116:18;;24098:168::o;24271:248::-;24445:25;;;24501:2;24486:18;;24479:34;24433:2;24418:18;;24400:119::o;24524:242::-;24594:2;24588:9;24624:17;;;24671:18;24656:34;;24692:22;;;24653:62;24650:2;;;24718:9;24650:2;24745;24738:22;24568:198;;-1:-1:-1;24568:198:37:o;24771:183::-;;24870:18;24862:6;24859:30;24856:2;;;24892:9;24856:2;-1:-1:-1;24943:4:37;24924:17;;;24920:28;;24846:108::o;24959:240::-;;25042:18;25034:6;25031:30;25028:2;;;25064:9;25028:2;-1:-1:-1;25112:4:37;25100:17;-1:-1:-1;;25096:90:37;25188:4;25092:101;;25018:181::o;25204:258::-;25276:1;25286:113;25300:6;25297:1;25294:13;25286:113;;;25376:11;;;25370:18;25357:11;;;25350:39;25322:2;25315:10;25286:113;;;25417:6;25414:1;25411:13;25408:2;;;25452:1;25443:6;25438:3;25434:16;25427:27;25408:2;;25257:205;;;:::o;25467:88::-;25542:3;25538:15;;25524:31::o;25560:883::-;;25641:4;25623:16;25620:26;25617:2;;;25649:5;;25617:2;25690:1;25685:3;25680;25665:27;25752:10;25714:36;25745:3;25739:10;25714:36;:::i;:::-;25711:52;25701:2;;25767:5;;25701:2;25801;25795:9;25859:66;25841:16;25837:89;25834:1;25828:4;25813:114;25956:4;25950:11;25980:16;26015:18;26086:2;26079:4;26071:6;26067:17;26064:25;26059:2;26051:6;26048:14;26045:45;26042:2;;;26093:5;;;;;;26042:2;26130:6;26124:4;26120:17;26109:28;;26166:3;26160:10;26146:24;;26193:2;26185:6;26182:14;26179:2;;;26199:5;;;;;;26179:2;;26260:16;26254:4;26250:27;26243:4;26234:6;26229:3;26225:16;26221:27;26218:60;26215:2;;;26281:5;;;;;26215:2;26337;26325:15;-1:-1:-1;;26321:88:37;26312:98;;26412:4;26308:109;26304:2;26297:121;26316:3;-1:-1:-1;;25607:836:37;:::o;26448:156::-;-1:-1:-1;;;;;26529:5:37;26525:54;26518:5;26515:65;26505:2;;26594:1;26591;26584:12;26505:2;26495:109;:::o;26609:120::-;26697:5;26690:13;26683:21;26676:5;26673:32;26663:2;;26719:1;26716;26709:12;26734:179;26821:66;26814:5;26810:78;26803:5;26800:89;26790:2;;26903:1;26900;26893:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./interfaces/IBmiDaiStaking.sol\";\nimport \"./interfaces/IPolicyBook.sol\";\n\nimport \"./tokens/ERC1155.sol\";\nimport \"./PolicyBook.sol\";\nimport \"./ContractsRegistry.sol\";\nimport \"./DefiYieldGenerator.sol\";\n\ncontract BmiDAIStaking is IBmiDaiStaking, ERC1155, Ownable {     \n    uint256 constant private THREE_MONTH = 3 * 30 days;\n    \n    ContractsRegistry public contractsRegistry;\n\n    IERC20 public daiToken;\n    IERC20 public bmiToken;\n    DefiYieldGenerator public defiYieldGenerator;\n    \n    mapping(uint256 => StakingInfo) private _stakersPool; // NFT => INFO\n    \n    uint256 private _currentNFTMintID = 1;\n\n    event NFTMinted(uint256 id, address to);\n\n    modifier onlyDefiYieldGenerator() {\n        require (_msgSender() == address(defiYieldGenerator), \"Only generator is allowed to increase profit\");\n        _;\n    }\n\n    constructor() ERC1155(\"\") {}\n\n    function initRegistry(ContractsRegistry _contractsRegistry) external onlyOwner {\n        contractsRegistry = _contractsRegistry;\n\n        daiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getDAIName()));\n        bmiToken = IERC20(_contractsRegistry.getContract(_contractsRegistry.getBMIName()));\n        defiYieldGenerator = DefiYieldGenerator(contractsRegistry.getContract(contractsRegistry.getYieldGeneratorName()));\n    }\n\n    function _mintNFT(\n        address _staker,        \n        uint256 _amount,\n        address _policyBookAddress\n    ) private {                \n        uint256 stakerBalance = balanceOfNFT(_staker);\n        uint256 totalAmount = _amount;\n\n        for (uint256 i = 0; i < stakerBalance; i++) {\n            uint256 tokenID = tokenOfOwnerByIndexNFT(_staker, i);            \n\n            if (_stakersPool[tokenID].policyBookAddress == _policyBookAddress) {\n                totalAmount += _stakersPool[tokenID].stakedDaiAmount;\n                \n                _burn(_staker, tokenID, 1);\n                delete _stakersPool[tokenID];\n            }\n        }\n\n        _mint(_staker, _currentNFTMintID, 1, \"\");\n        _stakersPool[_currentNFTMintID] = StakingInfo(block.timestamp, totalAmount, _policyBookAddress, 0); \n\n        emit NFTMinted(_currentNFTMintID, _staker);\n\n        _currentNFTMintID++;\n    }    \n\n    function stakeDAIx(uint256 _amount, IPolicyBook _policyBook) external override {\n        require(\n            _amount <= _policyBook.balanceOf(_msgSender()),\n            \"Insufficient funds\"\n        );                    \n\n        // transfer DAI from PolicyBook to yield generator\n        bool success = daiToken.transferFrom(address(_policyBook), address(defiYieldGenerator), _amount);        \n        require(success, \"Failed to transfer DAI tokens\");\n\n        // transfer bmiDAIx from user to staking\n        success = _policyBook.transferFrom(_msgSender(), address(this), _amount);        \n        require(success, \"Failed to transfer bmiDAIx tokens\");\n\n        _mintNFT(_msgSender(), _amount, address(_policyBook));\n    }\n\n    function withdrawBMIProfit(uint256 tokenID) external override {\n        require (ownerOfNFT(tokenID) == _msgSender(), \"Not an NFT token owner\");\n\n        // transfer bmi profit from YieldGenerator to user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), _stakersPool[tokenID].bmiProfit);\n        require(success, \"Failed to transfer BMI tokens\");\n    }\n\n    function withdrawFundsWithProfit(uint256 tokenID) external override {\n        require (block.timestamp > _stakersPool[tokenID].stakingStartTime + THREE_MONTH, \"Funds are locked for 3 month\");\n        require (ownerOfNFT(tokenID) == _msgSender(), \"Not an NFT token owner\");\n       \n        IBmiDaiStaking.StakingInfo memory stakingInfo = _stakersPool[tokenID];\n\n        // transfer bmi profit from YieldGenerator to the user\n        bool success = bmiToken.transferFrom(address(defiYieldGenerator), _msgSender(), _stakersPool[tokenID].bmiProfit);\n        require(success, \"Failed to transfer BMI tokens\");\n\n        // transfer DAI from YieldGenerator to PolicyBook\n        success = daiToken.transferFrom(address(defiYieldGenerator), stakingInfo.policyBookAddress, stakingInfo.stakedDaiAmount);\n        require(success, \"Failed to transfer DAI tokens\");   \n\n        // transfer bmiDAIx from staking to the user\n        success = IERC20(stakingInfo.policyBookAddress).transfer(_msgSender(), stakingInfo.stakedDaiAmount);\n        require(success, \"Failed to transfer bmiDAIx tokens\");\n\n        _burn(_msgSender(), tokenID, 1);\n        delete _stakersPool[tokenID];\n    }\n\n    function increaseBmiProfit(uint256 tokenID, uint256 amount) external override onlyDefiYieldGenerator {        \n        _stakersPool[tokenID].bmiProfit = _stakersPool[tokenID].bmiProfit + amount;\n    }\n\n    function getStakingInfoByTokenID(uint256 tokenID) external view override returns (IBmiDaiStaking.StakingInfo memory _stakingInfo) {\n        require (_existsNFT(tokenID), \"NFT with such ID doesn't exist\");\n\n        return _stakersPool[tokenID];\n    }\n}\n",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol",
    "exportedSymbols": {
      "AccessControl": [
        5068
      ],
      "Address": [
        6731
      ],
      "BmiDAIStaking": [
        932
      ],
      "Context": [
        4785
      ],
      "ContractsRegistry": [
        1206
      ],
      "DefiYieldGenerator": [
        1354
      ],
      "ERC1155": [
        4762
      ],
      "ERC165": [
        5234
      ],
      "ERC20": [
        6196
      ],
      "EnumerableMap": [
        7186
      ],
      "EnumerableSet": [
        7666
      ],
      "IBmiDaiStaking": [
        2876
      ],
      "IERC1155": [
        5637
      ],
      "IERC1155MetadataURI": [
        5652
      ],
      "IERC1155Receiver": [
        5693
      ],
      "IERC165": [
        5246
      ],
      "IERC20": [
        6274
      ],
      "IPolicyBook": [
        3036
      ],
      "IPolicyBookFabric": [
        3085
      ],
      "Math": [
        5319
      ],
      "Ownable": [
        5177
      ],
      "PolicyBook": [
        2165
      ],
      "SafeMath": [
        5515
      ]
    },
    "id": 933,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 475,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 476,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 477,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 5178,
        "src": "91:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IBmiDaiStaking.sol",
        "file": "./interfaces/IBmiDaiStaking.sol",
        "id": 478,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 2877,
        "src": "145:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
        "file": "./interfaces/IPolicyBook.sol",
        "id": 479,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 3037,
        "src": "187:38:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155.sol",
        "file": "./tokens/ERC1155.sol",
        "id": 480,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 4763,
        "src": "227:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "./PolicyBook.sol",
        "id": 481,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 2166,
        "src": "258:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
        "file": "./ContractsRegistry.sol",
        "id": 482,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 1207,
        "src": "285:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
        "file": "./DefiYieldGenerator.sol",
        "id": 483,
        "nodeType": "ImportDirective",
        "scope": 933,
        "sourceUnit": 1355,
        "src": "319:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 484,
              "name": "IBmiDaiStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2876,
              "src": "381:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBmiDaiStaking_$2876",
                "typeString": "contract IBmiDaiStaking"
              }
            },
            "id": 485,
            "nodeType": "InheritanceSpecifier",
            "src": "381:14:2"
          },
          {
            "baseName": {
              "id": 486,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4762,
              "src": "397:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$4762",
                "typeString": "contract ERC1155"
              }
            },
            "id": 487,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:2"
          },
          {
            "baseName": {
              "id": 488,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5177,
              "src": "406:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5177",
                "typeString": "contract Ownable"
              }
            },
            "id": 489,
            "nodeType": "InheritanceSpecifier",
            "src": "406:7:2"
          }
        ],
        "contractDependencies": [
          2876,
          4762,
          4785,
          5177,
          5234,
          5246,
          5637,
          5652
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 932,
        "linearizedBaseContracts": [
          932,
          5177,
          4762,
          5652,
          5637,
          5234,
          5246,
          4785,
          2876
        ],
        "name": "BmiDAIStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 494,
            "mutability": "constant",
            "name": "THREE_MONTH",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "425:50:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 490,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "425:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              },
              "id": 493,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "33",
                "id": 491,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "464:1:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 492,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "468:7:2",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2592000_by_1",
                  "typeString": "int_const 2592000"
                },
                "value": "30"
              },
              "src": "464:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7776000_by_1",
                "typeString": "int_const 7776000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "d98d0c7e",
            "id": 496,
            "mutability": "mutable",
            "name": "contractsRegistry",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "486:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
              "typeString": "contract ContractsRegistry"
            },
            "typeName": {
              "id": 495,
              "name": "ContractsRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1206,
              "src": "486:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                "typeString": "contract ContractsRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 498,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "535:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 497,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6274,
              "src": "535:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d77379f1",
            "id": 500,
            "mutability": "mutable",
            "name": "bmiToken",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "563:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6274",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 499,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6274,
              "src": "563:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6274",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "843fe5f0",
            "id": 502,
            "mutability": "mutable",
            "name": "defiYieldGenerator",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "591:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
              "typeString": "contract DefiYieldGenerator"
            },
            "typeName": {
              "id": 501,
              "name": "DefiYieldGenerator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1354,
              "src": "591:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                "typeString": "contract DefiYieldGenerator"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 506,
            "mutability": "mutable",
            "name": "_stakersPool",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "646:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
              "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo)"
            },
            "typeName": {
              "id": 505,
              "keyType": {
                "id": 503,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "654:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "646:31:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo)"
              },
              "valueType": {
                "id": 504,
                "name": "StakingInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2844,
                "src": "665:11:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$2844_storage_ptr",
                  "typeString": "struct IBmiDaiStaking.StakingInfo"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 509,
            "mutability": "mutable",
            "name": "_currentNFTMintID",
            "nodeType": "VariableDeclaration",
            "scope": 932,
            "src": "724:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 507,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "724:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 508,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "760:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 515,
            "name": "NFTMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "784:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 513,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 515,
                  "src": "796:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:24:2"
            },
            "src": "768:40:2"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "848:129:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 518,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "867:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "867:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 522,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "891:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "883:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 520,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "883:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "883:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "867:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6372656173652070726f666974",
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "912:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                          "typeString": "literal_string \"Only generator is allowed to increase profit\""
                        },
                        "value": "Only generator is allowed to increase profit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                          "typeString": "literal_string \"Only generator is allowed to increase profit\""
                        }
                      ],
                      "id": 517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "858:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "858:101:2"
                },
                {
                  "id": 528,
                  "nodeType": "PlaceholderStatement",
                  "src": "969:1:2"
                }
              ]
            },
            "id": 530,
            "name": "onlyDefiYieldGenerator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "845:2:2"
            },
            "src": "814:163:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "1009:2:2",
              "statements": []
            },
            "id": 537,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1005:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 534,
                "modifierName": {
                  "id": 532,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4762,
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$4762_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "997:11:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:2:2"
            },
            "returnParameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:2"
            },
            "scope": 932,
            "src": "983:28:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "1096:363:2",
              "statements": [
                {
                  "expression": {
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 544,
                      "name": "contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "1106:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 545,
                      "name": "_contractsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "1126:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                        "typeString": "contract ContractsRegistry"
                      }
                    },
                    "src": "1106:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:38:2"
                },
                {
                  "expression": {
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 548,
                      "name": "daiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "1155:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 552,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 539,
                                  "src": "1204:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getDAIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1004,
                                "src": "1204:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1204:31:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 550,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "1173:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "1173:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1173:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 549,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6274,
                        "src": "1166:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1166:71:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1155:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:82:2"
                },
                {
                  "expression": {
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 559,
                      "name": "bmiToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "1247:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 563,
                                  "name": "_contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 539,
                                  "src": "1296:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBMIName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1012,
                                "src": "1296:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1296:31:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 561,
                              "name": "_contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "1265:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "1265:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1265:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 560,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6274,
                        "src": "1258:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6274_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1258:71:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6274",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1247:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6274",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:82:2"
                },
                {
                  "expression": {
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 570,
                      "name": "defiYieldGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "1339:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 574,
                                  "name": "contractsRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "1409:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                    "typeString": "contract ContractsRegistry"
                                  }
                                },
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getYieldGeneratorName",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1044,
                                "src": "1409:39:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure external returns (string memory)"
                                }
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1409:41:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 572,
                              "name": "contractsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "1379:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                                "typeString": "contract ContractsRegistry"
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "1379:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:72:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 571,
                        "name": "DefiYieldGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1354,
                        "src": "1360:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DefiYieldGenerator_$1354_$",
                          "typeString": "type(contract DefiYieldGenerator)"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1360:92:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                        "typeString": "contract DefiYieldGenerator"
                      }
                    },
                    "src": "1339:113:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                      "typeString": "contract DefiYieldGenerator"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:113:2"
                }
              ]
            },
            "functionSelector": "d0a43afd",
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 542,
                "modifierName": {
                  "id": 541,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5126,
                  "src": "1086:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1086:9:2"
              }
            ],
            "name": "initRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 539,
                  "mutability": "mutable",
                  "name": "_contractsRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "1039:36:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                    "typeString": "contract ContractsRegistry"
                  },
                  "typeName": {
                    "id": 538,
                    "name": "ContractsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1206,
                    "src": "1039:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContractsRegistry_$1206",
                      "typeString": "contract ContractsRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1038:38:2"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:2"
            },
            "scope": 932,
            "src": "1017:442:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 673,
              "nodeType": "Block",
              "src": "1591:776:2",
              "statements": [
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "stakerBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 673,
                      "src": "1617:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1617:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 596,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 594,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "1654:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 593,
                      "name": "balanceOfNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3549,
                      "src": "1641:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1641:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1617:45:2"
                },
                {
                  "assignments": [
                    598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 673,
                      "src": "1672:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 597,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1672:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "id": 599,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 586,
                    "src": "1694:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1672:29:2"
                },
                {
                  "body": {
                    "id": 644,
                    "nodeType": "Block",
                    "src": "1756:362:2",
                    "statements": [
                      {
                        "assignments": [
                          612
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 612,
                            "mutability": "mutable",
                            "name": "tokenID",
                            "nodeType": "VariableDeclaration",
                            "scope": 644,
                            "src": "1770:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 611,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1770:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 617,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 614,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "1811:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 615,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "1820:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 613,
                            "name": "tokenOfOwnerByIndexNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3580,
                            "src": "1788:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1788:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1770:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 618,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "1853:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                                  "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 620,
                              "indexExpression": {
                                "id": 619,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 612,
                                "src": "1866:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1853:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                                "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "policyBookAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2841,
                            "src": "1853:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 622,
                            "name": "_policyBookAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "1896:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1853:61:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 643,
                        "nodeType": "IfStatement",
                        "src": "1849:259:2",
                        "trueBody": {
                          "id": 642,
                          "nodeType": "Block",
                          "src": "1916:192:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 624,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 598,
                                  "src": "1934:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 625,
                                      "name": "_stakersPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 506,
                                      "src": "1949:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                                        "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                                      }
                                    },
                                    "id": 627,
                                    "indexExpression": {
                                      "id": 626,
                                      "name": "tokenID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 612,
                                      "src": "1962:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1949:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                                      "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                                    }
                                  },
                                  "id": 628,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakedDaiAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2839,
                                  "src": "1949:37:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1934:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 630,
                              "nodeType": "ExpressionStatement",
                              "src": "1934:52:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 632,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 584,
                                    "src": "2027:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 633,
                                    "name": "tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "2036:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2045:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 631,
                                  "name": "_burn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4461,
                                  "src": "2021:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256)"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2021:26:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 636,
                              "nodeType": "ExpressionStatement",
                              "src": "2021:26:2"
                            },
                            {
                              "expression": {
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "2065:28:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 637,
                                    "name": "_stakersPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 506,
                                    "src": "2072:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                                      "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 639,
                                  "indexExpression": {
                                    "id": 638,
                                    "name": "tokenID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "2085:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2072:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                                    "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 641,
                              "nodeType": "ExpressionStatement",
                              "src": "2065:28:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 605,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "1732:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 606,
                      "name": "stakerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 592,
                      "src": "1736:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1732:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 645,
                  "initializationExpression": {
                    "assignments": [
                      602
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "1717:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1717:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 604,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1729:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1717:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1751:3:2",
                      "subExpression": {
                        "id": 608,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "1751:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 610,
                    "nodeType": "ExpressionStatement",
                    "src": "1751:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1712:406:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 647,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "2134:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 648,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "2143:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2162:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2165:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 646,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4202,
                      "src": "2128:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:40:2"
                },
                {
                  "expression": {
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 653,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "2178:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                          "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 655,
                      "indexExpression": {
                        "id": 654,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "2191:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2178:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                        "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 657,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2224:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2224:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 659,
                          "name": "totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "2241:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 660,
                          "name": "_policyBookAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "2254:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2274:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 656,
                        "name": "StakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2844,
                        "src": "2212:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingInfo_$2844_storage_ptr_$",
                          "typeString": "type(struct IBmiDaiStaking.StakingInfo storage pointer)"
                        }
                      },
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2212:64:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                        "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                      }
                    },
                    "src": "2178:98:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                      "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:98:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 666,
                        "name": "_currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "2303:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 667,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "2322:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 665,
                      "name": "NFTMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 515,
                      "src": "2293:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "EmitStatement",
                  "src": "2288:42:2"
                },
                {
                  "expression": {
                    "id": 671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2341:19:2",
                    "subExpression": {
                      "id": 670,
                      "name": "_currentNFTMintID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "2341:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 672,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:19:2"
                }
              ]
            },
            "id": 674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1492:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1525:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "_policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1550:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1482:100:2"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1591:0:2"
            },
            "scope": 932,
            "src": "1465:902:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              2851
            ],
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "2456:648:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 683,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "2487:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 686,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4773,
                                "src": "2520:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2520:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 684,
                              "name": "_policyBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 678,
                              "src": "2498:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                                "typeString": "contract IPolicyBook"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6213,
                            "src": "2498:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2498:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2487:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2547:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2466:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 692,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:111:2"
                },
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 741,
                      "src": "2667:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2667:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 707,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 699,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "2712:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                              "typeString": "contract IPolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                              "typeString": "contract IPolicyBook"
                            }
                          ],
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2704:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 697,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2704:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2704:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 703,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "2734:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2726:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 701,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2726:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2726:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 705,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "2755:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 695,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "2682:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6274",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6255,
                      "src": "2682:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:81:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2667:96:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 709,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "2789:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2798:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        },
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2781:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2781:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "2781:49:2"
                },
                {
                  "expression": {
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 713,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 694,
                      "src": "2890:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 716,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "2925:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2925:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 720,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2947:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BmiDAIStaking_$932",
                                "typeString": "contract BmiDAIStaking"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BmiDAIStaking_$932",
                                "typeString": "contract BmiDAIStaking"
                              }
                            ],
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2939:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 718,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2939:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2939:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 722,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "2954:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 714,
                          "name": "_policyBook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 678,
                          "src": "2900:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                            "typeString": "contract IPolicyBook"
                          }
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6255,
                        "src": "2900:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2900:62:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2890:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "2890:72:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "2988:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2980:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2980:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "2980:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 732,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "3053:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3053:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 734,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "3067:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 737,
                            "name": "_policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 678,
                            "src": "3084:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                              "typeString": "contract IPolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                              "typeString": "contract IPolicyBook"
                            }
                          ],
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3076:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 735,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3076:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3076:20:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 731,
                      "name": "_mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "3044:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3044:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "3044:53:2"
                }
              ]
            },
            "functionSelector": "81927714",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeDAIx",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 680,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2447:8:2"
            },
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2396:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "_policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2413:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                    "typeString": "contract IPolicyBook"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "IPolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3036,
                    "src": "2413:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                      "typeString": "contract IPolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2395:42:2"
            },
            "returnParameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2456:0:2"
            },
            "scope": 932,
            "src": "2377:727:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2856
            ],
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "3172:329:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 750,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 744,
                              "src": "3202:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 749,
                            "name": "ownerOfNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3563,
                            "src": "3191:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3191:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 752,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "3214:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3214:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3191:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3228:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        },
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        }
                      ],
                      "id": 748,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3182:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3182:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:71:2"
                },
                {
                  "assignments": [
                    759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "3323:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 758,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3323:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 773,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 764,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "3368:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3360:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 762,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3360:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3360:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 766,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "3389:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3389:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 768,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "3403:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                              "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 770,
                          "indexExpression": {
                            "id": 769,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 744,
                            "src": "3416:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3403:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                            "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bmiProfit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "3403:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 760,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "3338:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6274",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6255,
                      "src": "3338:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3323:112:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 775,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 759,
                        "src": "3453:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3462:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        },
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3445:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 778,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:49:2"
                }
              ]
            },
            "functionSelector": "cd30a976",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawBMIProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 746,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3163:8:2"
            },
            "parameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "3137:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3136:17:2"
            },
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3172:0:2"
            },
            "scope": 932,
            "src": "3110:391:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2861
            ],
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "3575:1099:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 787,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3594:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3594:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 789,
                                "name": "_stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "3612:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                                  "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 791,
                              "indexExpression": {
                                "id": 790,
                                "name": "tokenID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 782,
                                "src": "3625:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3612:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                                "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 792,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakingStartTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2837,
                            "src": "3612:38:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 793,
                            "name": "THREE_MONTH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "3653:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3612:52:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3594:70:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e647320617265206c6f636b656420666f722033206d6f6e7468",
                        "id": 796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3666:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                          "typeString": "literal_string \"Funds are locked for 3 month\""
                        },
                        "value": "Funds are locked for 3 month"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                          "typeString": "literal_string \"Funds are locked for 3 month\""
                        }
                      ],
                      "id": 786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3585:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3585:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "3585:112:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 801,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "3727:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 800,
                            "name": "ownerOfNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3563,
                            "src": "3716:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3716:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 803,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "3739:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3739:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3716:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3753:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        },
                        "value": "Not an NFT token owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                          "typeString": "literal_string \"Not an NFT token owner\""
                        }
                      ],
                      "id": 799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3707:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:71:2"
                },
                {
                  "assignments": [
                    812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 812,
                      "mutability": "mutable",
                      "name": "stakingInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "3796:45:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                        "typeString": "struct IBmiDaiStaking.StakingInfo"
                      },
                      "typeName": {
                        "id": 811,
                        "name": "IBmiDaiStaking.StakingInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2844,
                        "src": "3796:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$2844_storage_ptr",
                          "typeString": "struct IBmiDaiStaking.StakingInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 816,
                  "initialValue": {
                    "baseExpression": {
                      "id": 813,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "3844:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                        "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 815,
                    "indexExpression": {
                      "id": 814,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "3857:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3844:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                      "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3796:69:2"
                },
                {
                  "assignments": [
                    818
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 818,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "3939:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 817,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3939:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 832,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 823,
                            "name": "defiYieldGenerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "3984:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                              "typeString": "contract DefiYieldGenerator"
                            }
                          ],
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3976:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 821,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3976:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3976:27:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 825,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "4005:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4005:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 827,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "4019:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                              "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 829,
                          "indexExpression": {
                            "id": 828,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "4032:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4019:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                            "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 830,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bmiProfit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "4019:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 819,
                        "name": "bmiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "3954:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6274",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6255,
                      "src": "3954:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3939:112:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 834,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "4069:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        },
                        "value": "Failed to transfer BMI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                          "typeString": "literal_string \"Failed to transfer BMI tokens\""
                        }
                      ],
                      "id": 833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4061:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4061:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "4061:49:2"
                },
                {
                  "expression": {
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 838,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "4179:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 843,
                              "name": "defiYieldGenerator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "4219:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                "typeString": "contract DefiYieldGenerator"
                              }
                            ],
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4211:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 841,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4211:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4211:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 845,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 812,
                            "src": "4240:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                              "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "policyBookAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2841,
                          "src": "4240:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 847,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 812,
                            "src": "4271:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                              "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2839,
                          "src": "4271:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 839,
                          "name": "daiToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "4189:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6274",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6255,
                        "src": "4189:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4189:110:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4179:120:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "4179:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 853,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "4317:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4326:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        },
                        "value": "Failed to transfer DAI tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                          "typeString": "literal_string \"Failed to transfer DAI tokens\""
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4309:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4309:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "4309:49:2"
                },
                {
                  "expression": {
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 857,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "4425:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 863,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4773,
                            "src": "4482:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4482:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 865,
                            "name": "stakingInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 812,
                            "src": "4496:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                              "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedDaiAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2839,
                          "src": "4496:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 859,
                                "name": "stakingInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 812,
                                "src": "4442:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                                  "typeString": "struct IBmiDaiStaking.StakingInfo memory"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "policyBookAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2841,
                              "src": "4442:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 858,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6274,
                            "src": "4435:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$6274_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4435:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6274",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6223,
                        "src": "4435:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4435:89:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4425:99:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:99:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 871,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "4542:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4551:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        },
                        "value": "Failed to transfer bmiDAIx tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                          "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                        }
                      ],
                      "id": 870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4534:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4534:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 874,
                  "nodeType": "ExpressionStatement",
                  "src": "4534:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 876,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "4604:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4604:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 878,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4618:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4627:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 875,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4461,
                      "src": "4598:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:31:2"
                },
                {
                  "expression": {
                    "id": 885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4639:28:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 882,
                        "name": "_stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "4646:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                          "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "id": 883,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "4659:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4646:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                        "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 886,
                  "nodeType": "ExpressionStatement",
                  "src": "4639:28:2"
                }
              ]
            },
            "functionSelector": "a7fa3c7f",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFundsWithProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 784,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3566:8:2"
            },
            "parameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "3540:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:17:2"
            },
            "returnParameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3575:0:2"
            },
            "scope": 932,
            "src": "3507:1167:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2868
            ],
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "4781:99:2",
              "statements": [
                {
                  "expression": {
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 898,
                          "name": "_stakersPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "4799:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                            "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                          }
                        },
                        "id": 900,
                        "indexExpression": {
                          "id": 899,
                          "name": "tokenID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 890,
                          "src": "4812:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4799:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                          "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                        }
                      },
                      "id": 901,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bmiProfit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2843,
                      "src": "4799:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 902,
                            "name": "_stakersPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "4833:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                              "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                            }
                          },
                          "id": 904,
                          "indexExpression": {
                            "id": 903,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "4846:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4833:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                            "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bmiProfit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2843,
                        "src": "4833:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 906,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "4867:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4833:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4799:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "4799:74:2"
                }
              ]
            },
            "functionSelector": "cc199391",
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 896,
                "modifierName": {
                  "id": 895,
                  "name": "onlyDefiYieldGenerator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 530,
                  "src": "4758:22:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4758:22:2"
              }
            ],
            "name": "increaseBmiProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 894,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4749:8:2"
            },
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "4707:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4707:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "4724:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4724:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4706:33:2"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4781:0:2"
            },
            "scope": 932,
            "src": "4680:200:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2875
            ],
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "5016:119:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 921,
                            "name": "tokenID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "5046:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 920,
                          "name": "_existsNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4074,
                          "src": "5035:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5035:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e46542077697468207375636820494420646f65736e2774206578697374",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5056:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a62bd8fb899d993837fea6aa2bb3e383cdaad28f95fcb3d5a52dbb64c35b6db",
                          "typeString": "literal_string \"NFT with such ID doesn't exist\""
                        },
                        "value": "NFT with such ID doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a62bd8fb899d993837fea6aa2bb3e383cdaad28f95fcb3d5a52dbb64c35b6db",
                          "typeString": "literal_string \"NFT with such ID doesn't exist\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5026:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5026:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "5026:63:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 926,
                      "name": "_stakersPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 506,
                      "src": "5107:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$2844_storage_$",
                        "typeString": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)"
                      }
                    },
                    "id": 928,
                    "indexExpression": {
                      "id": 927,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "5120:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5107:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$2844_storage",
                      "typeString": "struct IBmiDaiStaking.StakingInfo storage ref"
                    }
                  },
                  "functionReturnParameters": 918,
                  "id": 929,
                  "nodeType": "Return",
                  "src": "5100:28:2"
                }
              ]
            },
            "functionSelector": "076befe7",
            "id": 931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingInfoByTokenID",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 915,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4950:8:2"
            },
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "tokenID",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "4919:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4918:17:2"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "_stakingInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "4968:46:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingInfo_$2844_memory_ptr",
                    "typeString": "struct IBmiDaiStaking.StakingInfo"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "IBmiDaiStaking.StakingInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2844,
                    "src": "4968:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$2844_storage_ptr",
                      "typeString": "struct IBmiDaiStaking.StakingInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4967:48:2"
            },
            "scope": 932,
            "src": "4886:249:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 933,
        "src": "355:4782:2"
      }
    ],
    "src": "32:5106:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol",
      "exportedSymbols": {
        "AccessControl": [
          5068
        ],
        "Address": [
          6731
        ],
        "BmiDAIStaking": [
          932
        ],
        "Context": [
          4785
        ],
        "ContractsRegistry": [
          1206
        ],
        "DefiYieldGenerator": [
          1354
        ],
        "ERC1155": [
          4762
        ],
        "ERC165": [
          5234
        ],
        "ERC20": [
          6196
        ],
        "EnumerableMap": [
          7186
        ],
        "EnumerableSet": [
          7666
        ],
        "IBmiDaiStaking": [
          2876
        ],
        "IERC1155": [
          5637
        ],
        "IERC1155MetadataURI": [
          5652
        ],
        "IERC1155Receiver": [
          5693
        ],
        "IERC165": [
          5246
        ],
        "IERC20": [
          6274
        ],
        "IPolicyBook": [
          3036
        ],
        "IPolicyBookFabric": [
          3085
        ],
        "Math": [
          5319
        ],
        "Ownable": [
          5177
        ],
        "PolicyBook": [
          2165
        ],
        "SafeMath": [
          5515
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 475,
        "name": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 476,
        "name": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 5178,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 477,
        "name": "ImportDirective",
        "src": "91:52:2"
      },
      {
        "attributes": {
          "SourceUnit": 2877,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IBmiDaiStaking.sol",
          "file": "./interfaces/IBmiDaiStaking.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 478,
        "name": "ImportDirective",
        "src": "145:41:2"
      },
      {
        "attributes": {
          "SourceUnit": 3037,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol",
          "file": "./interfaces/IPolicyBook.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 479,
        "name": "ImportDirective",
        "src": "187:38:2"
      },
      {
        "attributes": {
          "SourceUnit": 4763,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/tokens/ERC1155.sol",
          "file": "./tokens/ERC1155.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 480,
        "name": "ImportDirective",
        "src": "227:30:2"
      },
      {
        "attributes": {
          "SourceUnit": 2166,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
          "file": "./PolicyBook.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 481,
        "name": "ImportDirective",
        "src": "258:26:2"
      },
      {
        "attributes": {
          "SourceUnit": 1207,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/ContractsRegistry.sol",
          "file": "./ContractsRegistry.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 482,
        "name": "ImportDirective",
        "src": "285:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 1355,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/DefiYieldGenerator.sol",
          "file": "./DefiYieldGenerator.sol",
          "scope": 933,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 483,
        "name": "ImportDirective",
        "src": "319:34:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            2876,
            4762,
            4785,
            5177,
            5234,
            5246,
            5637,
            5652
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            932,
            5177,
            4762,
            5652,
            5637,
            5234,
            5246,
            4785,
            2876
          ],
          "name": "BmiDAIStaking",
          "scope": 933
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IBmiDaiStaking",
                  "referencedDeclaration": 2876,
                  "type": "contract IBmiDaiStaking"
                },
                "id": 484,
                "name": "UserDefinedTypeName",
                "src": "381:14:2"
              }
            ],
            "id": 485,
            "name": "InheritanceSpecifier",
            "src": "381:14:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1155",
                  "referencedDeclaration": 4762,
                  "type": "contract ERC1155"
                },
                "id": 486,
                "name": "UserDefinedTypeName",
                "src": "397:7:2"
              }
            ],
            "id": 487,
            "name": "InheritanceSpecifier",
            "src": "397:7:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Ownable",
                  "referencedDeclaration": 5177,
                  "type": "contract Ownable"
                },
                "id": 488,
                "name": "UserDefinedTypeName",
                "src": "406:7:2"
              }
            ],
            "id": 489,
            "name": "InheritanceSpecifier",
            "src": "406:7:2"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "THREE_MONTH",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 490,
                "name": "ElementaryTypeName",
                "src": "425:7:2"
              },
              {
                "attributes": {
                  "commonType": {
                    "typeIdentifier": "t_rational_7776000_by_1",
                    "typeString": "int_const 7776000"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "int_const 7776000"
                },
                "children": [
                  {
                    "attributes": {
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 491,
                    "name": "Literal",
                    "src": "464:1:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "3330",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": "days",
                      "token": "number",
                      "type": "int_const 2592000",
                      "value": "30"
                    },
                    "id": 492,
                    "name": "Literal",
                    "src": "468:7:2"
                  }
                ],
                "id": 493,
                "name": "BinaryOperation",
                "src": "464:11:2"
              }
            ],
            "id": 494,
            "name": "VariableDeclaration",
            "src": "425:50:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d98d0c7e",
              "mutability": "mutable",
              "name": "contractsRegistry",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ContractsRegistry",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ContractsRegistry",
                  "referencedDeclaration": 1206,
                  "type": "contract ContractsRegistry"
                },
                "id": 495,
                "name": "UserDefinedTypeName",
                "src": "486:17:2"
              }
            ],
            "id": 496,
            "name": "VariableDeclaration",
            "src": "486:42:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6274,
                  "type": "contract IERC20"
                },
                "id": 497,
                "name": "UserDefinedTypeName",
                "src": "535:6:2"
              }
            ],
            "id": 498,
            "name": "VariableDeclaration",
            "src": "535:22:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "d77379f1",
              "mutability": "mutable",
              "name": "bmiToken",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IERC20",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "IERC20",
                  "referencedDeclaration": 6274,
                  "type": "contract IERC20"
                },
                "id": 499,
                "name": "UserDefinedTypeName",
                "src": "563:6:2"
              }
            ],
            "id": 500,
            "name": "VariableDeclaration",
            "src": "563:22:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "843fe5f0",
              "mutability": "mutable",
              "name": "defiYieldGenerator",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DefiYieldGenerator",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "DefiYieldGenerator",
                  "referencedDeclaration": 1354,
                  "type": "contract DefiYieldGenerator"
                },
                "id": 501,
                "name": "UserDefinedTypeName",
                "src": "591:18:2"
              }
            ],
            "id": 502,
            "name": "VariableDeclaration",
            "src": "591:44:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_stakersPool",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo)",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 503,
                    "name": "ElementaryTypeName",
                    "src": "654:7:2"
                  },
                  {
                    "attributes": {
                      "name": "StakingInfo",
                      "referencedDeclaration": 2844,
                      "type": "struct IBmiDaiStaking.StakingInfo"
                    },
                    "id": 504,
                    "name": "UserDefinedTypeName",
                    "src": "665:11:2"
                  }
                ],
                "id": 505,
                "name": "Mapping",
                "src": "646:31:2"
              }
            ],
            "id": 506,
            "name": "VariableDeclaration",
            "src": "646:52:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_currentNFTMintID",
              "scope": 932,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 507,
                "name": "ElementaryTypeName",
                "src": "724:7:2"
              },
              {
                "attributes": {
                  "hexvalue": "31",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 1",
                  "value": "1"
                },
                "id": 508,
                "name": "Literal",
                "src": "760:1:2"
              }
            ],
            "id": 509,
            "name": "VariableDeclaration",
            "src": "724:37:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "NFTMinted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 515,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 510,
                        "name": "ElementaryTypeName",
                        "src": "784:7:2"
                      }
                    ],
                    "id": 511,
                    "name": "VariableDeclaration",
                    "src": "784:10:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 515,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 512,
                        "name": "ElementaryTypeName",
                        "src": "796:7:2"
                      }
                    ],
                    "id": 513,
                    "name": "VariableDeclaration",
                    "src": "796:10:2"
                  }
                ],
                "id": 514,
                "name": "ParameterList",
                "src": "783:24:2"
              }
            ],
            "id": 515,
            "name": "EventDefinition",
            "src": "768:40:2"
          },
          {
            "attributes": {
              "name": "onlyDefiYieldGenerator",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 516,
                "name": "ParameterList",
                "src": "845:2:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fae5d64f0ab880aacd939bced91c844e135e928777b5bd49462e045cc2f69b24",
                                  "typeString": "literal_string \"Only generator is allowed to increase profit\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 517,
                            "name": "Identifier",
                            "src": "858:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4773,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 518,
                                    "name": "Identifier",
                                    "src": "867:10:2"
                                  }
                                ],
                                "id": 519,
                                "name": "FunctionCall",
                                "src": "867:12:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 520,
                                        "name": "ElementaryTypeName",
                                        "src": "883:7:2"
                                      }
                                    ],
                                    "id": 521,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "883:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 502,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 522,
                                    "name": "Identifier",
                                    "src": "891:18:2"
                                  }
                                ],
                                "id": 523,
                                "name": "FunctionCall",
                                "src": "883:27:2"
                              }
                            ],
                            "id": 524,
                            "name": "BinaryOperation",
                            "src": "867:43:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c792067656e657261746f7220697320616c6c6f77656420746f20696e6372656173652070726f666974",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only generator is allowed to increase profit\"",
                              "value": "Only generator is allowed to increase profit"
                            },
                            "id": 525,
                            "name": "Literal",
                            "src": "912:46:2"
                          }
                        ],
                        "id": 526,
                        "name": "FunctionCall",
                        "src": "858:101:2"
                      }
                    ],
                    "id": 527,
                    "name": "ExpressionStatement",
                    "src": "858:101:2"
                  },
                  {
                    "id": 528,
                    "name": "PlaceholderStatement",
                    "src": "969:1:2"
                  }
                ],
                "id": 529,
                "name": "Block",
                "src": "848:129:2"
              }
            ],
            "id": 530,
            "name": "ModifierDefinition",
            "src": "814:163:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 531,
                "name": "ParameterList",
                "src": "994:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 535,
                "name": "ParameterList",
                "src": "1009:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4762,
                      "type": "type(contract ERC1155)",
                      "value": "ERC1155"
                    },
                    "id": 532,
                    "name": "Identifier",
                    "src": "997:7:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"\"",
                      "value": ""
                    },
                    "id": 533,
                    "name": "Literal",
                    "src": "1005:2:2"
                  }
                ],
                "id": 534,
                "name": "ModifierInvocation",
                "src": "997:11:2"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 536,
                "name": "Block",
                "src": "1009:2:2"
              }
            ],
            "id": 537,
            "name": "FunctionDefinition",
            "src": "983:28:2"
          },
          {
            "attributes": {
              "functionSelector": "d0a43afd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initRegistry",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_contractsRegistry",
                      "scope": 582,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ContractsRegistry",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "ContractsRegistry",
                          "referencedDeclaration": 1206,
                          "type": "contract ContractsRegistry"
                        },
                        "id": 538,
                        "name": "UserDefinedTypeName",
                        "src": "1039:17:2"
                      }
                    ],
                    "id": 539,
                    "name": "VariableDeclaration",
                    "src": "1039:36:2"
                  }
                ],
                "id": 540,
                "name": "ParameterList",
                "src": "1038:38:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 543,
                "name": "ParameterList",
                "src": "1096:0:2"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5126,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 541,
                    "name": "Identifier",
                    "src": "1086:9:2"
                  }
                ],
                "id": 542,
                "name": "ModifierInvocation",
                "src": "1086:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ContractsRegistry"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 496,
                              "type": "contract ContractsRegistry",
                              "value": "contractsRegistry"
                            },
                            "id": 544,
                            "name": "Identifier",
                            "src": "1106:17:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 539,
                              "type": "contract ContractsRegistry",
                              "value": "_contractsRegistry"
                            },
                            "id": 545,
                            "name": "Identifier",
                            "src": "1126:18:2"
                          }
                        ],
                        "id": 546,
                        "name": "Assignment",
                        "src": "1106:38:2"
                      }
                    ],
                    "id": 547,
                    "name": "ExpressionStatement",
                    "src": "1106:38:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 498,
                              "type": "contract IERC20",
                              "value": "daiToken"
                            },
                            "id": 548,
                            "name": "Identifier",
                            "src": "1155:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6274,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 549,
                                "name": "Identifier",
                                "src": "1166:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1077,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 539,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 550,
                                        "name": "Identifier",
                                        "src": "1173:18:2"
                                      }
                                    ],
                                    "id": 551,
                                    "name": "MemberAccess",
                                    "src": "1173:30:2"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getDAIName",
                                          "referencedDeclaration": 1004,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 539,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 552,
                                            "name": "Identifier",
                                            "src": "1204:18:2"
                                          }
                                        ],
                                        "id": 553,
                                        "name": "MemberAccess",
                                        "src": "1204:29:2"
                                      }
                                    ],
                                    "id": 554,
                                    "name": "FunctionCall",
                                    "src": "1204:31:2"
                                  }
                                ],
                                "id": 555,
                                "name": "FunctionCall",
                                "src": "1173:63:2"
                              }
                            ],
                            "id": 556,
                            "name": "FunctionCall",
                            "src": "1166:71:2"
                          }
                        ],
                        "id": 557,
                        "name": "Assignment",
                        "src": "1155:82:2"
                      }
                    ],
                    "id": 558,
                    "name": "ExpressionStatement",
                    "src": "1155:82:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 500,
                              "type": "contract IERC20",
                              "value": "bmiToken"
                            },
                            "id": 559,
                            "name": "Identifier",
                            "src": "1247:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6274,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 560,
                                "name": "Identifier",
                                "src": "1258:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1077,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 539,
                                          "type": "contract ContractsRegistry",
                                          "value": "_contractsRegistry"
                                        },
                                        "id": 561,
                                        "name": "Identifier",
                                        "src": "1265:18:2"
                                      }
                                    ],
                                    "id": 562,
                                    "name": "MemberAccess",
                                    "src": "1265:30:2"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getBMIName",
                                          "referencedDeclaration": 1012,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 539,
                                              "type": "contract ContractsRegistry",
                                              "value": "_contractsRegistry"
                                            },
                                            "id": 563,
                                            "name": "Identifier",
                                            "src": "1296:18:2"
                                          }
                                        ],
                                        "id": 564,
                                        "name": "MemberAccess",
                                        "src": "1296:29:2"
                                      }
                                    ],
                                    "id": 565,
                                    "name": "FunctionCall",
                                    "src": "1296:31:2"
                                  }
                                ],
                                "id": 566,
                                "name": "FunctionCall",
                                "src": "1265:63:2"
                              }
                            ],
                            "id": 567,
                            "name": "FunctionCall",
                            "src": "1258:71:2"
                          }
                        ],
                        "id": 568,
                        "name": "Assignment",
                        "src": "1247:82:2"
                      }
                    ],
                    "id": 569,
                    "name": "ExpressionStatement",
                    "src": "1247:82:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract DefiYieldGenerator"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 502,
                              "type": "contract DefiYieldGenerator",
                              "value": "defiYieldGenerator"
                            },
                            "id": 570,
                            "name": "Identifier",
                            "src": "1339:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract DefiYieldGenerator",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1354,
                                  "type": "type(contract DefiYieldGenerator)",
                                  "value": "DefiYieldGenerator"
                                },
                                "id": 571,
                                "name": "Identifier",
                                "src": "1360:18:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "getContract",
                                      "referencedDeclaration": 1077,
                                      "type": "function (string memory) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 496,
                                          "type": "contract ContractsRegistry",
                                          "value": "contractsRegistry"
                                        },
                                        "id": 572,
                                        "name": "Identifier",
                                        "src": "1379:17:2"
                                      }
                                    ],
                                    "id": 573,
                                    "name": "MemberAccess",
                                    "src": "1379:29:2"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "string memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "getYieldGeneratorName",
                                          "referencedDeclaration": 1044,
                                          "type": "function () pure external returns (string memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 496,
                                              "type": "contract ContractsRegistry",
                                              "value": "contractsRegistry"
                                            },
                                            "id": 574,
                                            "name": "Identifier",
                                            "src": "1409:17:2"
                                          }
                                        ],
                                        "id": 575,
                                        "name": "MemberAccess",
                                        "src": "1409:39:2"
                                      }
                                    ],
                                    "id": 576,
                                    "name": "FunctionCall",
                                    "src": "1409:41:2"
                                  }
                                ],
                                "id": 577,
                                "name": "FunctionCall",
                                "src": "1379:72:2"
                              }
                            ],
                            "id": 578,
                            "name": "FunctionCall",
                            "src": "1360:92:2"
                          }
                        ],
                        "id": 579,
                        "name": "Assignment",
                        "src": "1339:113:2"
                      }
                    ],
                    "id": 580,
                    "name": "ExpressionStatement",
                    "src": "1339:113:2"
                  }
                ],
                "id": 581,
                "name": "Block",
                "src": "1096:363:2"
              }
            ],
            "id": 582,
            "name": "FunctionDefinition",
            "src": "1017:442:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_mintNFT",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_staker",
                      "scope": 674,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 583,
                        "name": "ElementaryTypeName",
                        "src": "1492:7:2"
                      }
                    ],
                    "id": 584,
                    "name": "VariableDeclaration",
                    "src": "1492:15:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 674,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 585,
                        "name": "ElementaryTypeName",
                        "src": "1525:7:2"
                      }
                    ],
                    "id": 586,
                    "name": "VariableDeclaration",
                    "src": "1525:15:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBookAddress",
                      "scope": 674,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 587,
                        "name": "ElementaryTypeName",
                        "src": "1550:7:2"
                      }
                    ],
                    "id": 588,
                    "name": "VariableDeclaration",
                    "src": "1550:26:2"
                  }
                ],
                "id": 589,
                "name": "ParameterList",
                "src": "1482:100:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 590,
                "name": "ParameterList",
                "src": "1591:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        592
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakerBalance",
                          "scope": 673,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 591,
                            "name": "ElementaryTypeName",
                            "src": "1617:7:2"
                          }
                        ],
                        "id": 592,
                        "name": "VariableDeclaration",
                        "src": "1617:21:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3549,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOfNFT"
                            },
                            "id": 593,
                            "name": "Identifier",
                            "src": "1641:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 584,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 594,
                            "name": "Identifier",
                            "src": "1654:7:2"
                          }
                        ],
                        "id": 595,
                        "name": "FunctionCall",
                        "src": "1641:21:2"
                      }
                    ],
                    "id": 596,
                    "name": "VariableDeclarationStatement",
                    "src": "1617:45:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        598
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "totalAmount",
                          "scope": 673,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 597,
                            "name": "ElementaryTypeName",
                            "src": "1672:7:2"
                          }
                        ],
                        "id": 598,
                        "name": "VariableDeclaration",
                        "src": "1672:19:2"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 586,
                          "type": "uint256",
                          "value": "_amount"
                        },
                        "id": 599,
                        "name": "Identifier",
                        "src": "1694:7:2"
                      }
                    ],
                    "id": 600,
                    "name": "VariableDeclarationStatement",
                    "src": "1672:29:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            602
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 645,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 601,
                                "name": "ElementaryTypeName",
                                "src": "1717:7:2"
                              }
                            ],
                            "id": 602,
                            "name": "VariableDeclaration",
                            "src": "1717:9:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 603,
                            "name": "Literal",
                            "src": "1729:1:2"
                          }
                        ],
                        "id": 604,
                        "name": "VariableDeclarationStatement",
                        "src": "1717:13:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 602,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 605,
                            "name": "Identifier",
                            "src": "1732:1:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 592,
                              "type": "uint256",
                              "value": "stakerBalance"
                            },
                            "id": 606,
                            "name": "Identifier",
                            "src": "1736:13:2"
                          }
                        ],
                        "id": 607,
                        "name": "BinaryOperation",
                        "src": "1732:17:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 602,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 608,
                                "name": "Identifier",
                                "src": "1751:1:2"
                              }
                            ],
                            "id": 609,
                            "name": "UnaryOperation",
                            "src": "1751:3:2"
                          }
                        ],
                        "id": 610,
                        "name": "ExpressionStatement",
                        "src": "1751:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                612
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "tokenID",
                                  "scope": 644,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 611,
                                    "name": "ElementaryTypeName",
                                    "src": "1770:7:2"
                                  }
                                ],
                                "id": 612,
                                "name": "VariableDeclaration",
                                "src": "1770:15:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3580,
                                      "type": "function (address,uint256) view returns (uint256)",
                                      "value": "tokenOfOwnerByIndexNFT"
                                    },
                                    "id": 613,
                                    "name": "Identifier",
                                    "src": "1788:22:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 584,
                                      "type": "address",
                                      "value": "_staker"
                                    },
                                    "id": 614,
                                    "name": "Identifier",
                                    "src": "1811:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 602,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 615,
                                    "name": "Identifier",
                                    "src": "1820:1:2"
                                  }
                                ],
                                "id": 616,
                                "name": "FunctionCall",
                                "src": "1788:34:2"
                              }
                            ],
                            "id": 617,
                            "name": "VariableDeclarationStatement",
                            "src": "1770:52:2"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBookAddress",
                                      "referencedDeclaration": 2841,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 506,
                                              "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 618,
                                            "name": "Identifier",
                                            "src": "1853:12:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 612,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 619,
                                            "name": "Identifier",
                                            "src": "1866:7:2"
                                          }
                                        ],
                                        "id": 620,
                                        "name": "IndexAccess",
                                        "src": "1853:21:2"
                                      }
                                    ],
                                    "id": 621,
                                    "name": "MemberAccess",
                                    "src": "1853:39:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 588,
                                      "type": "address",
                                      "value": "_policyBookAddress"
                                    },
                                    "id": 622,
                                    "name": "Identifier",
                                    "src": "1896:18:2"
                                  }
                                ],
                                "id": 623,
                                "name": "BinaryOperation",
                                "src": "1853:61:2"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "+=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 598,
                                              "type": "uint256",
                                              "value": "totalAmount"
                                            },
                                            "id": 624,
                                            "name": "Identifier",
                                            "src": "1934:11:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "stakedDaiAmount",
                                              "referencedDeclaration": 2839,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 506,
                                                      "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                                      "value": "_stakersPool"
                                                    },
                                                    "id": 625,
                                                    "name": "Identifier",
                                                    "src": "1949:12:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 612,
                                                      "type": "uint256",
                                                      "value": "tokenID"
                                                    },
                                                    "id": 626,
                                                    "name": "Identifier",
                                                    "src": "1962:7:2"
                                                  }
                                                ],
                                                "id": 627,
                                                "name": "IndexAccess",
                                                "src": "1949:21:2"
                                              }
                                            ],
                                            "id": 628,
                                            "name": "MemberAccess",
                                            "src": "1949:37:2"
                                          }
                                        ],
                                        "id": 629,
                                        "name": "Assignment",
                                        "src": "1934:52:2"
                                      }
                                    ],
                                    "id": 630,
                                    "name": "ExpressionStatement",
                                    "src": "1934:52:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4461,
                                              "type": "function (address,uint256,uint256)",
                                              "value": "_burn"
                                            },
                                            "id": 631,
                                            "name": "Identifier",
                                            "src": "2021:5:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 584,
                                              "type": "address",
                                              "value": "_staker"
                                            },
                                            "id": 632,
                                            "name": "Identifier",
                                            "src": "2027:7:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 612,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 633,
                                            "name": "Identifier",
                                            "src": "2036:7:2"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "31",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "number",
                                              "type": "int_const 1",
                                              "value": "1"
                                            },
                                            "id": 634,
                                            "name": "Literal",
                                            "src": "2045:1:2"
                                          }
                                        ],
                                        "id": 635,
                                        "name": "FunctionCall",
                                        "src": "2021:26:2"
                                      }
                                    ],
                                    "id": 636,
                                    "name": "ExpressionStatement",
                                    "src": "2021:26:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "delete",
                                          "prefix": true,
                                          "type": "tuple()"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 506,
                                                  "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                                  "value": "_stakersPool"
                                                },
                                                "id": 637,
                                                "name": "Identifier",
                                                "src": "2072:12:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 612,
                                                  "type": "uint256",
                                                  "value": "tokenID"
                                                },
                                                "id": 638,
                                                "name": "Identifier",
                                                "src": "2085:7:2"
                                              }
                                            ],
                                            "id": 639,
                                            "name": "IndexAccess",
                                            "src": "2072:21:2"
                                          }
                                        ],
                                        "id": 640,
                                        "name": "UnaryOperation",
                                        "src": "2065:28:2"
                                      }
                                    ],
                                    "id": 641,
                                    "name": "ExpressionStatement",
                                    "src": "2065:28:2"
                                  }
                                ],
                                "id": 642,
                                "name": "Block",
                                "src": "1916:192:2"
                              }
                            ],
                            "id": 643,
                            "name": "IfStatement",
                            "src": "1849:259:2"
                          }
                        ],
                        "id": 644,
                        "name": "Block",
                        "src": "1756:362:2"
                      }
                    ],
                    "id": 645,
                    "name": "ForStatement",
                    "src": "1712:406:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4202,
                              "type": "function (address,uint256,uint256,bytes memory)",
                              "value": "_mint"
                            },
                            "id": 646,
                            "name": "Identifier",
                            "src": "2128:5:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 584,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 647,
                            "name": "Identifier",
                            "src": "2134:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 509,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 648,
                            "name": "Identifier",
                            "src": "2143:17:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 649,
                            "name": "Literal",
                            "src": "2162:1:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 650,
                            "name": "Literal",
                            "src": "2165:2:2"
                          }
                        ],
                        "id": 651,
                        "name": "FunctionCall",
                        "src": "2128:40:2"
                      }
                    ],
                    "id": 652,
                    "name": "ExpressionStatement",
                    "src": "2128:40:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 506,
                                  "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 653,
                                "name": "Identifier",
                                "src": "2178:12:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 509,
                                  "type": "uint256",
                                  "value": "_currentNFTMintID"
                                },
                                "id": 654,
                                "name": "Identifier",
                                "src": "2191:17:2"
                              }
                            ],
                            "id": 655,
                            "name": "IndexAccess",
                            "src": "2178:31:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct IBmiDaiStaking.StakingInfo memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2844,
                                  "type": "type(struct IBmiDaiStaking.StakingInfo storage pointer)",
                                  "value": "StakingInfo"
                                },
                                "id": 656,
                                "name": "Identifier",
                                "src": "2212:11:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 657,
                                    "name": "Identifier",
                                    "src": "2224:5:2"
                                  }
                                ],
                                "id": 658,
                                "name": "MemberAccess",
                                "src": "2224:15:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 598,
                                  "type": "uint256",
                                  "value": "totalAmount"
                                },
                                "id": 659,
                                "name": "Identifier",
                                "src": "2241:11:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 588,
                                  "type": "address",
                                  "value": "_policyBookAddress"
                                },
                                "id": 660,
                                "name": "Identifier",
                                "src": "2254:18:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 661,
                                "name": "Literal",
                                "src": "2274:1:2"
                              }
                            ],
                            "id": 662,
                            "name": "FunctionCall",
                            "src": "2212:64:2"
                          }
                        ],
                        "id": 663,
                        "name": "Assignment",
                        "src": "2178:98:2"
                      }
                    ],
                    "id": 664,
                    "name": "ExpressionStatement",
                    "src": "2178:98:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 515,
                              "type": "function (uint256,address)",
                              "value": "NFTMinted"
                            },
                            "id": 665,
                            "name": "Identifier",
                            "src": "2293:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 509,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 666,
                            "name": "Identifier",
                            "src": "2303:17:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 584,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 667,
                            "name": "Identifier",
                            "src": "2322:7:2"
                          }
                        ],
                        "id": 668,
                        "name": "FunctionCall",
                        "src": "2293:37:2"
                      }
                    ],
                    "id": 669,
                    "name": "EmitStatement",
                    "src": "2288:42:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 509,
                              "type": "uint256",
                              "value": "_currentNFTMintID"
                            },
                            "id": 670,
                            "name": "Identifier",
                            "src": "2341:17:2"
                          }
                        ],
                        "id": 671,
                        "name": "UnaryOperation",
                        "src": "2341:19:2"
                      }
                    ],
                    "id": 672,
                    "name": "ExpressionStatement",
                    "src": "2341:19:2"
                  }
                ],
                "id": 673,
                "name": "Block",
                "src": "1591:776:2"
              }
            ],
            "id": 674,
            "name": "FunctionDefinition",
            "src": "1465:902:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                2851
              ],
              "functionSelector": "81927714",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeDAIx",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 680,
                "name": "OverrideSpecifier",
                "src": "2447:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 742,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 675,
                        "name": "ElementaryTypeName",
                        "src": "2396:7:2"
                      }
                    ],
                    "id": 676,
                    "name": "VariableDeclaration",
                    "src": "2396:15:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_policyBook",
                      "scope": 742,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IPolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IPolicyBook",
                          "referencedDeclaration": 3036,
                          "type": "contract IPolicyBook"
                        },
                        "id": 677,
                        "name": "UserDefinedTypeName",
                        "src": "2413:11:2"
                      }
                    ],
                    "id": 678,
                    "name": "VariableDeclaration",
                    "src": "2413:23:2"
                  }
                ],
                "id": 679,
                "name": "ParameterList",
                "src": "2395:42:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 681,
                "name": "ParameterList",
                "src": "2456:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                                  "typeString": "literal_string \"Insufficient funds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 682,
                            "name": "Identifier",
                            "src": "2466:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 676,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 683,
                                "name": "Identifier",
                                "src": "2487:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "balanceOf",
                                      "referencedDeclaration": 6213,
                                      "type": "function (address) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 678,
                                          "type": "contract IPolicyBook",
                                          "value": "_policyBook"
                                        },
                                        "id": 684,
                                        "name": "Identifier",
                                        "src": "2498:11:2"
                                      }
                                    ],
                                    "id": 685,
                                    "name": "MemberAccess",
                                    "src": "2498:21:2"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4773,
                                          "type": "function () view returns (address payable)",
                                          "value": "_msgSender"
                                        },
                                        "id": 686,
                                        "name": "Identifier",
                                        "src": "2520:10:2"
                                      }
                                    ],
                                    "id": 687,
                                    "name": "FunctionCall",
                                    "src": "2520:12:2"
                                  }
                                ],
                                "id": 688,
                                "name": "FunctionCall",
                                "src": "2498:35:2"
                              }
                            ],
                            "id": 689,
                            "name": "BinaryOperation",
                            "src": "2487:46:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e73756666696369656e742066756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Insufficient funds\"",
                              "value": "Insufficient funds"
                            },
                            "id": 690,
                            "name": "Literal",
                            "src": "2547:20:2"
                          }
                        ],
                        "id": 691,
                        "name": "FunctionCall",
                        "src": "2466:111:2"
                      }
                    ],
                    "id": 692,
                    "name": "ExpressionStatement",
                    "src": "2466:111:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        694
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 741,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 693,
                            "name": "ElementaryTypeName",
                            "src": "2667:4:2"
                          }
                        ],
                        "id": 694,
                        "name": "VariableDeclaration",
                        "src": "2667:12:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6255,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 498,
                                  "type": "contract IERC20",
                                  "value": "daiToken"
                                },
                                "id": 695,
                                "name": "Identifier",
                                "src": "2682:8:2"
                              }
                            ],
                            "id": 696,
                            "name": "MemberAccess",
                            "src": "2682:21:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                                      "typeString": "contract IPolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 697,
                                    "name": "ElementaryTypeName",
                                    "src": "2704:7:2"
                                  }
                                ],
                                "id": 698,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2704:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 678,
                                  "type": "contract IPolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 699,
                                "name": "Identifier",
                                "src": "2712:11:2"
                              }
                            ],
                            "id": 700,
                            "name": "FunctionCall",
                            "src": "2704:20:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 701,
                                    "name": "ElementaryTypeName",
                                    "src": "2726:7:2"
                                  }
                                ],
                                "id": 702,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2726:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 502,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 703,
                                "name": "Identifier",
                                "src": "2734:18:2"
                              }
                            ],
                            "id": 704,
                            "name": "FunctionCall",
                            "src": "2726:27:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 676,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 705,
                            "name": "Identifier",
                            "src": "2755:7:2"
                          }
                        ],
                        "id": 706,
                        "name": "FunctionCall",
                        "src": "2682:81:2"
                      }
                    ],
                    "id": 707,
                    "name": "VariableDeclarationStatement",
                    "src": "2667:96:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                                  "typeString": "literal_string \"Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 708,
                            "name": "Identifier",
                            "src": "2781:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 694,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 709,
                            "name": "Identifier",
                            "src": "2789:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer DAI tokens\"",
                              "value": "Failed to transfer DAI tokens"
                            },
                            "id": 710,
                            "name": "Literal",
                            "src": "2798:31:2"
                          }
                        ],
                        "id": 711,
                        "name": "FunctionCall",
                        "src": "2781:49:2"
                      }
                    ],
                    "id": 712,
                    "name": "ExpressionStatement",
                    "src": "2781:49:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 694,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 713,
                            "name": "Identifier",
                            "src": "2890:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 6255,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 678,
                                      "type": "contract IPolicyBook",
                                      "value": "_policyBook"
                                    },
                                    "id": 714,
                                    "name": "Identifier",
                                    "src": "2900:11:2"
                                  }
                                ],
                                "id": 715,
                                "name": "MemberAccess",
                                "src": "2900:24:2"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4773,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 716,
                                    "name": "Identifier",
                                    "src": "2925:10:2"
                                  }
                                ],
                                "id": 717,
                                "name": "FunctionCall",
                                "src": "2925:12:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BmiDAIStaking_$932",
                                          "typeString": "contract BmiDAIStaking"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 718,
                                        "name": "ElementaryTypeName",
                                        "src": "2939:7:2"
                                      }
                                    ],
                                    "id": 719,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2939:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -28,
                                      "type": "contract BmiDAIStaking",
                                      "value": "this"
                                    },
                                    "id": 720,
                                    "name": "Identifier",
                                    "src": "2947:4:2"
                                  }
                                ],
                                "id": 721,
                                "name": "FunctionCall",
                                "src": "2939:13:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 676,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 722,
                                "name": "Identifier",
                                "src": "2954:7:2"
                              }
                            ],
                            "id": 723,
                            "name": "FunctionCall",
                            "src": "2900:62:2"
                          }
                        ],
                        "id": 724,
                        "name": "Assignment",
                        "src": "2890:72:2"
                      }
                    ],
                    "id": 725,
                    "name": "ExpressionStatement",
                    "src": "2890:72:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                                  "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 726,
                            "name": "Identifier",
                            "src": "2980:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 694,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 727,
                            "name": "Identifier",
                            "src": "2988:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer bmiDAIx tokens\"",
                              "value": "Failed to transfer bmiDAIx tokens"
                            },
                            "id": 728,
                            "name": "Literal",
                            "src": "2997:35:2"
                          }
                        ],
                        "id": 729,
                        "name": "FunctionCall",
                        "src": "2980:53:2"
                      }
                    ],
                    "id": 730,
                    "name": "ExpressionStatement",
                    "src": "2980:53:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 674,
                              "type": "function (address,uint256,address)",
                              "value": "_mintNFT"
                            },
                            "id": 731,
                            "name": "Identifier",
                            "src": "3044:8:2"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4773,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 732,
                                "name": "Identifier",
                                "src": "3053:10:2"
                              }
                            ],
                            "id": 733,
                            "name": "FunctionCall",
                            "src": "3053:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 676,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 734,
                            "name": "Identifier",
                            "src": "3067:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IPolicyBook_$3036",
                                      "typeString": "contract IPolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 735,
                                    "name": "ElementaryTypeName",
                                    "src": "3076:7:2"
                                  }
                                ],
                                "id": 736,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3076:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 678,
                                  "type": "contract IPolicyBook",
                                  "value": "_policyBook"
                                },
                                "id": 737,
                                "name": "Identifier",
                                "src": "3084:11:2"
                              }
                            ],
                            "id": 738,
                            "name": "FunctionCall",
                            "src": "3076:20:2"
                          }
                        ],
                        "id": 739,
                        "name": "FunctionCall",
                        "src": "3044:53:2"
                      }
                    ],
                    "id": 740,
                    "name": "ExpressionStatement",
                    "src": "3044:53:2"
                  }
                ],
                "id": 741,
                "name": "Block",
                "src": "2456:648:2"
              }
            ],
            "id": 742,
            "name": "FunctionDefinition",
            "src": "2377:727:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                2856
              ],
              "functionSelector": "cd30a976",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawBMIProfit",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 746,
                "name": "OverrideSpecifier",
                "src": "3163:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 780,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 743,
                        "name": "ElementaryTypeName",
                        "src": "3137:7:2"
                      }
                    ],
                    "id": 744,
                    "name": "VariableDeclaration",
                    "src": "3137:15:2"
                  }
                ],
                "id": 745,
                "name": "ParameterList",
                "src": "3136:17:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 747,
                "name": "ParameterList",
                "src": "3172:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                                  "typeString": "literal_string \"Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 748,
                            "name": "Identifier",
                            "src": "3182:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3563,
                                      "type": "function (uint256) view returns (address)",
                                      "value": "ownerOfNFT"
                                    },
                                    "id": 749,
                                    "name": "Identifier",
                                    "src": "3191:10:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 744,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 750,
                                    "name": "Identifier",
                                    "src": "3202:7:2"
                                  }
                                ],
                                "id": 751,
                                "name": "FunctionCall",
                                "src": "3191:19:2"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4773,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 752,
                                    "name": "Identifier",
                                    "src": "3214:10:2"
                                  }
                                ],
                                "id": 753,
                                "name": "FunctionCall",
                                "src": "3214:12:2"
                              }
                            ],
                            "id": 754,
                            "name": "BinaryOperation",
                            "src": "3191:35:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not an NFT token owner\"",
                              "value": "Not an NFT token owner"
                            },
                            "id": 755,
                            "name": "Literal",
                            "src": "3228:24:2"
                          }
                        ],
                        "id": 756,
                        "name": "FunctionCall",
                        "src": "3182:71:2"
                      }
                    ],
                    "id": 757,
                    "name": "ExpressionStatement",
                    "src": "3182:71:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        759
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 779,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 758,
                            "name": "ElementaryTypeName",
                            "src": "3323:4:2"
                          }
                        ],
                        "id": 759,
                        "name": "VariableDeclaration",
                        "src": "3323:12:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6255,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 500,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 760,
                                "name": "Identifier",
                                "src": "3338:8:2"
                              }
                            ],
                            "id": 761,
                            "name": "MemberAccess",
                            "src": "3338:21:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 762,
                                    "name": "ElementaryTypeName",
                                    "src": "3360:7:2"
                                  }
                                ],
                                "id": 763,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3360:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 502,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 764,
                                "name": "Identifier",
                                "src": "3368:18:2"
                              }
                            ],
                            "id": 765,
                            "name": "FunctionCall",
                            "src": "3360:27:2"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4773,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 766,
                                "name": "Identifier",
                                "src": "3389:10:2"
                              }
                            ],
                            "id": 767,
                            "name": "FunctionCall",
                            "src": "3389:12:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "bmiProfit",
                              "referencedDeclaration": 2843,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 506,
                                      "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 768,
                                    "name": "Identifier",
                                    "src": "3403:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 744,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 769,
                                    "name": "Identifier",
                                    "src": "3416:7:2"
                                  }
                                ],
                                "id": 770,
                                "name": "IndexAccess",
                                "src": "3403:21:2"
                              }
                            ],
                            "id": 771,
                            "name": "MemberAccess",
                            "src": "3403:31:2"
                          }
                        ],
                        "id": 772,
                        "name": "FunctionCall",
                        "src": "3338:97:2"
                      }
                    ],
                    "id": 773,
                    "name": "VariableDeclarationStatement",
                    "src": "3323:112:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                                  "typeString": "literal_string \"Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 774,
                            "name": "Identifier",
                            "src": "3445:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 759,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 775,
                            "name": "Identifier",
                            "src": "3453:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer BMI tokens\"",
                              "value": "Failed to transfer BMI tokens"
                            },
                            "id": 776,
                            "name": "Literal",
                            "src": "3462:31:2"
                          }
                        ],
                        "id": 777,
                        "name": "FunctionCall",
                        "src": "3445:49:2"
                      }
                    ],
                    "id": 778,
                    "name": "ExpressionStatement",
                    "src": "3445:49:2"
                  }
                ],
                "id": 779,
                "name": "Block",
                "src": "3172:329:2"
              }
            ],
            "id": 780,
            "name": "FunctionDefinition",
            "src": "3110:391:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                2861
              ],
              "functionSelector": "a7fa3c7f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawFundsWithProfit",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 784,
                "name": "OverrideSpecifier",
                "src": "3566:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 888,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 781,
                        "name": "ElementaryTypeName",
                        "src": "3540:7:2"
                      }
                    ],
                    "id": 782,
                    "name": "VariableDeclaration",
                    "src": "3540:15:2"
                  }
                ],
                "id": 783,
                "name": "ParameterList",
                "src": "3539:17:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 785,
                "name": "ParameterList",
                "src": "3575:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_450e71f3e75cfd936b5b21e5c4f11fe0c5f578099737d763beef6e27c31a9d29",
                                  "typeString": "literal_string \"Funds are locked for 3 month\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 786,
                            "name": "Identifier",
                            "src": "3585:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 787,
                                    "name": "Identifier",
                                    "src": "3594:5:2"
                                  }
                                ],
                                "id": 788,
                                "name": "MemberAccess",
                                "src": "3594:15:2"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "stakingStartTime",
                                      "referencedDeclaration": 2837,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 506,
                                              "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                              "value": "_stakersPool"
                                            },
                                            "id": 789,
                                            "name": "Identifier",
                                            "src": "3612:12:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 782,
                                              "type": "uint256",
                                              "value": "tokenID"
                                            },
                                            "id": 790,
                                            "name": "Identifier",
                                            "src": "3625:7:2"
                                          }
                                        ],
                                        "id": 791,
                                        "name": "IndexAccess",
                                        "src": "3612:21:2"
                                      }
                                    ],
                                    "id": 792,
                                    "name": "MemberAccess",
                                    "src": "3612:38:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 494,
                                      "type": "uint256",
                                      "value": "THREE_MONTH"
                                    },
                                    "id": 793,
                                    "name": "Identifier",
                                    "src": "3653:11:2"
                                  }
                                ],
                                "id": 794,
                                "name": "BinaryOperation",
                                "src": "3612:52:2"
                              }
                            ],
                            "id": 795,
                            "name": "BinaryOperation",
                            "src": "3594:70:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "46756e647320617265206c6f636b656420666f722033206d6f6e7468",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Funds are locked for 3 month\"",
                              "value": "Funds are locked for 3 month"
                            },
                            "id": 796,
                            "name": "Literal",
                            "src": "3666:30:2"
                          }
                        ],
                        "id": 797,
                        "name": "FunctionCall",
                        "src": "3585:112:2"
                      }
                    ],
                    "id": 798,
                    "name": "ExpressionStatement",
                    "src": "3585:112:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_076bdc0b7ecfbd52240edd7bb2b63ddcd9c8ce623532a8fa6166e4dfa505ccb0",
                                  "typeString": "literal_string \"Not an NFT token owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 799,
                            "name": "Identifier",
                            "src": "3707:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3563,
                                      "type": "function (uint256) view returns (address)",
                                      "value": "ownerOfNFT"
                                    },
                                    "id": 800,
                                    "name": "Identifier",
                                    "src": "3716:10:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 782,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 801,
                                    "name": "Identifier",
                                    "src": "3727:7:2"
                                  }
                                ],
                                "id": 802,
                                "name": "FunctionCall",
                                "src": "3716:19:2"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4773,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 803,
                                    "name": "Identifier",
                                    "src": "3739:10:2"
                                  }
                                ],
                                "id": 804,
                                "name": "FunctionCall",
                                "src": "3739:12:2"
                              }
                            ],
                            "id": 805,
                            "name": "BinaryOperation",
                            "src": "3716:35:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616e204e465420746f6b656e206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not an NFT token owner\"",
                              "value": "Not an NFT token owner"
                            },
                            "id": 806,
                            "name": "Literal",
                            "src": "3753:24:2"
                          }
                        ],
                        "id": 807,
                        "name": "FunctionCall",
                        "src": "3707:71:2"
                      }
                    ],
                    "id": 808,
                    "name": "ExpressionStatement",
                    "src": "3707:71:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        812
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakingInfo",
                          "scope": 887,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct IBmiDaiStaking.StakingInfo",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "IBmiDaiStaking.StakingInfo",
                              "referencedDeclaration": 2844,
                              "type": "struct IBmiDaiStaking.StakingInfo"
                            },
                            "id": 811,
                            "name": "UserDefinedTypeName",
                            "src": "3796:26:2"
                          }
                        ],
                        "id": 812,
                        "name": "VariableDeclaration",
                        "src": "3796:45:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 506,
                              "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 813,
                            "name": "Identifier",
                            "src": "3844:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 782,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 814,
                            "name": "Identifier",
                            "src": "3857:7:2"
                          }
                        ],
                        "id": 815,
                        "name": "IndexAccess",
                        "src": "3844:21:2"
                      }
                    ],
                    "id": 816,
                    "name": "VariableDeclarationStatement",
                    "src": "3796:69:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        818
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 887,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 817,
                            "name": "ElementaryTypeName",
                            "src": "3939:4:2"
                          }
                        ],
                        "id": 818,
                        "name": "VariableDeclaration",
                        "src": "3939:12:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 6255,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 500,
                                  "type": "contract IERC20",
                                  "value": "bmiToken"
                                },
                                "id": 819,
                                "name": "Identifier",
                                "src": "3954:8:2"
                              }
                            ],
                            "id": 820,
                            "name": "MemberAccess",
                            "src": "3954:21:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                      "typeString": "contract DefiYieldGenerator"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 821,
                                    "name": "ElementaryTypeName",
                                    "src": "3976:7:2"
                                  }
                                ],
                                "id": 822,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3976:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 502,
                                  "type": "contract DefiYieldGenerator",
                                  "value": "defiYieldGenerator"
                                },
                                "id": 823,
                                "name": "Identifier",
                                "src": "3984:18:2"
                              }
                            ],
                            "id": 824,
                            "name": "FunctionCall",
                            "src": "3976:27:2"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4773,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 825,
                                "name": "Identifier",
                                "src": "4005:10:2"
                              }
                            ],
                            "id": 826,
                            "name": "FunctionCall",
                            "src": "4005:12:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "bmiProfit",
                              "referencedDeclaration": 2843,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 506,
                                      "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 827,
                                    "name": "Identifier",
                                    "src": "4019:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 782,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 828,
                                    "name": "Identifier",
                                    "src": "4032:7:2"
                                  }
                                ],
                                "id": 829,
                                "name": "IndexAccess",
                                "src": "4019:21:2"
                              }
                            ],
                            "id": 830,
                            "name": "MemberAccess",
                            "src": "4019:31:2"
                          }
                        ],
                        "id": 831,
                        "name": "FunctionCall",
                        "src": "3954:97:2"
                      }
                    ],
                    "id": 832,
                    "name": "VariableDeclarationStatement",
                    "src": "3939:112:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_75aba6b83a31728ee24c84bfce437a5bb5a14c1abac0ae492ec833f117ea3054",
                                  "typeString": "literal_string \"Failed to transfer BMI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 833,
                            "name": "Identifier",
                            "src": "4061:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 834,
                            "name": "Identifier",
                            "src": "4069:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220424d4920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer BMI tokens\"",
                              "value": "Failed to transfer BMI tokens"
                            },
                            "id": 835,
                            "name": "Literal",
                            "src": "4078:31:2"
                          }
                        ],
                        "id": 836,
                        "name": "FunctionCall",
                        "src": "4061:49:2"
                      }
                    ],
                    "id": 837,
                    "name": "ExpressionStatement",
                    "src": "4061:49:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 838,
                            "name": "Identifier",
                            "src": "4179:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 6255,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 498,
                                      "type": "contract IERC20",
                                      "value": "daiToken"
                                    },
                                    "id": 839,
                                    "name": "Identifier",
                                    "src": "4189:8:2"
                                  }
                                ],
                                "id": 840,
                                "name": "MemberAccess",
                                "src": "4189:21:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_DefiYieldGenerator_$1354",
                                          "typeString": "contract DefiYieldGenerator"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 841,
                                        "name": "ElementaryTypeName",
                                        "src": "4211:7:2"
                                      }
                                    ],
                                    "id": 842,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4211:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 502,
                                      "type": "contract DefiYieldGenerator",
                                      "value": "defiYieldGenerator"
                                    },
                                    "id": 843,
                                    "name": "Identifier",
                                    "src": "4219:18:2"
                                  }
                                ],
                                "id": 844,
                                "name": "FunctionCall",
                                "src": "4211:27:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "policyBookAddress",
                                  "referencedDeclaration": 2841,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 812,
                                      "type": "struct IBmiDaiStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 845,
                                    "name": "Identifier",
                                    "src": "4240:11:2"
                                  }
                                ],
                                "id": 846,
                                "name": "MemberAccess",
                                "src": "4240:29:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 2839,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 812,
                                      "type": "struct IBmiDaiStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 847,
                                    "name": "Identifier",
                                    "src": "4271:11:2"
                                  }
                                ],
                                "id": 848,
                                "name": "MemberAccess",
                                "src": "4271:27:2"
                              }
                            ],
                            "id": 849,
                            "name": "FunctionCall",
                            "src": "4189:110:2"
                          }
                        ],
                        "id": 850,
                        "name": "Assignment",
                        "src": "4179:120:2"
                      }
                    ],
                    "id": 851,
                    "name": "ExpressionStatement",
                    "src": "4179:120:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30c4b813785f2276e847751867ce492aba290b883b901eec55ad447840f94f27",
                                  "typeString": "literal_string \"Failed to transfer DAI tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 852,
                            "name": "Identifier",
                            "src": "4309:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 853,
                            "name": "Identifier",
                            "src": "4317:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e736665722044414920746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer DAI tokens\"",
                              "value": "Failed to transfer DAI tokens"
                            },
                            "id": 854,
                            "name": "Literal",
                            "src": "4326:31:2"
                          }
                        ],
                        "id": 855,
                        "name": "FunctionCall",
                        "src": "4309:49:2"
                      }
                    ],
                    "id": 856,
                    "name": "ExpressionStatement",
                    "src": "4309:49:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 857,
                            "name": "Identifier",
                            "src": "4425:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transfer",
                                  "referencedDeclaration": 6223,
                                  "type": "function (address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "contract IERC20",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 6274,
                                          "type": "type(contract IERC20)",
                                          "value": "IERC20"
                                        },
                                        "id": 858,
                                        "name": "Identifier",
                                        "src": "4435:6:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "policyBookAddress",
                                          "referencedDeclaration": 2841,
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 812,
                                              "type": "struct IBmiDaiStaking.StakingInfo memory",
                                              "value": "stakingInfo"
                                            },
                                            "id": 859,
                                            "name": "Identifier",
                                            "src": "4442:11:2"
                                          }
                                        ],
                                        "id": 860,
                                        "name": "MemberAccess",
                                        "src": "4442:29:2"
                                      }
                                    ],
                                    "id": 861,
                                    "name": "FunctionCall",
                                    "src": "4435:37:2"
                                  }
                                ],
                                "id": 862,
                                "name": "MemberAccess",
                                "src": "4435:46:2"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4773,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 863,
                                    "name": "Identifier",
                                    "src": "4482:10:2"
                                  }
                                ],
                                "id": 864,
                                "name": "FunctionCall",
                                "src": "4482:12:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stakedDaiAmount",
                                  "referencedDeclaration": 2839,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 812,
                                      "type": "struct IBmiDaiStaking.StakingInfo memory",
                                      "value": "stakingInfo"
                                    },
                                    "id": 865,
                                    "name": "Identifier",
                                    "src": "4496:11:2"
                                  }
                                ],
                                "id": 866,
                                "name": "MemberAccess",
                                "src": "4496:27:2"
                              }
                            ],
                            "id": 867,
                            "name": "FunctionCall",
                            "src": "4435:89:2"
                          }
                        ],
                        "id": 868,
                        "name": "Assignment",
                        "src": "4425:99:2"
                      }
                    ],
                    "id": 869,
                    "name": "ExpressionStatement",
                    "src": "4425:99:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9dac649747264614ee188a333d897dad592d09628527841d01fadbf6ffd29b49",
                                  "typeString": "literal_string \"Failed to transfer bmiDAIx tokens\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 870,
                            "name": "Identifier",
                            "src": "4534:7:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 871,
                            "name": "Identifier",
                            "src": "4542:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4661696c656420746f207472616e7366657220626d694441497820746f6b656e73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Failed to transfer bmiDAIx tokens\"",
                              "value": "Failed to transfer bmiDAIx tokens"
                            },
                            "id": 872,
                            "name": "Literal",
                            "src": "4551:35:2"
                          }
                        ],
                        "id": 873,
                        "name": "FunctionCall",
                        "src": "4534:53:2"
                      }
                    ],
                    "id": 874,
                    "name": "ExpressionStatement",
                    "src": "4534:53:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4461,
                              "type": "function (address,uint256,uint256)",
                              "value": "_burn"
                            },
                            "id": 875,
                            "name": "Identifier",
                            "src": "4598:5:2"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4773,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 876,
                                "name": "Identifier",
                                "src": "4604:10:2"
                              }
                            ],
                            "id": 877,
                            "name": "FunctionCall",
                            "src": "4604:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 782,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 878,
                            "name": "Identifier",
                            "src": "4618:7:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 879,
                            "name": "Literal",
                            "src": "4627:1:2"
                          }
                        ],
                        "id": 880,
                        "name": "FunctionCall",
                        "src": "4598:31:2"
                      }
                    ],
                    "id": 881,
                    "name": "ExpressionStatement",
                    "src": "4598:31:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 506,
                                  "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                  "value": "_stakersPool"
                                },
                                "id": 882,
                                "name": "Identifier",
                                "src": "4646:12:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 782,
                                  "type": "uint256",
                                  "value": "tokenID"
                                },
                                "id": 883,
                                "name": "Identifier",
                                "src": "4659:7:2"
                              }
                            ],
                            "id": 884,
                            "name": "IndexAccess",
                            "src": "4646:21:2"
                          }
                        ],
                        "id": 885,
                        "name": "UnaryOperation",
                        "src": "4639:28:2"
                      }
                    ],
                    "id": 886,
                    "name": "ExpressionStatement",
                    "src": "4639:28:2"
                  }
                ],
                "id": 887,
                "name": "Block",
                "src": "3575:1099:2"
              }
            ],
            "id": 888,
            "name": "FunctionDefinition",
            "src": "3507:1167:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                2868
              ],
              "functionSelector": "cc199391",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "increaseBmiProfit",
              "scope": 932,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 894,
                "name": "OverrideSpecifier",
                "src": "4749:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 911,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 889,
                        "name": "ElementaryTypeName",
                        "src": "4707:7:2"
                      }
                    ],
                    "id": 890,
                    "name": "VariableDeclaration",
                    "src": "4707:15:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 911,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 891,
                        "name": "ElementaryTypeName",
                        "src": "4724:7:2"
                      }
                    ],
                    "id": 892,
                    "name": "VariableDeclaration",
                    "src": "4724:14:2"
                  }
                ],
                "id": 893,
                "name": "ParameterList",
                "src": "4706:33:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 897,
                "name": "ParameterList",
                "src": "4781:0:2"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 530,
                      "type": "modifier ()",
                      "value": "onlyDefiYieldGenerator"
                    },
                    "id": 895,
                    "name": "Identifier",
                    "src": "4758:22:2"
                  }
                ],
                "id": 896,
                "name": "ModifierInvocation",
                "src": "4758:22:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "bmiProfit",
                              "referencedDeclaration": 2843,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 506,
                                      "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                      "value": "_stakersPool"
                                    },
                                    "id": 898,
                                    "name": "Identifier",
                                    "src": "4799:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 890,
                                      "type": "uint256",
                                      "value": "tokenID"
                                    },
                                    "id": 899,
                                    "name": "Identifier",
                                    "src": "4812:7:2"
                                  }
                                ],
                                "id": 900,
                                "name": "IndexAccess",
                                "src": "4799:21:2"
                              }
                            ],
                            "id": 901,
                            "name": "MemberAccess",
                            "src": "4799:31:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "bmiProfit",
                                  "referencedDeclaration": 2843,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 506,
                                          "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                                          "value": "_stakersPool"
                                        },
                                        "id": 902,
                                        "name": "Identifier",
                                        "src": "4833:12:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 890,
                                          "type": "uint256",
                                          "value": "tokenID"
                                        },
                                        "id": 903,
                                        "name": "Identifier",
                                        "src": "4846:7:2"
                                      }
                                    ],
                                    "id": 904,
                                    "name": "IndexAccess",
                                    "src": "4833:21:2"
                                  }
                                ],
                                "id": 905,
                                "name": "MemberAccess",
                                "src": "4833:31:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 892,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 906,
                                "name": "Identifier",
                                "src": "4867:6:2"
                              }
                            ],
                            "id": 907,
                            "name": "BinaryOperation",
                            "src": "4833:40:2"
                          }
                        ],
                        "id": 908,
                        "name": "Assignment",
                        "src": "4799:74:2"
                      }
                    ],
                    "id": 909,
                    "name": "ExpressionStatement",
                    "src": "4799:74:2"
                  }
                ],
                "id": 910,
                "name": "Block",
                "src": "4781:99:2"
              }
            ],
            "id": 911,
            "name": "FunctionDefinition",
            "src": "4680:200:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                2875
              ],
              "functionSelector": "076befe7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getStakingInfoByTokenID",
              "scope": 932,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 915,
                "name": "OverrideSpecifier",
                "src": "4950:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenID",
                      "scope": 931,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 912,
                        "name": "ElementaryTypeName",
                        "src": "4919:7:2"
                      }
                    ],
                    "id": 913,
                    "name": "VariableDeclaration",
                    "src": "4919:15:2"
                  }
                ],
                "id": 914,
                "name": "ParameterList",
                "src": "4918:17:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_stakingInfo",
                      "scope": 931,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct IBmiDaiStaking.StakingInfo",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IBmiDaiStaking.StakingInfo",
                          "referencedDeclaration": 2844,
                          "type": "struct IBmiDaiStaking.StakingInfo"
                        },
                        "id": 916,
                        "name": "UserDefinedTypeName",
                        "src": "4968:26:2"
                      }
                    ],
                    "id": 917,
                    "name": "VariableDeclaration",
                    "src": "4968:46:2"
                  }
                ],
                "id": 918,
                "name": "ParameterList",
                "src": "4967:48:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2a62bd8fb899d993837fea6aa2bb3e383cdaad28f95fcb3d5a52dbb64c35b6db",
                                  "typeString": "literal_string \"NFT with such ID doesn't exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 919,
                            "name": "Identifier",
                            "src": "5026:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4074,
                                  "type": "function (uint256) view returns (bool)",
                                  "value": "_existsNFT"
                                },
                                "id": 920,
                                "name": "Identifier",
                                "src": "5035:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 913,
                                  "type": "uint256",
                                  "value": "tokenID"
                                },
                                "id": 921,
                                "name": "Identifier",
                                "src": "5046:7:2"
                              }
                            ],
                            "id": 922,
                            "name": "FunctionCall",
                            "src": "5035:19:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e46542077697468207375636820494420646f65736e2774206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"NFT with such ID doesn't exist\"",
                              "value": "NFT with such ID doesn't exist"
                            },
                            "id": 923,
                            "name": "Literal",
                            "src": "5056:32:2"
                          }
                        ],
                        "id": 924,
                        "name": "FunctionCall",
                        "src": "5026:63:2"
                      }
                    ],
                    "id": 925,
                    "name": "ExpressionStatement",
                    "src": "5026:63:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 918
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct IBmiDaiStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 506,
                              "type": "mapping(uint256 => struct IBmiDaiStaking.StakingInfo storage ref)",
                              "value": "_stakersPool"
                            },
                            "id": 926,
                            "name": "Identifier",
                            "src": "5107:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 913,
                              "type": "uint256",
                              "value": "tokenID"
                            },
                            "id": 927,
                            "name": "Identifier",
                            "src": "5120:7:2"
                          }
                        ],
                        "id": 928,
                        "name": "IndexAccess",
                        "src": "5107:21:2"
                      }
                    ],
                    "id": 929,
                    "name": "Return",
                    "src": "5100:28:2"
                  }
                ],
                "id": 930,
                "name": "Block",
                "src": "5016:119:2"
              }
            ],
            "id": 931,
            "name": "FunctionDefinition",
            "src": "4886:249:2"
          }
        ],
        "id": 932,
        "name": "ContractDefinition",
        "src": "355:4782:2"
      }
    ],
    "id": 933,
    "name": "SourceUnit",
    "src": "32:5106:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {
    "1611324659295": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x0176f203df400d7bd5f1b1c9ef36c16709bf3b5d9fd35f000a6bae32393f66c3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "NFTMinted",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xB1281152FBE66ab803c82b8399160C924fDA804c",
      "transactionHash": "0x2e0e583909f0572fbb444747127d027f3e45e31622c5e31fd6c9ff7fa1eb2199"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-22T16:22:26.235Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}