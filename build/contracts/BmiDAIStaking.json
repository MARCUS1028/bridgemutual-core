{
  "contractName": "BmiDAIStaking",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "contract PolicyBook",
          "name": "policyBook",
          "type": "address"
        }
      ],
      "name": "stakeDAIx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract PolicyBook\",\"name\":\"policyBook\",\"type\":\"address\"}],\"name\":\"stakeDAIx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol\":\"BmiDAIStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol\":{\"keccak256\":\"0x04b51f06bb71896ef522a3a24411619ccb031a99f306c1f43bde03b3f07034c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15a1f2c9cb32dae86206b8ddd714d0e4c6cb5cc047eadabe25d9613c4cb5398c\",\"dweb:/ipfs/QmcyenwS5d7b5YxJJ4eQixRuwNPuFYw9zZCP1CWDemf65Y\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol\":{\"keccak256\":\"0xc53e806fcaf66aca41a1c3e896229c8e72d342c9a2a48ec2a9617c65ba31de04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7044892411c9085bab734478b079d0b22e8052a57a897d45d353fd404d0e376e\",\"dweb:/ipfs/Qmev9pZHtVW7AYuupEUoCGogQjj9FyLMUiyMKDpvwex4Ht\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBook.sol\":{\"keccak256\":\"0xc05ba7921ec6eda899502abd4aac7149486f7ac4af20801fb9d8bd799882112d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a231a6e549a379eade503449038aa69f933b576a9555ba96aa0298458b05685\",\"dweb:/ipfs/QmUFhL12emV2tTPtHR23JXeFhQiH9oDe9T7qvKn3YkurSS\"]},\"/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/interfaces/IPolicyBookFabric.sol\":{\"keccak256\":\"0xbad7303fb38ce95695c90327b81fba5839bd5dfd375f588d3895c7cf3d5936b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c11ed13cc4984e2e491b43bf1a0f7e5181c749ab6f84db470ec174f4c77cde3\",\"dweb:/ipfs/QmYt3N3kMSFyMbZFEpzzdTa4QHgaMzGiaVJbTVDnFW62tq\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d676d5c3a72e5fea8364a1e3e5b488a959aae08d069995b1274027f3845e6521\",\"dweb:/ipfs/Qma7DL738Wje4G9kcwW9bXwTGY4ePR7SMmsMhbULWqmixE\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5a3de7f7f76e47a071195cf42e2a702265694a6b32037de709463bd8ad784fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://678cbad1f972a4d8c9d47bc39fa6d39560b4fc143c8d9c812a63fe99bb13062e\",\"dweb:/ipfs/QmUhLDvUndcbQLakDNg9G4UXz8UPzRqC6S3rWGKupB6DYs\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600b553480156200001657600080fd5b50604080518082018252601481527f4272696467654d757475616c207374616b696e6700000000000000000000000060208083019190915282518084019093526003835262424d5360e81b9083015290620000786301ffc9a760e01b620000e2565b81516200008d90600690602085019062000167565b508051620000a390600790602084019062000167565b50620000b66380ac58cd60e01b620000e2565b620000c8635b5e139f60e01b620000e2565b620000da63780e9d6360e01b620000e2565b505062000213565b6001600160e01b0319808216141562000142576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200019f5760008555620001ea565b82601f10620001ba57805160ff1916838001178555620001ea565b82800160010185558215620001ea579182015b82811115620001ea578251825591602001919060010190620001cd565b50620001f8929150620001fc565b5090565b5b80821115620001f85760008155600101620001fd565b6124c680620002236000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80636352211e116100cd57806395d89b4111610081578063b88d4fde11610066578063b88d4fde1461028e578063c87b56dd146102a1578063e985e9c5146102b457610151565b806395d89b4114610273578063a22cb4651461027b57610151565b806370a08231116100b257806370a08231146102455780638192771414610258578063959499b61461026b57610151565b80636352211e1461022a5780636c0360eb1461023d57610151565b806318160ddd116101245780632f745c59116101095780632f745c59146101f157806342842e0e146102045780634f6ccce71461021757610151565b806318160ddd146101c957806323b872dd146101de57610151565b806301ffc9a71461015657806306fdde031461017f578063081812fc14610194578063095ea7b3146101b4575b600080fd5b6101696101643660046120b0565b6102c7565b6040516101769190612165565b60405180910390f35b610187610302565b6040516101769190612170565b6101a76101a23660046120f0565b610398565b6040516101769190612144565b6101c76101c2366004612085565b610407565b005b6101d1610511565b6040516101769190612218565b6101c76101ec366004611f32565b610522565b6101d16101ff366004612085565b610579565b6101c7610212366004611f32565b6105b1565b6101d16102253660046120f0565b6105cc565b6101a76102383660046120f0565b6105e2565b61018761060a565b6101d1610253366004611ede565b61066b565b6101c7610266366004612120565b6106ed565b6101c76107bb565b6101876107bd565b6101c7610289366004612054565b61081e565b6101c761029c366004611f72565b610975565b6101876102af3660046120f0565b6109d3565b6101696102c2366004611efa565b610cb6565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050905090565b60006103a382610cf1565b6103de5760405162461bcd60e51b815260040180806020018281038252602c8152602001806123bb602c913960400191505060405180910390fd5b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610412826105e2565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561047f5760405162461bcd60e51b815260040180806020018281038252602181526020018061243f6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661049e610cfe565b73ffffffffffffffffffffffffffffffffffffffff1614806104c757506104c7816102c2610cfe565b6105025760405162461bcd60e51b815260040180806020018281038252603881526020018061230e6038913960400191505060405180910390fd5b61050c8383610d02565b505050565b600061051d6002610da2565b905090565b61053361052d610cfe565b82610dad565b61056e5760405162461bcd60e51b81526004018080602001828103825260318152602001806124606031913960400191505060405180910390fd5b61050c838383610e85565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081206105a8908361102c565b90505b92915050565b61050c83838360405180602001604052806000815250610975565b6000806105da600284611038565b509392505050565b60006105ab826040518060600160405280602981526020016123706029913960029190611054565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561038e5780601f106103635761010080835404028352916020019161038e565b600073ffffffffffffffffffffffffffffffffffffffff82166106bf5760405162461bcd60e51b815260040180806020018281038252602a815260200180612346602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090206105ab90610da2565b8073ffffffffffffffffffffffffffffffffffffffff166370a08231610711610cfe565b6040518263ffffffff1660e01b815260040161072d9190612144565b60206040518083038186803b15801561074557600080fd5b505afa158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d9190612108565b8211156107a55760405162461bcd60e51b815260040161079c906121e1565b60405180910390fd5b6107b76107b0610cfe565b838361106b565b5050565b565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561038e5780601f106103635761010080835404028352916020019161038e565b610826610cfe565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108a6576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b80600560006108b3610cfe565b73ffffffffffffffffffffffffffffffffffffffff90811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610922610cfe565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610986610980610cfe565b83610dad565b6109c15760405162461bcd60e51b81526004018080602001828103825260318152602001806124606031913960400191505060405180910390fd5b6109cd848484846111d0565b50505050565b60606109de82610cf1565b610a195760405162461bcd60e51b815260040180806020018281038252602f815260200180612410602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610aae5780601f10610a8357610100808354040283529160200191610aae565b820191906000526020600020905b815481529060010190602001808311610a9157829003601f168201915b505060095493945050505060026000196101006001841615020190911604610ad75790506102fd565b805115610bc6576009816040516020018083805460018160011615610100020316600290048015610b3f5780601f10610b1d576101008083540402835291820191610b3f565b820191906000526020600020905b815481529060010190602001808311610b2b575b5050825160208401908083835b60208310610b8957805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610b4c565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506102fd565b6009610bd184611222565b6040516020018083805460018160011615610100020316600290048015610c2f5780601f10610c0d576101008083540402835291820191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1b575b5050825160208401908083835b60208310610c7957805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610c3c565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006105ab600283611331565b3390565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610d5c826105e2565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006105ab8261133d565b6000610db882610cf1565b610df35760405162461bcd60e51b815260040180806020018281038252602c8152602001806122e2602c913960400191505060405180910390fd5b6000610dfe836105e2565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610e6d57508373ffffffffffffffffffffffffffffffffffffffff16610e5584610398565b73ffffffffffffffffffffffffffffffffffffffff16145b80610e7d5750610e7d8185610cb6565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610ea5826105e2565b73ffffffffffffffffffffffffffffffffffffffff1614610ef75760405162461bcd60e51b81526004018080602001828103825260298152602001806123e76029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610f495760405162461bcd60e51b81526004018080602001828103825260248152602001806122986024913960400191505060405180910390fd5b610f5483838361050c565b610f5f600082610d02565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260409020610f8e9082611341565b5073ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020610fbe908261134d565b50610fcb60028284611359565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006105a8838361137c565b600080808061104786866113e0565b9097909650945050505050565b600061106184848461145b565b90505b9392505050565b60006110768461066b565b90508260005b828110156111315760006110908783610579565b6000818152600a602052604090206002015490915073ffffffffffffffffffffffffffffffffffffffff86811691161415611128576000818152600a602052604090206001015492909201916110e581611525565b6000818152600a60205260408120818155600181019190915560020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b5060010161107c565b5061113e85600b5461160c565b60408051606081018252428152602080820193845273ffffffffffffffffffffffffffffffffffffffff958616828401908152600b80546000908152600a909352939091209151825592516001808301919091559251600290910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169190951617909355825401909155505050565b6111db848484610e85565b6111e784848484611626565b6109cd5760405162461bcd60e51b81526004018080602001828103825260328152602001806122666032913960400191505060405180910390fd5b606081611263575060408051808201909152600181527f300000000000000000000000000000000000000000000000000000000000000060208201526102fd565b8160005b811561127b57600101600a82049150611267565b60608167ffffffffffffffff8111801561129457600080fd5b506040519080825280601f01601f1916602001820160405280156112bf576020820181803683370190505b50859350905060001982015b831561132857600a840660300160f81b828280600190039350815181106112ee57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a840493506112cb565b50949350505050565b60006105a88383611836565b5490565b60006105a8838361184e565b60006105a88383611914565b6000611061848473ffffffffffffffffffffffffffffffffffffffff851661195e565b815460009082106113be5760405162461bcd60e51b81526004018080602001828103825260228152602001806122446022913960400191505060405180910390fd5b8260000182815481106113cd57fe5b9060005260206000200154905092915050565b8154600090819083106114245760405162461bcd60e51b81526004018080602001828103825260228152602001806123996022913960400191505060405180910390fd5b600084600001848154811061143557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816114f65760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114bb5781810151838201526020016114a3565b50505050905090810190601f1680156114e85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061150957fe5b9060005260206000209060020201600101549150509392505050565b6000611530826105e2565b905061153e8160008461050c565b611549600083610d02565b600082815260086020526040902054600260001961010060018416150201909116041561158757600082815260086020526040812061158791611e7e565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090206115b69083611341565b506115c26002836119f5565b50604051829060009073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6107b7828260405180602001604052806000815250611a01565b60006116478473ffffffffffffffffffffffffffffffffffffffff16611a53565b61165357506001610e7d565b60606117cb7f150b7a0200000000000000000000000000000000000000000000000000000000611681610cfe565b888787604051602401808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156117025781810151838201526020016116ea565b50505050905090810190601f16801561172f5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518060600160405280603281526020016122666032913973ffffffffffffffffffffffffffffffffffffffff88169190611a59565b905060008180602001905160208110156117e457600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b60009081526001919091016020526040902054151590565b6000818152600183016020526040812054801561190a578354600019808301919081019060009087908390811061188157fe5b906000526020600020015490508087600001848154811061189e57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806118ce57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506105ab565b60009150506105ab565b60006119208383611836565b611956575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105ab565b5060006105ab565b6000828152600184016020526040812054806119c3575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611064565b828560000160018303815481106119d657fe5b9060005260206000209060020201600101819055506000915050611064565b60006105a88383611a68565b611a0b8383611b3c565b611a186000848484611626565b61050c5760405162461bcd60e51b81526004018080602001828103825260328152602001806122666032913960400191505060405180910390fd5b3b151590565b60606110618484600085611c91565b6000818152600183016020526040812054801561190a5783546000198083019190810190600090879083908110611a9b57fe5b9060005260206000209060020201905080876000018481548110611abb57fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080611afa57fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506105ab9350505050565b73ffffffffffffffffffffffffffffffffffffffff8216611ba4576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611bad81610cf1565b15611bff576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611c0b6000838361050c565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160205260409020611c3a908261134d565b50611c4760028284611359565b50604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606082471015611cd25760405162461bcd60e51b81526004018080602001828103825260268152602001806122bc6026913960400191505060405180910390fd5b611cdb85611a53565b611d2c576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310611d9657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611d59565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611df8576040519150601f19603f3d011682016040523d82523d6000602084013e611dfd565b606091505b5091509150611e0d828286611e18565b979650505050505050565b60608315611e27575081611064565b825115611e375782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156114bb5781810151838201526020016114a3565b50805460018160011615610100020316600290046000825580601f10611ea45750611ec2565b601f016020900490600052602060002090810190611ec29190611ec5565b50565b5b80821115611eda5760008155600101611ec6565b5090565b600060208284031215611eef578081fd5b813561106481612221565b60008060408385031215611f0c578081fd5b8235611f1781612221565b91506020830135611f2781612221565b809150509250929050565b600080600060608486031215611f46578081fd5b8335611f5181612221565b92506020840135611f6181612221565b929592945050506040919091013590565b60008060008060808587031215611f87578081fd5b8435611f9281612221565b9350602085810135611fa381612221565b935060408601359250606086013567ffffffffffffffff80821115611fc6578384fd5b818801915088601f830112611fd9578384fd5b813581811115611fe557fe5b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116820101818110848211171561202057fe5b60405281815283820185018b1015612036578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215612066578182fd5b823561207181612221565b915060208301358015158114611f27578182fd5b60008060408385031215612097578182fd5b82356120a281612221565b946020939093013593505050565b6000602082840312156120c1578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611064578182fd5b600060208284031215612101578081fd5b5035919050565b600060208284031215612119578081fd5b5051919050565b60008060408385031215612132578182fd5b823591506020830135611f2781612221565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561219c57858101830151858201604001528201612180565b818111156121ad5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526012908201527f496e73756666696369656e742066756e64730000000000000000000000000000604082015260600190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff81168114611ec257600080fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212205eff542f2a8c15f2fb1a149daed35888969eec0ada045d81564e9c31883182fc64736f6c63430007040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6433:35",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:35",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:35",
                "type": ""
              }
            ],
            "src": "14:259:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "365:315:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "411:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "420:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "428:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "413:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "413:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "413:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "386:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "395:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "382:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "382:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "407:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "378:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "378:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "375:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "446:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "472:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "459:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "450:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "518:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "491:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "491:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "533:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "543:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "557:47:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "589:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "600:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "585:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "585:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "572:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:32:35"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "561:7:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "640:7:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "613:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:35:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:35:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "657:17:35",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "667:7:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "657:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "323:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "334:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "346:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "354:6:35",
                "type": ""
              }
            ],
            "src": "278:402:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "789:366:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "835:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "844:6:35"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "852:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "837:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "837:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "837:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "810:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "819:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "806:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "806:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "831:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "802:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "802:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "799:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "870:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "896:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "883:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "874:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "942:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "915:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "915:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "915:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "957:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "967:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "957:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "981:47:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1013:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1024:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1009:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1009:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "996:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:32:35"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "985:7:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1064:7:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1037:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1037:35:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1037:35:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1081:17:35",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1091:7:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1081:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1107:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1134:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1145:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1130:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1117:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1107:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "739:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "750:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "762:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "770:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "778:6:35",
                "type": ""
              }
            ],
            "src": "685:470:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1290:1245:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1337:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1346:6:35"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1354:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1339:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1339:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1339:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1311:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1320:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1332:3:35",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1303:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1303:33:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1300:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1372:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1398:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1385:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1385:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1376:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1444:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1417:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1417:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1459:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1469:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1459:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1483:12:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1493:2:35",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1487:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1504:47:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1536:9:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1547:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1532:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1532:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1519:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1519:32:35"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1508:7:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1587:7:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1560:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1560:35:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1560:35:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1604:17:35",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1614:7:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1604:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1630:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1657:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1668:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1640:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1630:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1681:46:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1712:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1723:2:35",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1708:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1708:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1695:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:32:35"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1685:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1736:28:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1746:18:35",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1740:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1791:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1800:6:35"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1808:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1793:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1793:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1793:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1779:6:35"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1787:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1776:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:14:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1773:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1826:32:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1840:9:35"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1851:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1836:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:22:35"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1830:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1906:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1915:6:35"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1923:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1908:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1908:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1908:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1885:2:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1889:4:35",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1881:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1881:13:35"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1896:7:35"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1877:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:27:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1870:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1870:35:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1867:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1941:30:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1968:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1955:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1955:16:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1945:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1998:13:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2000:7:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2000:9:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2000:9:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1986:6:35"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1994:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1983:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:14:35"
                  },
                  "nodeType": "YulIf",
                  "src": "1980:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2020:23:35",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2040:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2034:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2034:9:35"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2024:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2052:130:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2078:6:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2094:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2102:4:35",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2090:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2090:17:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2109:66:35",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2086:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2086:90:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2074:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:103:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2179:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2070:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2070:112:35"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2056:10:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2241:13:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nodeType": "YulIdentifier",
                            "src": "2243:7:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2243:9:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2243:9:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2200:10:35"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2212:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2197:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2197:18:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2220:10:35"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2232:6:35"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2217:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2217:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2194:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:46:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2191:2:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2270:2:35",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2274:10:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2263:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2263:22:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2263:22:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2301:6:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2309:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:22:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:22:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2366:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2375:6:35"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2383:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2368:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2368:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2368:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2339:2:35"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2343:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2335:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2335:15:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2352:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2331:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2331:24:35"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2357:7:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2328:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:37:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2325:2:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2418:6:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2426:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2414:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2414:15:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2435:2:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2439:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2431:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2431:11:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2444:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2401:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2401:50:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2401:50:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2475:6:35"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2483:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2471:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2471:19:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2492:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2467:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2467:28:35"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2497:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2460:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:44:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2460:44:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2513:16:35",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2523:6:35"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2513:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1232:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1243:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1255:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1263:6:35",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1271:6:35",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1279:6:35",
                "type": ""
              }
            ],
            "src": "1160:1375:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:354:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2670:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2679:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2687:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2672:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2672:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2672:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2645:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2654:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2641:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2641:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2666:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2637:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2634:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2705:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2731:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2718:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2718:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2709:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2777:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2750:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2750:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2750:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2792:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2802:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2792:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2816:47:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2848:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2859:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2844:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2844:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2831:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2831:32:35"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2820:7:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2920:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2929:6:35"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2937:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2922:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2922:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2922:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "2885:7:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2908:7:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2901:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2901:15:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2894:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2894:23:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2882:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2882:36:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2875:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:44:35"
                  },
                  "nodeType": "YulIf",
                  "src": "2872:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2955:17:35",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2965:7:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2955:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2582:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2593:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2605:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2613:6:35",
                "type": ""
              }
            ],
            "src": "2540:438:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3070:240:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3116:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3125:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3133:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3118:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3118:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3118:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3091:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3100:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3087:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3087:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3112:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3083:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3083:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3080:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3151:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3177:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3164:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3164:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3155:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3223:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3196:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3238:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3248:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3238:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3262:42:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3289:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3300:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3285:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3285:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3272:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3272:32:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3028:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3039:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3051:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3059:6:35",
                "type": ""
              }
            ],
            "src": "2983:327:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3384:283:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3430:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3439:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3447:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3432:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3432:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3432:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3405:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3414:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3401:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3401:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3426:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3397:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3397:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3394:2:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3465:36:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3491:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3478:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3478:23:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3469:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3611:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3620:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3628:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3613:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3613:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3613:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3523:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3534:5:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3541:66:35",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3530:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3530:78:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3520:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3520:89:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3513:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3513:97:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3510:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3646:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3656:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3646:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3350:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3361:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3373:6:35",
                "type": ""
              }
            ],
            "src": "3315:352:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3742:120:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3788:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3797:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3805:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3790:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3790:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3790:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3763:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3772:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3759:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3759:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3784:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3755:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3752:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3823:33:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3846:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3833:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:23:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3823:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3708:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3719:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3731:6:35",
                "type": ""
              }
            ],
            "src": "3672:190:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3948:113:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3994:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4003:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4011:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3996:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3996:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3996:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3969:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3978:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3965:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3965:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3961:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3961:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "3958:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4029:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4045:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4039:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4039:16:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4029:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3914:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3925:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3937:6:35",
                "type": ""
              }
            ],
            "src": "3867:194:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4172:240:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4218:26:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4227:6:35"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4235:6:35"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4220:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4220:22:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4220:22:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4193:7:35"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4202:9:35"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4189:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4189:23:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4214:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4185:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4185:32:35"
                  },
                  "nodeType": "YulIf",
                  "src": "4182:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4253:33:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4276:9:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4263:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4263:23:35"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4253:6:35"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4295:45:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4325:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4336:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4321:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:18:35"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4308:12:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:32:35"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4299:5:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4376:5:35"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4349:26:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4349:33:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4349:33:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4391:15:35",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4401:5:35"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4391:6:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_PolicyBook_$1447",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4130:9:35",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4141:7:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4153:6:35",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4161:6:35",
                "type": ""
              }
            ],
            "src": "4066:346:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4518:125:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4528:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4540:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4551:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4536:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4536:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4528:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4570:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4585:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4593:42:35",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4581:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4581:55:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4563:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4563:74:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4563:74:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4487:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4498:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4509:4:35",
                "type": ""
              }
            ],
            "src": "4417:226:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4757:125:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4767:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4779:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4790:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4775:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4767:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4809:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4824:6:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4832:42:35",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4820:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4820:55:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4802:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4802:74:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4802:74:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4726:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4737:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4748:4:35",
                "type": ""
              }
            ],
            "src": "4648:234:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4982:92:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4992:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5004:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5015:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5000:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5000:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4992:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5034:9:35"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5059:6:35"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5052:6:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5052:14:35"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5045:6:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5045:22:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5027:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5027:41:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5027:41:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4951:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4962:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4973:4:35",
                "type": ""
              }
            ],
            "src": "4887:187:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5200:541:35",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5210:12:35",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5220:2:35",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5214:2:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5238:9:35"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5249:2:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5231:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5231:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5231:21:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5261:27:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5281:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5275:5:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5275:13:35"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5265:6:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5308:9:35"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5319:2:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5304:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5304:18:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5324:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5297:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:34:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5297:34:35"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5340:13:35",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5349:4:35"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5344:1:35",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5412:90:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5441:9:35"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5452:1:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5437:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5437:17:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5456:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5433:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5433:26:35"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5475:6:35"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5483:1:35"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5471:3:35"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5471:14:35"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5487:2:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5467:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5467:23:35"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5461:5:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5461:30:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5426:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5426:66:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5426:66:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5373:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5376:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5370:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5370:13:35"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5384:19:35",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5386:15:35",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5395:1:35"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5398:2:35"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5391:3:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5391:10:35"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5386:1:35"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5366:3:35",
                    "statements": []
                  },
                  "src": "5362:140:35"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5536:69:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5565:9:35"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5576:6:35"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5561:3:35"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5561:22:35"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5585:2:35",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5557:3:35"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5557:31:35"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5590:4:35"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5550:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5550:45:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5550:45:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5517:1:35"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5520:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5514:2:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5514:13:35"
                  },
                  "nodeType": "YulIf",
                  "src": "5511:2:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5614:121:35",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5630:9:35"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5649:6:35"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5657:2:35",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5645:3:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5645:15:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5662:66:35",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5641:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5641:88:35"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5626:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5626:104:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5732:2:35",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5622:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5622:113:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5614:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5169:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5180:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5191:4:35",
                "type": ""
              }
            ],
            "src": "5079:662:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5920:168:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5937:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5948:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5930:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5930:21:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5930:21:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5971:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5982:2:35",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5967:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5967:18:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5987:2:35",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5960:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5960:30:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5960:30:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6010:9:35"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6021:2:35",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6006:3:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6006:18:35"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6026:20:35",
                        "type": "",
                        "value": "Insufficient funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5999:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5999:48:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5999:48:35"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6056:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6068:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6079:2:35",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6064:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6064:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6056:4:35"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5897:9:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5911:4:35",
                "type": ""
              }
            ],
            "src": "5746:342:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6194:76:35",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6204:26:35",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6216:9:35"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6227:2:35",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6212:3:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6212:18:35"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6204:4:35"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6246:9:35"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6257:6:35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6239:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6239:25:35"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6239:25:35"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6163:9:35",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6174:6:35",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6185:4:35",
                "type": ""
              }
            ],
            "src": "6093:177:35"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6322:109:35",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6409:16:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6418:1:35",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6421:1:35",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6411:6:35"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6411:12:35"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6411:12:35"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6345:5:35"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6356:5:35"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6363:42:35",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6352:3:35"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6352:54:35"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6342:2:35"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6342:65:35"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6335:6:35"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:73:35"
                  },
                  "nodeType": "YulIf",
                  "src": "6332:2:35"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6311:5:35",
                "type": ""
              }
            ],
            "src": "6275:156:35"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let length := calldataload(_3)\n        if gt(length, _2) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_3, length), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), length)\n        mstore(add(add(memPtr, length), _1), value3)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(value1, value1) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_contract$_PolicyBook_$1447(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Insufficient funds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 35,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "177:1585:2:-:0;;;455:1;428:28;;463:59;;;;;;;;;-1:-1:-1;3575:369:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3575:369:26;;;;;768:40:19;-1:-1:-1;;;768:18:19;:40::i;:::-;3649:13:26;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3672:17:26;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3777:40:26;-1:-1:-1;;;3777:18:26;:40::i;:::-;3827:49;-1:-1:-1;;;3827:18:26;:49::i;:::-;3886:51;-1:-1:-1;;;3886:18:26;:51::i;:::-;3575:369;;177:1585:2;;1499:198:19;-1:-1:-1;;;;;;1582:25:19;;;;;1574:66;;;;;-1:-1:-1;;;1574:66:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1650:33:19;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1650:40:19;1686:4;1650:40;;;1499:198::o;177:1585:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;177:1585:2;;;-1:-1:-1;177:1585:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "177:1585:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:140:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4500:90:26;;;:::i;:::-;;;;;;;:::i;7107:209::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6665:381::-;;;;;;:::i;:::-;;:::i;:::-;;6175:200;;;:::i;:::-;;;;;;;:::i;7955:300::-;;;;;;:::i;:::-;;:::i;5952:152::-;;;;;;:::i;:::-;;:::i;8321:149::-;;;;;;:::i;:::-;;:::i;6447:161::-;;;;;;:::i;:::-;;:::i;4271:167::-;;;;;;:::i;:::-;;:::i;5786:87::-;;;:::i;4003:211::-;;;;;;:::i;:::-;;:::i;1358:313:2:-;;;;;;:::i;:::-;;:::i;1677:83::-;;;:::i;4654:94:26:-;;;:::i;7383:290::-;;;;;;:::i;:::-;;:::i;8536:282::-;;;;;;:::i;:::-;;:::i;4814:740::-;;;;;;:::i;:::-;;:::i;7739:154::-;;;;;;:::i;:::-;;:::i;965:140:19:-;1065:33;;;1042:4;1065:33;;;;;;;;;;;;;965:140;;;;:::o;4500:90:26:-;4578:5;4571:12;;;;;;;;-1:-1:-1;;4571:12:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4546:13;;4571:12;;4578:5;;4571:12;;4578:5;4571:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:90;:::o;7107:209::-;7175:7;7202:16;7210:7;7202;:16::i;:::-;7194:73;;;;-1:-1:-1;;;7194:73:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7285:24:26;;;;:15;:24;;;;;;;;;7107:209::o;6665:381::-;6745:13;6761:16;6769:7;6761;:16::i;:::-;6745:32;;6801:5;6795:11;;:2;:11;;;;6787:57;;;;-1:-1:-1;;;6787:57:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6879:5;6863:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;6888:37;6905:5;6912:12;:10;:12::i;6888:37::-;6855:152;;;;-1:-1:-1;;;6855:152:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:21;7027:2;7031:7;7018:8;:21::i;:::-;6665:381;;;:::o;6175:200::-;6228:7;6347:21;:12;:19;:21::i;:::-;6340:28;;6175:200;:::o;7955:300::-;8114:41;8133:12;:10;:12::i;:::-;8147:7;8114:18;:41::i;:::-;8106:103;;;;-1:-1:-1;;;8106:103:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8220:28;8230:4;8236:2;8240:7;8220:9;:28::i;5952:152::-;6067:20;;;6041:7;6067:20;;;:13;:20;;;;;:30;;6091:5;6067:23;:30::i;:::-;6060:37;;5952:152;;;;;:::o;8321:149::-;8424:39;8441:4;8447:2;8451:7;8424:39;;;;;;;;;;;;:16;:39::i;6447:161::-;6514:7;;6555:22;:12;6571:5;6555:15;:22::i;:::-;-1:-1:-1;6533:44:26;6447:161;-1:-1:-1;;;6447:161:26:o;4271:167::-;4335:7;4361:70;4378:7;4361:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;5786:87::-;5858:8;5851:15;;;;;;;;-1:-1:-1;;5851:15:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5826:13;;5851:15;;5858:8;;5851:15;;5858:8;5851:15;;;;;;;;;;;;;;;;;;;;;;;;4003:211;4067:7;4094:19;;;4086:74;;;;-1:-1:-1;;;4086:74:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:20;;;;;;;:13;:20;;;;;:29;;:27;:29::i;1358:313:2:-;1466:10;:20;;;1487:12;:10;:12::i;:::-;1466:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:6;:44;;1435:109;;;;-1:-1:-1;;;1435:109:2;;;;;;;:::i;:::-;;;;;;;;;1570:50;1578:12;:10;:12::i;:::-;1592:6;1608:10;1570:7;:50::i;:::-;1358:313;;:::o;1677:83::-;:::o;4654:94:26:-;4734:7;4727:14;;;;;;;;-1:-1:-1;;4727:14:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4702:13;;4727:14;;4734:7;;4727:14;;4734:7;4727:14;;;;;;;;;;;;;;;;;;;;;;;;7383:290;7497:12;:10;:12::i;:::-;7485:24;;:8;:24;;;;7477:62;;;;;-1:-1:-1;;;7477:62:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;7595:8;7550:18;:32;7569:12;:10;:12::i;:::-;7550:32;;;;;;;;;;;;;;;;;;-1:-1:-1;7550:32:26;;;:42;;;;;;;;;;;;:53;;;;;;;;;;;;;;7633:12;:10;:12::i;:::-;7618:48;;;7657:8;7618:48;;;;;;;;;;;;;;;;;;;;7383:290;;:::o;8536:282::-;8667:41;8686:12;:10;:12::i;:::-;8700:7;8667:18;:41::i;:::-;8659:103;;;;-1:-1:-1;;;8659:103:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8772:39;8786:4;8792:2;8796:7;8805:5;8772:13;:39::i;:::-;8536:282;;;;:::o;4814:740::-;4879:13;4912:16;4920:7;4912;:16::i;:::-;4904:76;;;;-1:-1:-1;;;4904:76:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5017:19;;;;:10;:19;;;;;;;;;4991:45;;;;;;-1:-1:-1;;4991:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5017:19;4991:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5115:8:26;5109:22;4991:45;;-1:-1:-1;;;;5109:22:26;-1:-1:-1;;5109:22:26;;;;;;;;;;;5105:74;;5159:9;-1:-1:-1;5152:16:26;;5105:74;5281:23;;:27;5277:110;;5355:8;5365:9;5338:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5338:37:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5324:52;;;;;5277:110;5517:8;5527:18;:7;:16;:18::i;:::-;5500:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5500:46:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5486:61;;;4814:740;;;:::o;7739:154::-;7851:25;;;;7828:4;7851:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7739:154::o;10252:117::-;10309:4;10332:30;:12;10354:7;10332:21;:30::i;598:104:17:-;685:10;598:104;:::o;15908:155:26:-;15973:24;;;;:15;:24;;;;;:29;;;;;;;;;;;;;:24;;16026:16;15973:24;16026:7;:16::i;:::-;16017:39;;;;;;;;;;;;15908:155;;:::o;7031:121:32:-;7100:7;7126:19;7134:3;7126:7;:19::i;10527:329:26:-;10612:4;10636:16;10644:7;10636;:16::i;:::-;10628:73;;;;-1:-1:-1;;;10628:73:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10711:13;10727:16;10735:7;10727;:16::i;:::-;10711:32;;10772:5;10761:16;;:7;:16;;;:51;;;;10805:7;10781:31;;:20;10793:7;10781:11;:20::i;:::-;:31;;;10761:51;:87;;;;10816:32;10833:5;10840:7;10816:16;:32::i;:::-;10753:96;10527:329;-1:-1:-1;;;;10527:329:26:o;13521:559::-;13638:4;13618:24;;:16;13626:7;13618;:16::i;:::-;:24;;;13610:78;;;;-1:-1:-1;;;13610:78:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13706:16;;;13698:65;;;;-1:-1:-1;;;13698:65:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13774:39;13795:4;13801:2;13805:7;13774:20;:39::i;:::-;13875:29;13892:1;13896:7;13875:8;:29::i;:::-;13915:19;;;;;;;:13;:19;;;;;:35;;13942:7;13915:26;:35::i;:::-;-1:-1:-1;13960:17:26;;;;;;;:13;:17;;;;;:30;;13982:7;13960:21;:30::i;:::-;-1:-1:-1;14001:29:26;:12;14018:7;14027:2;14001:16;:29::i;:::-;;14065:7;14061:2;14046:27;;14055:4;14046:27;;;;;;;;;;;;13521:559;;;:::o;9214:135:33:-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;7480:224:32:-;7560:7;;;;7619:22;7623:3;7635:5;7619:3;:22::i;:::-;7588:53;;;;-1:-1:-1;7480:224:32;-1:-1:-1;;;;;7480:224:32:o;8123:202::-;8230:7;8272:44;8277:3;8297;8303:12;8272:4;:44::i;:::-;8264:53;-1:-1:-1;8123:202:32;;;;;;:::o;528:820:2:-;676:21;700:17;710:6;700:9;:17::i;:::-;676:41;-1:-1:-1;749:6:2;727:19;766:398;790:13;786:1;:17;766:398;;;824:18;845:30;865:6;873:1;845:19;:30::i;:::-;906:23;;;;:11;:23;;;;;:41;;;:23;;-1:-1:-1;906:62:2;;;;:41;;:62;902:252;;;1003:23;;;;:11;:23;;;;;:36;;;988:51;;;;;1074:17;1015:10;1074:5;:17::i;:::-;1116:23;;;;:11;:23;;;;;1109:30;;;;;;;;;;;;;;;;;;902:252;-1:-1:-1;805:3:2;;766:398;;;;1174:35;1184:6;1192:16;;1174:9;:35::i;:::-;1251:60;;;;;;;;1263:15;1251:60;;;;;;;;;;;;;;;;;;;1231:16;;;-1:-1:-1;1219:29:2;;;:11;:29;;;;;;;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:18;;;;;;-1:-1:-1;;;528:820:2:o;9680:269:26:-;9793:28;9803:4;9809:2;9813:7;9793:9;:28::i;:::-;9839:48;9862:4;9868:2;9872:7;9881:5;9839:22;:48::i;:::-;9831:111;;;;-1:-1:-1;;;9831:111:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:723:34;266:13;483:10;479:51;;-1:-1:-1;509:10:34;;;;;;;;;;;;;;;;;;;479:51;554:5;539:12;593:75;600:9;;593:75;;625:8;;655:2;647:10;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;699:17:34;-1:-1:-1;769:5:34;;-1:-1:-1;677:39:34;-1:-1:-1;;;742:10:34;;784:112;791:9;;784:112;;857:2;850:4;:9;845:2;:14;834:27;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:45;;;;;;;;;;-1:-1:-1;883:2:34;875:10;;;;784:112;;;-1:-1:-1;919:6:34;210:723;-1:-1:-1;;;;210:723:34:o;6799:149:32:-;6883:4;6906:35;6916:3;6936;6906:9;:35::i;4491:108::-;4573:19;;4491:108::o;8329:135:33:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;6247:174:32:-;6336:4;6359:55;6364:3;6384;6398:14;;;6359:4;:55::i;4452:201:33:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:33;;;;-1:-1:-1;;;4538:73:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4942:274:32:-;5045:19;;5009:7;;;;5045:27;-1:-1:-1;5037:74:32;;;;-1:-1:-1;;;5037:74:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;5623:315::-;5717:7;5755:17;;;:12;;;:17;;;;;;5805:12;5790:13;5782:36;;;;-1:-1:-1;;;5782:36:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:3;:12;;5895:1;5884:8;:12;5871:26;;;;;;;;;;;;;;;;;;:33;;;5864:40;;;5623:315;;;;;:::o;12695:502:26:-;12754:13;12770:16;12778:7;12770;:16::i;:::-;12754:32;;12797:48;12818:5;12833:1;12837:7;12797:20;:48::i;:::-;12883:29;12900:1;12904:7;12883:8;:29::i;:::-;12968:19;;;;:10;:19;;;;;12962:33;;-1:-1:-1;;12962:33:26;;;;;;;;;;;:38;12958:95;;13023:19;;;;:10;:19;;;;;13016:26;;;:::i;:::-;13063:20;;;;;;;:13;:20;;;;;:36;;13091:7;13063:27;:36::i;:::-;-1:-1:-1;13110:28:26;:12;13130:7;13110:19;:28::i;:::-;-1:-1:-1;13154:36:26;;13182:7;;13178:1;;13154:36;;;;;;13178:1;;13154:36;12695:502;;:::o;11187:108::-;11262:26;11272:2;11276:7;11262:26;;;;;;;;;;;;:9;:26::i;15313:589::-;15433:4;15458:15;:2;:13;;;:15::i;:::-;15453:58;;-1:-1:-1;15496:4:26;15489:11;;15453:58;15520:23;15546:246;15598:45;15657:12;:10;:12::i;:::-;15683:4;15701:7;15722:5;15562:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15546:246;;;;;;;;;;;;;;;;;:15;;;;:246;:15;:246::i;:::-;15520:272;;15802:13;15829:10;15818:32;;;;;;;;;;;;;;;-1:-1:-1;15818:32:26;15868:26;;15878:16;15868:26;;-1:-1:-1;;;15313:589:26;;;;;;:::o;4278:123:32:-;4349:4;4372:17;;;:12;;;;;:17;;;;;;:22;;;4278:123::o;2212:1512:33:-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:33;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:33;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:33;2015:12;;1836:678:32;1912:4;2045:17;;;:12;;;:17;;;;;;2077:13;2073:435;;-1:-1:-1;;2161:38:32;;;;;;;;;;;;;;;;;;2143:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2355:19;;2335:17;;;:12;;;:17;;;;;;;:39;2388:11;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;;;6580:140;6657:4;6680:33;6688:3;6708;6680:7;:33::i;11516:247:26:-;11611:18;11617:2;11621:7;11611:5;:18::i;:::-;11647:54;11678:1;11682:2;11686:7;11695:5;11647:22;:54::i;:::-;11639:117;;;;-1:-1:-1;;;11639:117:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:413:31;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;2682:1517:32:-;2746:4;2879:17;;;:12;;;:17;;;;;;2911:13;;2907:1286;;3337:19;;-1:-1:-1;;3291:12:32;;;;3337:23;;;;3267:21;;3337:3;;:23;;3629;;;;;;;;;;;;;;;;3600:52;;3774:9;3744:3;:12;;3757:13;3744:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3862:14;;3849:28;;:12;;;:28;;;;;3880:17;;;3849:48;;4003:18;;3849:3;;4003:18;;;;;;;;;;;;;;-1:-1:-1;;4003:18:32;;;;;;;;;;;;;;;;;;;;;4096:17;;;:12;;;:17;;;;;;4089:24;;;;4003:18;-1:-1:-1;4128:11:32;;-1:-1:-1;;;;4128:11:32;12085:393:26;12164:16;;;12156:61;;;;;-1:-1:-1;;;12156:61:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12236:16;12244:7;12236;:16::i;:::-;12235:17;12227:58;;;;;-1:-1:-1;;;12227:58:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;12296:45;12325:1;12329:2;12333:7;12296:20;:45::i;:::-;12352:17;;;;;;;:13;:17;;;;;:30;;12374:7;12352:21;:30::i;:::-;-1:-1:-1;12393:29:26;:12;12410:7;12419:2;12393:16;:29::i;:::-;-1:-1:-1;12438:33:26;;12463:7;;12438:33;;;;12455:1;;12438:33;;12455:1;;12438:33;12085:393;;:::o;4608:523:31:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:31:o;6111:725::-;6226:12;6254:7;6250:580;;;-1:-1:-1;6284:10:31;6277:17;;6250:580;6395:17;;:21;6391:429;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6785:20;;-1:-1:-1;;;6785:20:31;;;;;;;;;;;;;;;;;6792:12;;6785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:259:35:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:402::-;;;407:2;395:9;386:7;382:23;378:32;375:2;;;428:6;420;413:22;375:2;472:9;459:23;491:33;518:5;491:33;:::i;:::-;543:5;-1:-1:-1;600:2:35;585:18;;572:32;613:35;572:32;613:35;:::i;:::-;667:7;657:17;;;365:315;;;;;:::o;685:470::-;;;;831:2;819:9;810:7;806:23;802:32;799:2;;;852:6;844;837:22;799:2;896:9;883:23;915:33;942:5;915:33;:::i;:::-;967:5;-1:-1:-1;1024:2:35;1009:18;;996:32;1037:35;996:32;1037:35;:::i;:::-;789:366;;1091:7;;-1:-1:-1;;;1145:2:35;1130:18;;;;1117:32;;789:366::o;1160:1375::-;;;;;1332:3;1320:9;1311:7;1307:23;1303:33;1300:2;;;1354:6;1346;1339:22;1300:2;1398:9;1385:23;1417:33;1444:5;1417:33;:::i;:::-;1469:5;-1:-1:-1;1493:2:35;1532:18;;;1519:32;1560:35;1519:32;1560:35;:::i;:::-;1614:7;-1:-1:-1;1668:2:35;1653:18;;1640:32;;-1:-1:-1;1723:2:35;1708:18;;1695:32;1746:18;1776:14;;;1773:2;;;1808:6;1800;1793:22;1773:2;1851:6;1840:9;1836:22;1826:32;;1896:7;1889:4;1885:2;1881:13;1877:27;1867:2;;1923:6;1915;1908:22;1867:2;1968;1955:16;1994:2;1986:6;1983:14;1980:2;;;2000:9;1980:2;2040;2034:9;2179:2;2109:66;2102:4;2094:6;2090:17;2086:90;2078:6;2074:103;2070:112;2232:6;2220:10;2217:22;2212:2;2200:10;2197:18;2194:46;2191:2;;;2243:9;2191:2;2270;2263:22;2294;;;2335:15;;;2331:24;;2328:37;-1:-1:-1;2325:2:35;;;2383:6;2375;2368:22;2325:2;2444:6;2439:2;2435;2431:11;2426:2;2418:6;2414:15;2401:50;2471:19;;;2467:28;;;2460:44;;;;-1:-1:-1;1290:1245:35;;;;-1:-1:-1;1290:1245:35;;-1:-1:-1;;1290:1245:35:o;2540:438::-;;;2666:2;2654:9;2645:7;2641:23;2637:32;2634:2;;;2687:6;2679;2672:22;2634:2;2731:9;2718:23;2750:33;2777:5;2750:33;:::i;:::-;2802:5;-1:-1:-1;2859:2:35;2844:18;;2831:32;2901:15;;2894:23;2882:36;;2872:2;;2937:6;2929;2922:22;2983:327;;;3112:2;3100:9;3091:7;3087:23;3083:32;3080:2;;;3133:6;3125;3118:22;3080:2;3177:9;3164:23;3196:33;3223:5;3196:33;:::i;:::-;3248:5;3300:2;3285:18;;;;3272:32;;-1:-1:-1;;;3070:240:35:o;3315:352::-;;3426:2;3414:9;3405:7;3401:23;3397:32;3394:2;;;3447:6;3439;3432:22;3394:2;3491:9;3478:23;3541:66;3534:5;3530:78;3523:5;3520:89;3510:2;;3628:6;3620;3613:22;3672:190;;3784:2;3772:9;3763:7;3759:23;3755:32;3752:2;;;3805:6;3797;3790:22;3752:2;-1:-1:-1;3833:23:35;;3742:120;-1:-1:-1;3742:120:35:o;3867:194::-;;3990:2;3978:9;3969:7;3965:23;3961:32;3958:2;;;4011:6;4003;3996:22;3958:2;-1:-1:-1;4039:16:35;;3948:113;-1:-1:-1;3948:113:35:o;4066:346::-;;;4214:2;4202:9;4193:7;4189:23;4185:32;4182:2;;;4235:6;4227;4220:22;4182:2;4276:9;4263:23;4253:33;;4336:2;4325:9;4321:18;4308:32;4349:33;4376:5;4349:33;:::i;4417:226::-;4593:42;4581:55;;;;4563:74;;4551:2;4536:18;;4518:125::o;4887:187::-;5052:14;;5045:22;5027:41;;5015:2;5000:18;;4982:92::o;5079:662::-;;5220:2;5249;5238:9;5231:21;5281:6;5275:13;5324:6;5319:2;5308:9;5304:18;5297:34;5349:4;5362:140;5376:6;5373:1;5370:13;5362:140;;;5471:14;;;5467:23;;5461:30;5437:17;;;5456:2;5433:26;5426:66;5391:10;;5362:140;;;5520:6;5517:1;5514:13;5511:2;;;5590:4;5585:2;5576:6;5565:9;5561:22;5557:31;5550:45;5511:2;-1:-1:-1;5657:2:35;5645:15;5662:66;5641:88;5626:104;;;;5732:2;5622:113;;5200:541;-1:-1:-1;;;5200:541:35:o;5746:342::-;5948:2;5930:21;;;5987:2;5967:18;;;5960:30;6026:20;6021:2;6006:18;;5999:48;6079:2;6064:18;;5920:168::o;6093:177::-;6239:25;;;6227:2;6212:18;;6194:76::o;6275:156::-;6363:42;6356:5;6352:54;6345:5;6342:65;6332:2;;6421:1;6418;6411:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.4;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"./PolicyBook.sol\";\n\ncontract BmiDAIStaking is ERC721 {\n    struct StakingInfo {\n        uint256 stakingStartTime;        \n        uint256 bmiDAIAmount;\n        address policyBookAddress;\n    }\n    \n    mapping(uint256 => StakingInfo) stakersPool; // NFT => INFO\n    \n    uint256 currentNFTMintID = 1;\n\n    constructor() ERC721(\"BridgeMutual staking\", \"BMS\") {\n    }\n\n    function mintNFT(\n        address staker,        \n        uint256 amount,\n        address policyBookAddress\n    ) private {                \n        uint256 stakerBalance = balanceOf(staker);\n        uint256 totalAmount = amount;\n\n        for (uint256 i = 0; i < stakerBalance; i++) {\n            uint256 tokenIndex = tokenOfOwnerByIndex(staker, i);            \n\n            if (stakersPool[tokenIndex].policyBookAddress == policyBookAddress) {\n                totalAmount += stakersPool[tokenIndex].bmiDAIAmount;\n                \n                _burn(tokenIndex);\n                delete stakersPool[tokenIndex];\n            }\n        }\n\n        _safeMint(staker, currentNFTMintID);\n        stakersPool[currentNFTMintID] = StakingInfo(block.timestamp, totalAmount, policyBookAddress); \n\n        currentNFTMintID++;\n    }    \n\n    function stakeDAIx(uint256 amount, PolicyBook policyBook) external {\n        require(\n            amount <= policyBook.balanceOf(_msgSender()),\n            \"Insufficient funds\"\n        );        \n       \n        mintNFT(_msgSender(), amount, address(policyBook));\n\n        // transfer dai to yield generator\n    }\n\n    function withdrawProfit() external {\n        // from the mock Yield Generator\n    }\n}\n",
  "sourcePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol",
  "ast": {
    "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol",
    "exportedSymbols": {
      "Address": [
        4911
      ],
      "BmiDAIStaking": [
        618
      ],
      "Context": [
        2303
      ],
      "ERC165": [
        2469
      ],
      "ERC20": [
        3253
      ],
      "ERC721": [
        4475
      ],
      "EnumerableMap": [
        5366
      ],
      "EnumerableSet": [
        5846
      ],
      "IERC165": [
        2481
      ],
      "IERC20": [
        3331
      ],
      "IERC721": [
        4591
      ],
      "IERC721Enumerable": [
        4622
      ],
      "IERC721Metadata": [
        4649
      ],
      "IERC721Receiver": [
        4667
      ],
      "IPolicyBook": [
        1996
      ],
      "IPolicyBookFabric": [
        2045
      ],
      "Math": [
        2554
      ],
      "PolicyBook": [
        1447
      ],
      "SafeMath": [
        2750
      ],
      "Strings": [
        5933
      ]
    },
    "id": 619,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 475,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "id": 476,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 477,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 4476,
        "src": "91:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
        "file": "./PolicyBook.sol",
        "id": 478,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1448,
        "src": "149:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 479,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4475,
              "src": "203:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$4475",
                "typeString": "contract ERC721"
              }
            },
            "id": 480,
            "nodeType": "InheritanceSpecifier",
            "src": "203:6:2"
          }
        ],
        "contractDependencies": [
          2303,
          2469,
          2481,
          4475,
          4591,
          4622,
          4649
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 618,
        "linearizedBaseContracts": [
          618,
          4475,
          4622,
          4649,
          4591,
          2469,
          2481,
          2303
        ],
        "name": "BmiDAIStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BmiDAIStaking.StakingInfo",
            "id": 487,
            "members": [
              {
                "constant": false,
                "id": 482,
                "mutability": "mutable",
                "name": "stakingStartTime",
                "nodeType": "VariableDeclaration",
                "scope": 487,
                "src": "245:24:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 481,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 484,
                "mutability": "mutable",
                "name": "bmiDAIAmount",
                "nodeType": "VariableDeclaration",
                "scope": 487,
                "src": "287:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 483,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 486,
                "mutability": "mutable",
                "name": "policyBookAddress",
                "nodeType": "VariableDeclaration",
                "scope": 487,
                "src": "317:25:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 485,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "317:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingInfo",
            "nodeType": "StructDefinition",
            "scope": 618,
            "src": "216:133:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 491,
            "mutability": "mutable",
            "name": "stakersPool",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "359:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$487_storage_$",
              "typeString": "mapping(uint256 => struct BmiDAIStaking.StakingInfo)"
            },
            "typeName": {
              "id": 490,
              "keyType": {
                "id": 488,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "367:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "359:31:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$487_storage_$",
                "typeString": "mapping(uint256 => struct BmiDAIStaking.StakingInfo)"
              },
              "valueType": {
                "id": 489,
                "name": "StakingInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 487,
                "src": "378:11:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingInfo_$487_storage_ptr",
                  "typeString": "struct BmiDAIStaking.StakingInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 494,
            "mutability": "mutable",
            "name": "currentNFTMintID",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "428:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 492,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 493,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "455:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "515:7:2",
              "statements": []
            },
            "id": 502,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4272696467654d757475616c207374616b696e67",
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "484:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ff8e7b34b3823a8c48b52108e2a71cf2543b018dc2e9b7eb9413db61fe3af09d",
                      "typeString": "literal_string \"BridgeMutual staking\""
                    },
                    "value": "BridgeMutual staking"
                  },
                  {
                    "hexValue": "424d53",
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "508:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f57b8fce0dc3c122213e3229f7b60130ccfc934f2c032ed174bddcc3dcbae4f9",
                      "typeString": "literal_string \"BMS\""
                    },
                    "value": "BMS"
                  }
                ],
                "id": 499,
                "modifierName": {
                  "id": 496,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4475,
                  "src": "477:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$4475_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "477:37:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "474:2:2"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:0:2"
            },
            "scope": 618,
            "src": "463:59:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "650:698:2",
              "statements": [
                {
                  "assignments": [
                    512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 512,
                      "mutability": "mutable",
                      "name": "stakerBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 583,
                      "src": "676:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "676:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 516,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 514,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "710:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 513,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3676,
                      "src": "700:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "676:41:2"
                },
                {
                  "assignments": [
                    518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 518,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 583,
                      "src": "727:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "727:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 520,
                  "initialValue": {
                    "id": 519,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 506,
                    "src": "749:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "727:28:2"
                },
                {
                  "body": {
                    "id": 562,
                    "nodeType": "Block",
                    "src": "810:354:2",
                    "statements": [
                      {
                        "assignments": [
                          532
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 532,
                            "mutability": "mutable",
                            "name": "tokenIndex",
                            "nodeType": "VariableDeclaration",
                            "scope": 562,
                            "src": "824:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 531,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "824:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 537,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 534,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "865:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 535,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "873:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 533,
                            "name": "tokenOfOwnerByIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3803,
                            "src": "845:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "824:51:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 538,
                                "name": "stakersPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 491,
                                "src": "906:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$487_storage_$",
                                  "typeString": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)"
                                }
                              },
                              "id": 540,
                              "indexExpression": {
                                "id": 539,
                                "name": "tokenIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 532,
                                "src": "918:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "906:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakingInfo_$487_storage",
                                "typeString": "struct BmiDAIStaking.StakingInfo storage ref"
                              }
                            },
                            "id": 541,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "policyBookAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 486,
                            "src": "906:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 542,
                            "name": "policyBookAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "951:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "906:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 561,
                        "nodeType": "IfStatement",
                        "src": "902:252:2",
                        "trueBody": {
                          "id": 560,
                          "nodeType": "Block",
                          "src": "970:184:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 544,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 518,
                                  "src": "988:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 545,
                                      "name": "stakersPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 491,
                                      "src": "1003:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$487_storage_$",
                                        "typeString": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)"
                                      }
                                    },
                                    "id": 547,
                                    "indexExpression": {
                                      "id": 546,
                                      "name": "tokenIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 532,
                                      "src": "1015:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1003:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingInfo_$487_storage",
                                      "typeString": "struct BmiDAIStaking.StakingInfo storage ref"
                                    }
                                  },
                                  "id": 548,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bmiDAIAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 484,
                                  "src": "1003:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "988:51:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 550,
                              "nodeType": "ExpressionStatement",
                              "src": "988:51:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 552,
                                    "name": "tokenIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 532,
                                    "src": "1080:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 551,
                                  "name": "_burn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4279,
                                  "src": "1074:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1074:17:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 554,
                              "nodeType": "ExpressionStatement",
                              "src": "1074:17:2"
                            },
                            {
                              "expression": {
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "1109:30:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 555,
                                    "name": "stakersPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 491,
                                    "src": "1116:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$487_storage_$",
                                      "typeString": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)"
                                    }
                                  },
                                  "id": 557,
                                  "indexExpression": {
                                    "id": 556,
                                    "name": "tokenIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 532,
                                    "src": "1128:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1116:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingInfo_$487_storage",
                                    "typeString": "struct BmiDAIStaking.StakingInfo storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 559,
                              "nodeType": "ExpressionStatement",
                              "src": "1109:30:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 525,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "786:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 526,
                      "name": "stakerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "790:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "786:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 563,
                  "initializationExpression": {
                    "assignments": [
                      522
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 522,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 563,
                        "src": "771:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 524,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "783:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "771:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "805:3:2",
                      "subExpression": {
                        "id": 528,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "805:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 530,
                    "nodeType": "ExpressionStatement",
                    "src": "805:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "766:398:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 565,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "1184:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 566,
                        "name": "currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "1192:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 564,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4123,
                        4152
                      ],
                      "referencedDeclaration": 4123,
                      "src": "1174:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1174:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "1174:35:2"
                },
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 569,
                        "name": "stakersPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "1219:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakingInfo_$487_storage_$",
                          "typeString": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)"
                        }
                      },
                      "id": 571,
                      "indexExpression": {
                        "id": 570,
                        "name": "currentNFTMintID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "1231:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1219:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$487_storage",
                        "typeString": "struct BmiDAIStaking.StakingInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 573,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1263:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1263:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 575,
                          "name": "totalAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 518,
                          "src": "1280:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 576,
                          "name": "policyBookAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 508,
                          "src": "1293:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 572,
                        "name": "StakingInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "1251:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingInfo_$487_storage_ptr_$",
                          "typeString": "type(struct BmiDAIStaking.StakingInfo storage pointer)"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1251:60:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingInfo_$487_memory_ptr",
                        "typeString": "struct BmiDAIStaking.StakingInfo memory"
                      }
                    },
                    "src": "1219:92:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingInfo_$487_storage",
                      "typeString": "struct BmiDAIStaking.StakingInfo storage ref"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:92:2"
                },
                {
                  "expression": {
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1323:18:2",
                    "subExpression": {
                      "id": 580,
                      "name": "currentNFTMintID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "1323:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:18:2"
                }
              ]
            },
            "id": 584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "554:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "586:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 508,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "610:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "544:97:2"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:2"
            },
            "scope": 618,
            "src": "528:820:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "1425:246:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 592,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1456:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 595,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2291,
                                "src": "1487:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1487:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 593,
                              "name": "policyBook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "1466:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyBook_$1447",
                                "typeString": "contract PolicyBook"
                              }
                            },
                            "id": 594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2853,
                            "src": "1466:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1466:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1456:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742066756e6473",
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        },
                        "value": "Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                          "typeString": "literal_string \"Insufficient funds\""
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1435:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:109:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 603,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2291,
                          "src": "1578:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1578:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 605,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "1592:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 608,
                            "name": "policyBook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "1608:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyBook_$1447",
                              "typeString": "contract PolicyBook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyBook_$1447",
                              "typeString": "contract PolicyBook"
                            }
                          ],
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1600:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1600:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1600:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 602,
                      "name": "mintNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "1570:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:50:2"
                }
              ]
            },
            "functionSelector": "81927714",
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeDAIx",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "1377:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "policyBook",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "1393:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyBook_$1447",
                    "typeString": "contract PolicyBook"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "PolicyBook",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1447,
                    "src": "1393:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyBook_$1447",
                      "typeString": "contract PolicyBook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:39:2"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:0:2"
            },
            "scope": 618,
            "src": "1358:313:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "1712:48:2",
              "statements": []
            },
            "functionSelector": "959499b6",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawProfit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1700:2:2"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:0:2"
            },
            "scope": 618,
            "src": "1677:83:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 619,
        "src": "177:1585:2"
      }
    ],
    "src": "32:1731:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/BmiDAIStaking.sol",
      "exportedSymbols": {
        "Address": [
          4911
        ],
        "BmiDAIStaking": [
          618
        ],
        "Context": [
          2303
        ],
        "ERC165": [
          2469
        ],
        "ERC20": [
          3253
        ],
        "ERC721": [
          4475
        ],
        "EnumerableMap": [
          5366
        ],
        "EnumerableSet": [
          5846
        ],
        "IERC165": [
          2481
        ],
        "IERC20": [
          3331
        ],
        "IERC721": [
          4591
        ],
        "IERC721Enumerable": [
          4622
        ],
        "IERC721Metadata": [
          4649
        ],
        "IERC721Receiver": [
          4667
        ],
        "IPolicyBook": [
          1996
        ],
        "IPolicyBookFabric": [
          2045
        ],
        "Math": [
          2554
        ],
        "PolicyBook": [
          1447
        ],
        "SafeMath": [
          2750
        ],
        "Strings": [
          5933
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".4"
          ]
        },
        "id": 475,
        "name": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 476,
        "name": "PragmaDirective",
        "src": "56:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 4476,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "scope": 619,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 477,
        "name": "ImportDirective",
        "src": "91:57:2"
      },
      {
        "attributes": {
          "SourceUnit": 1448,
          "absolutePath": "/home/artem/Projects/Distributed_Lab/Applicature/bridgemutual-core/contracts/PolicyBook.sol",
          "file": "./PolicyBook.sol",
          "scope": 619,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 478,
        "name": "ImportDirective",
        "src": "149:26:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            2303,
            2469,
            2481,
            4475,
            4591,
            4622,
            4649
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            618,
            4475,
            4622,
            4649,
            4591,
            2469,
            2481,
            2303
          ],
          "name": "BmiDAIStaking",
          "scope": 619
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC721",
                  "referencedDeclaration": 4475,
                  "type": "contract ERC721"
                },
                "id": 479,
                "name": "UserDefinedTypeName",
                "src": "203:6:2"
              }
            ],
            "id": 480,
            "name": "InheritanceSpecifier",
            "src": "203:6:2"
          },
          {
            "attributes": {
              "canonicalName": "BmiDAIStaking.StakingInfo",
              "name": "StakingInfo",
              "scope": 618,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "stakingStartTime",
                  "scope": 487,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 481,
                    "name": "ElementaryTypeName",
                    "src": "245:7:2"
                  }
                ],
                "id": 482,
                "name": "VariableDeclaration",
                "src": "245:24:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "bmiDAIAmount",
                  "scope": 487,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 483,
                    "name": "ElementaryTypeName",
                    "src": "287:7:2"
                  }
                ],
                "id": 484,
                "name": "VariableDeclaration",
                "src": "287:20:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "policyBookAddress",
                  "scope": 487,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 485,
                    "name": "ElementaryTypeName",
                    "src": "317:7:2"
                  }
                ],
                "id": 486,
                "name": "VariableDeclaration",
                "src": "317:25:2"
              }
            ],
            "id": 487,
            "name": "StructDefinition",
            "src": "216:133:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "stakersPool",
              "scope": 618,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct BmiDAIStaking.StakingInfo)",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct BmiDAIStaking.StakingInfo)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 488,
                    "name": "ElementaryTypeName",
                    "src": "367:7:2"
                  },
                  {
                    "attributes": {
                      "name": "StakingInfo",
                      "referencedDeclaration": 487,
                      "type": "struct BmiDAIStaking.StakingInfo"
                    },
                    "id": 489,
                    "name": "UserDefinedTypeName",
                    "src": "378:11:2"
                  }
                ],
                "id": 490,
                "name": "Mapping",
                "src": "359:31:2"
              }
            ],
            "id": 491,
            "name": "VariableDeclaration",
            "src": "359:43:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "currentNFTMintID",
              "scope": 618,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 492,
                "name": "ElementaryTypeName",
                "src": "428:7:2"
              },
              {
                "attributes": {
                  "hexvalue": "31",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 1",
                  "value": "1"
                },
                "id": 493,
                "name": "Literal",
                "src": "455:1:2"
              }
            ],
            "id": 494,
            "name": "VariableDeclaration",
            "src": "428:28:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 618,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 495,
                "name": "ParameterList",
                "src": "474:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 500,
                "name": "ParameterList",
                "src": "515:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 4475,
                      "type": "type(contract ERC721)",
                      "value": "ERC721"
                    },
                    "id": 496,
                    "name": "Identifier",
                    "src": "477:6:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4272696467654d757475616c207374616b696e67",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"BridgeMutual staking\"",
                      "value": "BridgeMutual staking"
                    },
                    "id": 497,
                    "name": "Literal",
                    "src": "484:22:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "424d53",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"BMS\"",
                      "value": "BMS"
                    },
                    "id": 498,
                    "name": "Literal",
                    "src": "508:5:2"
                  }
                ],
                "id": 499,
                "name": "ModifierInvocation",
                "src": "477:37:2"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 501,
                "name": "Block",
                "src": "515:7:2"
              }
            ],
            "id": 502,
            "name": "FunctionDefinition",
            "src": "463:59:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNFT",
              "scope": 618,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "staker",
                      "scope": 584,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 503,
                        "name": "ElementaryTypeName",
                        "src": "554:7:2"
                      }
                    ],
                    "id": 504,
                    "name": "VariableDeclaration",
                    "src": "554:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 584,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 505,
                        "name": "ElementaryTypeName",
                        "src": "586:7:2"
                      }
                    ],
                    "id": 506,
                    "name": "VariableDeclaration",
                    "src": "586:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "policyBookAddress",
                      "scope": 584,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 507,
                        "name": "ElementaryTypeName",
                        "src": "610:7:2"
                      }
                    ],
                    "id": 508,
                    "name": "VariableDeclaration",
                    "src": "610:25:2"
                  }
                ],
                "id": 509,
                "name": "ParameterList",
                "src": "544:97:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 510,
                "name": "ParameterList",
                "src": "650:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        512
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "stakerBalance",
                          "scope": 583,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 511,
                            "name": "ElementaryTypeName",
                            "src": "676:7:2"
                          }
                        ],
                        "id": 512,
                        "name": "VariableDeclaration",
                        "src": "676:21:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3676,
                              "type": "function (address) view returns (uint256)",
                              "value": "balanceOf"
                            },
                            "id": 513,
                            "name": "Identifier",
                            "src": "700:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 504,
                              "type": "address",
                              "value": "staker"
                            },
                            "id": 514,
                            "name": "Identifier",
                            "src": "710:6:2"
                          }
                        ],
                        "id": 515,
                        "name": "FunctionCall",
                        "src": "700:17:2"
                      }
                    ],
                    "id": 516,
                    "name": "VariableDeclarationStatement",
                    "src": "676:41:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        518
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "totalAmount",
                          "scope": 583,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 517,
                            "name": "ElementaryTypeName",
                            "src": "727:7:2"
                          }
                        ],
                        "id": 518,
                        "name": "VariableDeclaration",
                        "src": "727:19:2"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 506,
                          "type": "uint256",
                          "value": "amount"
                        },
                        "id": 519,
                        "name": "Identifier",
                        "src": "749:6:2"
                      }
                    ],
                    "id": 520,
                    "name": "VariableDeclarationStatement",
                    "src": "727:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            522
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "scope": 563,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 521,
                                "name": "ElementaryTypeName",
                                "src": "771:7:2"
                              }
                            ],
                            "id": 522,
                            "name": "VariableDeclaration",
                            "src": "771:9:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 523,
                            "name": "Literal",
                            "src": "783:1:2"
                          }
                        ],
                        "id": 524,
                        "name": "VariableDeclarationStatement",
                        "src": "771:13:2"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 522,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 525,
                            "name": "Identifier",
                            "src": "786:1:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 512,
                              "type": "uint256",
                              "value": "stakerBalance"
                            },
                            "id": 526,
                            "name": "Identifier",
                            "src": "790:13:2"
                          }
                        ],
                        "id": 527,
                        "name": "BinaryOperation",
                        "src": "786:17:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 522,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 528,
                                "name": "Identifier",
                                "src": "805:1:2"
                              }
                            ],
                            "id": 529,
                            "name": "UnaryOperation",
                            "src": "805:3:2"
                          }
                        ],
                        "id": 530,
                        "name": "ExpressionStatement",
                        "src": "805:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                532
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "tokenIndex",
                                  "scope": 562,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 531,
                                    "name": "ElementaryTypeName",
                                    "src": "824:7:2"
                                  }
                                ],
                                "id": 532,
                                "name": "VariableDeclaration",
                                "src": "824:18:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3803,
                                      "type": "function (address,uint256) view returns (uint256)",
                                      "value": "tokenOfOwnerByIndex"
                                    },
                                    "id": 533,
                                    "name": "Identifier",
                                    "src": "845:19:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 504,
                                      "type": "address",
                                      "value": "staker"
                                    },
                                    "id": 534,
                                    "name": "Identifier",
                                    "src": "865:6:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 522,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 535,
                                    "name": "Identifier",
                                    "src": "873:1:2"
                                  }
                                ],
                                "id": 536,
                                "name": "FunctionCall",
                                "src": "845:30:2"
                              }
                            ],
                            "id": 537,
                            "name": "VariableDeclarationStatement",
                            "src": "824:51:2"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "policyBookAddress",
                                      "referencedDeclaration": 486,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct BmiDAIStaking.StakingInfo storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 491,
                                              "type": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)",
                                              "value": "stakersPool"
                                            },
                                            "id": 538,
                                            "name": "Identifier",
                                            "src": "906:11:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 532,
                                              "type": "uint256",
                                              "value": "tokenIndex"
                                            },
                                            "id": 539,
                                            "name": "Identifier",
                                            "src": "918:10:2"
                                          }
                                        ],
                                        "id": 540,
                                        "name": "IndexAccess",
                                        "src": "906:23:2"
                                      }
                                    ],
                                    "id": 541,
                                    "name": "MemberAccess",
                                    "src": "906:41:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 508,
                                      "type": "address",
                                      "value": "policyBookAddress"
                                    },
                                    "id": 542,
                                    "name": "Identifier",
                                    "src": "951:17:2"
                                  }
                                ],
                                "id": 543,
                                "name": "BinaryOperation",
                                "src": "906:62:2"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "+=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 518,
                                              "type": "uint256",
                                              "value": "totalAmount"
                                            },
                                            "id": 544,
                                            "name": "Identifier",
                                            "src": "988:11:2"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "bmiDAIAmount",
                                              "referencedDeclaration": 484,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct BmiDAIStaking.StakingInfo storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 491,
                                                      "type": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)",
                                                      "value": "stakersPool"
                                                    },
                                                    "id": 545,
                                                    "name": "Identifier",
                                                    "src": "1003:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 532,
                                                      "type": "uint256",
                                                      "value": "tokenIndex"
                                                    },
                                                    "id": 546,
                                                    "name": "Identifier",
                                                    "src": "1015:10:2"
                                                  }
                                                ],
                                                "id": 547,
                                                "name": "IndexAccess",
                                                "src": "1003:23:2"
                                              }
                                            ],
                                            "id": 548,
                                            "name": "MemberAccess",
                                            "src": "1003:36:2"
                                          }
                                        ],
                                        "id": 549,
                                        "name": "Assignment",
                                        "src": "988:51:2"
                                      }
                                    ],
                                    "id": 550,
                                    "name": "ExpressionStatement",
                                    "src": "988:51:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4279,
                                              "type": "function (uint256)",
                                              "value": "_burn"
                                            },
                                            "id": 551,
                                            "name": "Identifier",
                                            "src": "1074:5:2"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 532,
                                              "type": "uint256",
                                              "value": "tokenIndex"
                                            },
                                            "id": 552,
                                            "name": "Identifier",
                                            "src": "1080:10:2"
                                          }
                                        ],
                                        "id": 553,
                                        "name": "FunctionCall",
                                        "src": "1074:17:2"
                                      }
                                    ],
                                    "id": 554,
                                    "name": "ExpressionStatement",
                                    "src": "1074:17:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "delete",
                                          "prefix": true,
                                          "type": "tuple()"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct BmiDAIStaking.StakingInfo storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 491,
                                                  "type": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)",
                                                  "value": "stakersPool"
                                                },
                                                "id": 555,
                                                "name": "Identifier",
                                                "src": "1116:11:2"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 532,
                                                  "type": "uint256",
                                                  "value": "tokenIndex"
                                                },
                                                "id": 556,
                                                "name": "Identifier",
                                                "src": "1128:10:2"
                                              }
                                            ],
                                            "id": 557,
                                            "name": "IndexAccess",
                                            "src": "1116:23:2"
                                          }
                                        ],
                                        "id": 558,
                                        "name": "UnaryOperation",
                                        "src": "1109:30:2"
                                      }
                                    ],
                                    "id": 559,
                                    "name": "ExpressionStatement",
                                    "src": "1109:30:2"
                                  }
                                ],
                                "id": 560,
                                "name": "Block",
                                "src": "970:184:2"
                              }
                            ],
                            "id": 561,
                            "name": "IfStatement",
                            "src": "902:252:2"
                          }
                        ],
                        "id": 562,
                        "name": "Block",
                        "src": "810:354:2"
                      }
                    ],
                    "id": 563,
                    "name": "ForStatement",
                    "src": "766:398:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                4123,
                                4152
                              ],
                              "referencedDeclaration": 4123,
                              "type": "function (address,uint256)",
                              "value": "_safeMint"
                            },
                            "id": 564,
                            "name": "Identifier",
                            "src": "1174:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 504,
                              "type": "address",
                              "value": "staker"
                            },
                            "id": 565,
                            "name": "Identifier",
                            "src": "1184:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 494,
                              "type": "uint256",
                              "value": "currentNFTMintID"
                            },
                            "id": 566,
                            "name": "Identifier",
                            "src": "1192:16:2"
                          }
                        ],
                        "id": 567,
                        "name": "FunctionCall",
                        "src": "1174:35:2"
                      }
                    ],
                    "id": 568,
                    "name": "ExpressionStatement",
                    "src": "1174:35:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct BmiDAIStaking.StakingInfo storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct BmiDAIStaking.StakingInfo storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 491,
                                  "type": "mapping(uint256 => struct BmiDAIStaking.StakingInfo storage ref)",
                                  "value": "stakersPool"
                                },
                                "id": 569,
                                "name": "Identifier",
                                "src": "1219:11:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 494,
                                  "type": "uint256",
                                  "value": "currentNFTMintID"
                                },
                                "id": 570,
                                "name": "Identifier",
                                "src": "1231:16:2"
                              }
                            ],
                            "id": 571,
                            "name": "IndexAccess",
                            "src": "1219:29:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct BmiDAIStaking.StakingInfo memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 487,
                                  "type": "type(struct BmiDAIStaking.StakingInfo storage pointer)",
                                  "value": "StakingInfo"
                                },
                                "id": 572,
                                "name": "Identifier",
                                "src": "1251:11:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -4,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 573,
                                    "name": "Identifier",
                                    "src": "1263:5:2"
                                  }
                                ],
                                "id": 574,
                                "name": "MemberAccess",
                                "src": "1263:15:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 518,
                                  "type": "uint256",
                                  "value": "totalAmount"
                                },
                                "id": 575,
                                "name": "Identifier",
                                "src": "1280:11:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 508,
                                  "type": "address",
                                  "value": "policyBookAddress"
                                },
                                "id": 576,
                                "name": "Identifier",
                                "src": "1293:17:2"
                              }
                            ],
                            "id": 577,
                            "name": "FunctionCall",
                            "src": "1251:60:2"
                          }
                        ],
                        "id": 578,
                        "name": "Assignment",
                        "src": "1219:92:2"
                      }
                    ],
                    "id": 579,
                    "name": "ExpressionStatement",
                    "src": "1219:92:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 494,
                              "type": "uint256",
                              "value": "currentNFTMintID"
                            },
                            "id": 580,
                            "name": "Identifier",
                            "src": "1323:16:2"
                          }
                        ],
                        "id": 581,
                        "name": "UnaryOperation",
                        "src": "1323:18:2"
                      }
                    ],
                    "id": 582,
                    "name": "ExpressionStatement",
                    "src": "1323:18:2"
                  }
                ],
                "id": 583,
                "name": "Block",
                "src": "650:698:2"
              }
            ],
            "id": 584,
            "name": "FunctionDefinition",
            "src": "528:820:2"
          },
          {
            "attributes": {
              "functionSelector": "81927714",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeDAIx",
              "scope": 618,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 613,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 585,
                        "name": "ElementaryTypeName",
                        "src": "1377:7:2"
                      }
                    ],
                    "id": 586,
                    "name": "VariableDeclaration",
                    "src": "1377:14:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "policyBook",
                      "scope": 613,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract PolicyBook",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "PolicyBook",
                          "referencedDeclaration": 1447,
                          "type": "contract PolicyBook"
                        },
                        "id": 587,
                        "name": "UserDefinedTypeName",
                        "src": "1393:10:2"
                      }
                    ],
                    "id": 588,
                    "name": "VariableDeclaration",
                    "src": "1393:21:2"
                  }
                ],
                "id": 589,
                "name": "ParameterList",
                "src": "1376:39:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 590,
                "name": "ParameterList",
                "src": "1425:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
                                  "typeString": "literal_string \"Insufficient funds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 591,
                            "name": "Identifier",
                            "src": "1435:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 586,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 592,
                                "name": "Identifier",
                                "src": "1456:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "balanceOf",
                                      "referencedDeclaration": 2853,
                                      "type": "function (address) view external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 588,
                                          "type": "contract PolicyBook",
                                          "value": "policyBook"
                                        },
                                        "id": 593,
                                        "name": "Identifier",
                                        "src": "1466:10:2"
                                      }
                                    ],
                                    "id": 594,
                                    "name": "MemberAccess",
                                    "src": "1466:20:2"
                                  },
                                  {
                                    "attributes": {
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address payable",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2291,
                                          "type": "function () view returns (address payable)",
                                          "value": "_msgSender"
                                        },
                                        "id": 595,
                                        "name": "Identifier",
                                        "src": "1487:10:2"
                                      }
                                    ],
                                    "id": 596,
                                    "name": "FunctionCall",
                                    "src": "1487:12:2"
                                  }
                                ],
                                "id": 597,
                                "name": "FunctionCall",
                                "src": "1466:34:2"
                              }
                            ],
                            "id": 598,
                            "name": "BinaryOperation",
                            "src": "1456:44:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e73756666696369656e742066756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Insufficient funds\"",
                              "value": "Insufficient funds"
                            },
                            "id": 599,
                            "name": "Literal",
                            "src": "1514:20:2"
                          }
                        ],
                        "id": 600,
                        "name": "FunctionCall",
                        "src": "1435:109:2"
                      }
                    ],
                    "id": 601,
                    "name": "ExpressionStatement",
                    "src": "1435:109:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 584,
                              "type": "function (address,uint256,address)",
                              "value": "mintNFT"
                            },
                            "id": 602,
                            "name": "Identifier",
                            "src": "1570:7:2"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2291,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 603,
                                "name": "Identifier",
                                "src": "1578:10:2"
                              }
                            ],
                            "id": 604,
                            "name": "FunctionCall",
                            "src": "1578:12:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 586,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 605,
                            "name": "Identifier",
                            "src": "1592:6:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyBook_$1447",
                                      "typeString": "contract PolicyBook"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 606,
                                    "name": "ElementaryTypeName",
                                    "src": "1600:7:2"
                                  }
                                ],
                                "id": 607,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1600:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 588,
                                  "type": "contract PolicyBook",
                                  "value": "policyBook"
                                },
                                "id": 608,
                                "name": "Identifier",
                                "src": "1608:10:2"
                              }
                            ],
                            "id": 609,
                            "name": "FunctionCall",
                            "src": "1600:19:2"
                          }
                        ],
                        "id": 610,
                        "name": "FunctionCall",
                        "src": "1570:50:2"
                      }
                    ],
                    "id": 611,
                    "name": "ExpressionStatement",
                    "src": "1570:50:2"
                  }
                ],
                "id": 612,
                "name": "Block",
                "src": "1425:246:2"
              }
            ],
            "id": 613,
            "name": "FunctionDefinition",
            "src": "1358:313:2"
          },
          {
            "attributes": {
              "functionSelector": "959499b6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawProfit",
              "scope": 618,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 614,
                "name": "ParameterList",
                "src": "1700:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 615,
                "name": "ParameterList",
                "src": "1712:0:2"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 616,
                "name": "Block",
                "src": "1712:48:2"
              }
            ],
            "id": 617,
            "name": "FunctionDefinition",
            "src": "1677:83:2"
          }
        ],
        "id": 618,
        "name": "ContractDefinition",
        "src": "177:1585:2"
      }
    ],
    "id": 619,
    "name": "SourceUnit",
    "src": "32:1731:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.4+commit.3f05b770.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-01-20T13:13:02.872Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}